{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap b0b56cb0f92b8de0b594","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/helpers/mathconst.ts","webpack:///./src/scripts/helpers/distancecalc.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/renders/backgroundrenderer.ts","webpack:///./src/scripts/helpers/quicksort.ts","webpack:///./src/scripts/renders/wallrenderer.ts","webpack:///./src/scripts/renders/floorrenderer.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprites/spritesfactory.ts","webpack:///./src/scripts/sprites/sprite.ts","webpack:///./src/scripts/sprites/zombie.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","width","window","innerWidth","gamesettins","height","Math","floor","height2","fov","PI","drawingdistance","floorcolor1","floorcolor2","wallheight","assetloader","AssetLoader","loadall","prog","innerHTML","ceil","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","innerText","toString","style","display","canvas","hud","ctx","getContext","ctxhud","Map","Controls","Player","size","Angle","Scene","bindevents","initonmap","this","wallssrcs","spritessrcs","gunsrcs","zspritessrcs","skylinesrcs","soundssrcs","sprites","Array","zsprites","walls","skyline","gun","sounds","prototype","toload","length","loadimages","arrsrc","arrobj","onprogress","callback","_this","i","push","Image","onload","src","loadaudio","Audio","oncanplaythrough","mathconst_1","distancecalc_1","ray_1","backgroundrenderer_1","quicksort_1","wallrenderer_1","floorrenderer_1","settings","loader","skipobjectdetectionrays","backgroundrenderer","BackgroundRenderer","wallrenderer","WallRenderer","floorrenderer","FloorRenderer","drawgun","gunimage","left","top","drawImage","getobjectsinrange","objectsinrange","DistanceCalc","mdistance","getobjectstodraw","rayangle","nearestwalldistance","objecttodraw","_i","sprites_1","object","sprite_player_angle","atan2","y","x","anglediff","PI2_0","distance","diff","anglewidth","abs","starttexture","endtexture","facing","angle","Sort","quickSort","a","b","rays","getrays","drawfloor","r","bottom","drawfloorray","walldistance","cos","colisions","Ray","cast","colisions_1","colision","type","_a","objectsinrange_1","move","PI0_5","PI1_0","PI1_5","PI4_0","sqrt","colision_1","origin","nexth","nextv","maxdistance","h","nearesty","v","nearestx","distanceh","distancev","getvalue","dy","Colision","concat","dx","nexty","ctg","nextx","tg","facingangle","image","sourceleft","sourcewidth","fillStyle","fillRect","arr","right","compare","pivot","partitionIndex","partition","swap","j","temp","wall","modx","mody","textureposition","getwallimage","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","useback","newbottom","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageY","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","normalizeangle","sin","spritesfactory_1","randparam","Uint8Array","randomize","spritesfactory","SpritesFactory","createsprite","SpriteType","Static","Zombie","setvalue","value","pos","random","sprite_1","zombie_1","mapsize","Sprite","maxheight","texright","swidth","max","frame","framemax","framelength","dead","lasttick","lastvectorchangetick","vectorchangelength","vector","getnewvector","getimage","setvector","tick","getTime","setframe","mixer_1","guncooldown","mixer","Mixer","columns","step","time","playsound","movement","correctposition","newposition","moveforward","position","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","audio","play"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(20);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(12);\r\n\tvar angle_1 = __webpack_require__(13);\r\n\tvar map_1 = __webpack_require__(14);\r\n\tvar player_1 = __webpack_require__(18);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    height2: Math.floor(width / 1.8 / 2),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311',\r\n\t    wallheight: Math.floor(width / 1.8) * 0.8\r\n\t};\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () {\r\n\t    document.getElementById('loading-container').style.display = 'none';\r\n\t    var canvas = document.getElementById('gamecanvas');\r\n\t    var hud = document.getElementById('hudcanvas');\r\n\t    var ctx = canvas.getContext('2d');\r\n\t    var ctxhud = hud.getContext('2d');\r\n\t    var map = new map_1.Map(150, 0.3, assetloader, gamesettins);\r\n\t    var controls = new controls_1.Controls();\r\n\t    var player = new player_1.Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new angle_1.Angle(0), assetloader);\r\n\t    var scene = new scene_1.Scene(ctx, ctxhud, gamesettins, assetloader);\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    hud.width = gamesettins.width;\r\n\t    hud.height = gamesettins.height;\r\n\t    hud.style.width = gamesettins.width + \"px\";\r\n\t    hud.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, hud);\r\n\t    player.initonmap(map);\r\n\t    var lastrender = Date.now();\r\n\t    function render() {\r\n\t        var now = Date.now();\r\n\t        var delta = now - lastrender;\r\n\t        lastrender = now;\r\n\t        player.getcontrols(controls, map, delta);\r\n\t        scene.renderframe(delta, map, player, gamesettins.fov);\r\n\t        requestAnimationFrame(render);\r\n\t        fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    }\r\n\t    render();\r\n\t});\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.gunsrcs = [\r\n\t            './assets/sprites/gun.png'\r\n\t        ];\r\n\t        this.zspritessrcs = [\r\n\t            './assets/sprites/femalezombiewalk/Walk (1).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (2).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (3).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (4).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (5).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (6).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (7).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (8).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (9).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (10).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (1).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (2).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (3).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (4).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (5).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (6).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (7).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (8).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (9).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (10).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (1).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (2).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (3).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (4).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (5).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (6).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (7).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (8).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (9).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (10).png',\r\n\t            './assets/sprites/malezombiedead/Dead (1).png',\r\n\t            './assets/sprites/malezombiedead/Dead (2).png',\r\n\t            './assets/sprites/malezombiedead/Dead (3).png',\r\n\t            './assets/sprites/malezombiedead/Dead (4).png',\r\n\t            './assets/sprites/malezombiedead/Dead (5).png',\r\n\t            './assets/sprites/malezombiedead/Dead (6).png',\r\n\t            './assets/sprites/malezombiedead/Dead (7).png',\r\n\t            './assets/sprites/malezombiedead/Dead (8).png',\r\n\t            './assets/sprites/malezombiedead/Dead (9).png',\r\n\t            './assets/sprites/malezombiedead/Dead (10).png',\r\n\t        ];\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        this.zsprites = new Array();\r\n\t        this.walls = new Array();\r\n\t        this.skyline = new Array();\r\n\t        this.gun = new Array();\r\n\t        this.sounds = new Array();\r\n\t    }\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.zsprites.length +\r\n\t            this.skyline.length +\r\n\t            this.gun.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadimages = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Image());\r\n\t            arrobj[i].onload = function () {\r\n\t                onprogress(++_this.loaded / _this.toload());\r\n\t                if (_this.loaded >= _this.toload())\r\n\t                    callback();\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadaudio = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Audio());\r\n\t            arrobj[i].oncanplaythrough = function () {\r\n\t                //onprogress(++this.loaded / this.toload())\r\n\t                //if (this.loaded >= this.toload()) callback()\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        this.loadimages(this.wallssrcs, this.walls, onprogress, callback);\r\n\t        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback);\r\n\t        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback);\r\n\t        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback);\r\n\t        this.loadimages(this.gunsrcs, this.gun, onprogress, callback);\r\n\t        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback);\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar backgroundrenderer_1 = __webpack_require__(8);\r\n\tvar quicksort_1 = __webpack_require__(9);\r\n\tvar wallrenderer_1 = __webpack_require__(10);\r\n\tvar floorrenderer_1 = __webpack_require__(11);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, ctxhud, settings, loader) {\r\n\t        this.ctx = ctx;\r\n\t        this.ctxhud = ctxhud;\r\n\t        this.settings = settings;\r\n\t        this.loader = loader;\r\n\t        this.skipobjectdetectionrays = 5;\r\n\t        this.lastrender = Date.now();\r\n\t        this.backgroundrenderer = new backgroundrenderer_1.BackgroundRenderer(loader, settings);\r\n\t        this.wallrenderer = new wallrenderer_1.WallRenderer(loader, settings);\r\n\t        this.floorrenderer = new floorrenderer_1.FloorRenderer(loader, settings);\r\n\t    }\r\n\t    Scene.prototype.drawgun = function () {\r\n\t        var gunimage = this.loader.gun[0];\r\n\t        var left = Math.floor(this.settings.width * 0.60);\r\n\t        var top = Math.floor(this.settings.height * 0.60);\r\n\t        this.ctxhud.drawImage(gunimage, 0, 0, gunimage.width, gunimage.height, left, top, this.settings.width - left, this.settings.height - top);\r\n\t    };\r\n\t    Scene.prototype.getobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (distancecalc_1.DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, rayangle, left, nearestwalldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x);\r\n\t            var anglediff = rayangle - sprite_player_angle;\r\n\t            if (anglediff < -Math.PI)\r\n\t                anglediff += mathconst_1.PI2_0;\r\n\t            if (anglediff > Math.PI)\r\n\t                anglediff -= mathconst_1.PI2_0;\r\n\t            if (anglediff < this.settings.fov) {\r\n\t                object.distance = distancecalc_1.DistanceCalc.distance(player, object);\r\n\t                if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n\t                    if (object.distance < 0.20)\r\n\t                        object.distance = 0.20;\r\n\t                    var diff = anglediff / Math.atan2(object.anglewidth, object.distance);\r\n\t                    if (Math.abs(diff) <= 1) {\r\n\t                        diff = Math.abs((diff - 1));\r\n\t                        if (object.left < 0) {\r\n\t                            object.left = left;\r\n\t                            object.starttexture = diff;\r\n\t                        }\r\n\t                        object.width += this.skipobjectdetectionrays;\r\n\t                        object.endtexture = diff;\r\n\t                        objecttodraw.push(object);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, fov) {\r\n\t        this.backgroundrenderer.render(this.ctx, player.facing.angle, this.settings.fov);\r\n\t        var objectsinrange = this.getobjectsinrange(player, map.sprites);\r\n\t        quicksort_1.Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, function (a, b) { return a.distance > b.distance; });\r\n\t        var rays = player.getrays(this.settings.width, this.settings.fov);\r\n\t        var drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.distance(player, colision) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.wallrenderer.render(this.ctx, r, distance, colision);\r\n\t                }\r\n\t                bottom = this.floorrenderer.render(this.ctx, r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            if (r % this.skipobjectdetectionrays == 0) {\r\n\t                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.left >= 0)\r\n\t                object.render(this.ctx);\r\n\t            object.left = -1;\r\n\t            object.width = 0;\r\n\t            object.move(delta);\r\n\t        }\r\n\t        this.drawgun();\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\texports.PI4_0 = 4 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.distance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    DistanceCalc.mdistance = function (a, b) {\r\n\t        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        var distanceh = distancecalc_1.DistanceCalc.mdistance(origin, h);\r\n\t        var distancev = distancecalc_1.DistanceCalc.mdistance(origin, v);\r\n\t        if (distanceh < distancev) {\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y\r\n\t        };\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(x, y, type) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar BackgroundRenderer = (function () {\r\n\t    function BackgroundRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    BackgroundRenderer.prototype.render = function (ctx, facingangle, fov) {\r\n\t        var image = this.loader.skyline[0];\r\n\t        var sourceleft = Math.floor((image.width * (mathconst_1.PI2_0 - facingangle)) / mathconst_1.PI4_0);\r\n\t        var sourcewidth = Math.floor(image.width * 0.5 * (fov / mathconst_1.PI2_0));\r\n\t        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2);\r\n\t        ctx.fillStyle = this.settings.floorcolor1;\r\n\t        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    return BackgroundRenderer;\r\n\t}());\r\n\texports.BackgroundRenderer = BackgroundRenderer;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sort = (function () {\r\n\t    function Sort() {\r\n\t    }\r\n\t    Sort.quickSort = function (arr, left, right, compare) {\r\n\t        var pivot;\r\n\t        var partitionIndex;\r\n\t        if (left < right) {\r\n\t            pivot = right;\r\n\t            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\t            //sort left and right\r\n\t            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n\t            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n\t        }\r\n\t        return arr;\r\n\t    };\r\n\t    Sort.partition = function (arr, pivot, left, right, compare) {\r\n\t        var partitionIndex = left;\r\n\t        for (var i = left; i < right; i++) {\r\n\t            if (compare(arr[i], arr[pivot])) {\r\n\t                this.swap(arr, i, partitionIndex);\r\n\t                partitionIndex++;\r\n\t            }\r\n\t        }\r\n\t        this.swap(arr, right, partitionIndex);\r\n\t        return partitionIndex;\r\n\t    };\r\n\t    Sort.swap = function (arr, i, j) {\r\n\t        var temp = arr[i];\r\n\t        arr[i] = arr[j];\r\n\t        arr[j] = temp;\r\n\t    };\r\n\t    return Sort;\r\n\t}());\r\n\texports.Sort = Sort;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar WallRenderer = (function () {\r\n\t    function WallRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    WallRenderer.prototype.render = function (ctx, left, distance, wall) {\r\n\t        var modx = wall.x - Math.floor(wall.x);\r\n\t        var mody = wall.y - Math.floor(wall.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        var image = this.getwallimage(wall.type, distance);\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var top = Math.floor(this.settings.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        ctx.drawImage(image, texleft, 0, 1, image.height, left, top, 1, height);\r\n\t        if (left % 3 == 0) {\r\n\t            ctx.beginPath();\r\n\t            ctx.moveTo(left, top);\r\n\t            ctx.lineTo(left, this.settings.height - top);\r\n\t            ctx.lineWidth = 4;\r\n\t            ctx.strokeStyle = '#000000';\r\n\t            ctx.fillStyle = '#000000';\r\n\t            ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            ctx.stroke();\r\n\t            ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    WallRenderer.prototype.getwallimage = function (type, distance) {\r\n\t        if (distance < 3) {\r\n\t            return this.loader.walls[type - 1];\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            return this.loader.walls[type - 1 + 5];\r\n\t        }\r\n\t        return this.loader.walls[type - 1 + 10];\r\n\t    };\r\n\t    return WallRenderer;\r\n\t}());\r\n\texports.WallRenderer = WallRenderer;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar FloorRenderer = (function () {\r\n\t    function FloorRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    FloorRenderer.prototype.render = function (ctx, left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.settings.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            ctx.beginPath();\r\n\t            ctx.moveTo(left, bottom);\r\n\t            ctx.lineTo(left, newbottom);\r\n\t            ctx.lineWidth = 3;\r\n\t            ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    return FloorRenderer;\r\n\t}());\r\n\texports.FloorRenderer = FloorRenderer;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 17)\r\n\t            this.shoot = true;\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e, canvas) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageY < canvas.height * 0.5) {\r\n\t            this.shoot = true;\r\n\t        }\r\n\t        else {\r\n\t            if (t.pageX < window.innerWidth * 0.333)\r\n\t                this.rotateleft = true;\r\n\t            else if (t.pageX < window.innerWidth * 0.666)\r\n\t                this.forward = true;\r\n\t            else\r\n\t                this.rotateright = true;\r\n\t        }\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e, canvas); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('hudcanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar spritesfactory_1 = __webpack_require__(15);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam, loader, settings) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        var spritesfactory = new spritesfactory_1.SpritesFactory(loader, size, settings);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 10; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Static));\r\n\t        }\r\n\t        for (var i = 0; i < size * 30; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Zombie));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(16);\r\n\tvar zombie_1 = __webpack_require__(17);\r\n\tvar SpritesFactory = (function () {\r\n\t    function SpritesFactory(loader, mapsize, settings) {\r\n\t        this.loader = loader;\r\n\t        this.mapsize = mapsize;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    SpritesFactory.prototype.createsprite = function (type) {\r\n\t        switch (type) {\r\n\t            case SpriteType.Static: return new sprite_1.Sprite(Math.random() * this.mapsize, Math.random() * this.mapsize, this.loader.sprites[Math.floor(Math.random() * this.loader.sprites.length)], this.settings);\r\n\t            case SpriteType.Zombie: return new zombie_1.Zombie(Math.random() * this.mapsize, Math.random() * this.mapsize, Math.floor(Math.random() * 2), this.loader, this.settings);\r\n\t        }\r\n\t    };\r\n\t    return SpritesFactory;\r\n\t}());\r\n\texports.SpritesFactory = SpritesFactory;\r\n\tvar SpriteType;\r\n\t(function (SpriteType) {\r\n\t    SpriteType[SpriteType[\"Static\"] = 1] = \"Static\";\r\n\t    SpriteType[SpriteType[\"Zombie\"] = 2] = \"Zombie\";\r\n\t})(SpriteType || (SpriteType = {}));\r\n\texports.SpriteType = SpriteType;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.2;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.move = function (delta) {\r\n\t    };\r\n\t    Sprite.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Zombie = (function () {\r\n\t    function Zombie(x, y, type, loader, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t        this.loader = loader;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.35;\r\n\t        this.frame = 0;\r\n\t        this.framemax = 9;\r\n\t        this.framelength = 100;\r\n\t        this.dead = false;\r\n\t        this.lasttick = 0;\r\n\t        this.lastvectorchangetick = 0;\r\n\t        this.vectorchangelength = 3000;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t        this.vector = this.getnewvector();\r\n\t    }\r\n\t    Zombie.prototype.getnewvector = function () {\r\n\t        return {\r\n\t            x: Math.sin((Math.random() * 2) - 1),\r\n\t            y: Math.sin((Math.random() * 2) - 1)\r\n\t        };\r\n\t    };\r\n\t    Zombie.prototype.getimage = function () {\r\n\t        if (this.type == 0) {\r\n\t            return this.loader.zsprites[0 + this.frame + (this.dead ? 10 : 0)];\r\n\t        }\r\n\t        else {\r\n\t            return this.loader.zsprites[20 + this.frame + (this.dead ? 10 : 0)];\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.setvector = function () {\r\n\t        var tick = (new Date()).getTime();\r\n\t        if (tick > this.lastvectorchangetick) {\r\n\t            this.vector = this.getnewvector();\r\n\t            this.lastvectorchangetick = tick + this.vectorchangelength;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.setframe = function () {\r\n\t        var tick = (new Date()).getTime();\r\n\t        if (tick > this.lasttick) {\r\n\t            if (this.frame < this.framemax)\r\n\t                this.frame++;\r\n\t            else if (!this.dead)\r\n\t                this.frame = 0;\r\n\t            this.lasttick = tick + this.framelength;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.move = function (delta) {\r\n\t        if (!this.dead) {\r\n\t            this.x += this.vector.x * (delta / 5000);\r\n\t            this.y += this.vector.y * (delta / 5000);\r\n\t            this.setvector();\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.render = function (ctx) {\r\n\t        this.setframe();\r\n\t        var image = this.getimage();\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * image.width);\r\n\t        var texright = Math.floor(this.endtexture * image.width);\r\n\t        var height = Math.floor(wallheight * 0.8);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(image, texleft, 0, swidth, image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Zombie;\r\n\t}());\r\n\texports.Zombie = Zombie;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(19);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(13);\r\n\tvar Player = (function () {\r\n\t    function Player(x, y, facing, loader) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.facing = facing;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns, fov) {\r\n\t        var step = fov / columns;\r\n\t        var angle = this.facing.angle + fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, newposition) {\r\n\t        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n\t            newposition.x = this.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n\t            newposition.y = this.y;\r\n\t        }\r\n\t        this.x = newposition.x;\r\n\t        this.y = newposition.y;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        this.correctposition(map, {\r\n\t            x: this.x - this.facing.cos * delta / 500,\r\n\t            y: this.y - this.facing.sin * delta / 500\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n\t            this.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        var audio = new Audio(this.loader.soundssrcs[index]);\r\n\t        audio.play();\r\n\t        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n\t        //     let time = new Date()\r\n\t        //     let now = time.getTime()\r\n\t        //     console.log(this.loader.sounds[index].duration)\r\n\t        //     if (this.audiochannels[a].finish < now) {\r\n\t        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n\t        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n\t        //         this.audiochannels[a].audioel.play()\r\n\t        //         break\r\n\t        //     }\r\n\t        // }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b0b56cb0f92b8de0b594","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    height2: Math.floor(width / 1.8 / 2),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311',\r\n    wallheight: Math.floor(width / 1.8) * 0.8\r\n}\r\n\r\nlet assetloader = new AssetLoader()\r\n\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { \r\n        document.getElementById('loading-container').style.display = 'none'; \r\n        let canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        let hud = <HTMLCanvasElement>document.getElementById('hudcanvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let ctxhud = hud.getContext('2d')\r\n        let map = new Map(150, 0.3, assetloader, gamesettins)\r\n        let controls = new Controls()\r\n        let player = new Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new Angle(0), assetloader)\r\n        let scene = new Scene(ctx, ctxhud, gamesettins, assetloader)\r\n\r\n        canvas.width = gamesettins.width\r\n        canvas.height = gamesettins.height\r\n        canvas.style.width = `${gamesettins.width}px`\r\n        canvas.style.height = `${gamesettins.height}px`\r\n        hud.width = gamesettins.width\r\n        hud.height = gamesettins.height\r\n        hud.style.width = `${gamesettins.width}px`\r\n        hud.style.height = `${gamesettins.height}px`\r\n        controls.bindevents(document, hud)\r\n        player.initonmap(map)\r\n\r\n\r\n        let lastrender: number = Date.now()\r\n        function render() {\r\n            let now = Date.now()\r\n            let delta = now - lastrender\r\n            lastrender = now\r\n            player.getcontrols(controls, map, delta)\r\n            scene.renderframe(delta, map, player, gamesettins.fov)\r\n            requestAnimationFrame(render)\r\n            fps.innerText = (Math.floor(1000 / delta)).toString()\r\n        }\r\n        render() \r\n    }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n\r\n        this.gunsrcs = [\r\n            './assets/sprites/gun.png'\r\n        ]\r\n\r\n        this.zspritessrcs = [\r\n            './assets/sprites/femalezombiewalk/Walk (1).png',\r\n            './assets/sprites/femalezombiewalk/Walk (2).png',\r\n            './assets/sprites/femalezombiewalk/Walk (3).png',\r\n            './assets/sprites/femalezombiewalk/Walk (4).png',\r\n            './assets/sprites/femalezombiewalk/Walk (5).png',\r\n            './assets/sprites/femalezombiewalk/Walk (6).png',\r\n            './assets/sprites/femalezombiewalk/Walk (7).png',\r\n            './assets/sprites/femalezombiewalk/Walk (8).png',\r\n            './assets/sprites/femalezombiewalk/Walk (9).png',\r\n            './assets/sprites/femalezombiewalk/Walk (10).png',\r\n            './assets/sprites/femalezombiedead/Dead (1).png',\r\n            './assets/sprites/femalezombiedead/Dead (2).png',\r\n            './assets/sprites/femalezombiedead/Dead (3).png',\r\n            './assets/sprites/femalezombiedead/Dead (4).png',\r\n            './assets/sprites/femalezombiedead/Dead (5).png',\r\n            './assets/sprites/femalezombiedead/Dead (6).png',\r\n            './assets/sprites/femalezombiedead/Dead (7).png',\r\n            './assets/sprites/femalezombiedead/Dead (8).png',\r\n            './assets/sprites/femalezombiedead/Dead (9).png',\r\n            './assets/sprites/femalezombiedead/Dead (10).png',\r\n            './assets/sprites/malezombiewalk/Walk (1).png',\r\n            './assets/sprites/malezombiewalk/Walk (2).png',\r\n            './assets/sprites/malezombiewalk/Walk (3).png',\r\n            './assets/sprites/malezombiewalk/Walk (4).png',\r\n            './assets/sprites/malezombiewalk/Walk (5).png',\r\n            './assets/sprites/malezombiewalk/Walk (6).png',\r\n            './assets/sprites/malezombiewalk/Walk (7).png',\r\n            './assets/sprites/malezombiewalk/Walk (8).png',\r\n            './assets/sprites/malezombiewalk/Walk (9).png',\r\n            './assets/sprites/malezombiewalk/Walk (10).png',\r\n            './assets/sprites/malezombiedead/Dead (1).png',\r\n            './assets/sprites/malezombiedead/Dead (2).png',\r\n            './assets/sprites/malezombiedead/Dead (3).png',\r\n            './assets/sprites/malezombiedead/Dead (4).png',\r\n            './assets/sprites/malezombiedead/Dead (5).png',\r\n            './assets/sprites/malezombiedead/Dead (6).png',\r\n            './assets/sprites/malezombiedead/Dead (7).png',\r\n            './assets/sprites/malezombiedead/Dead (8).png',\r\n            './assets/sprites/malezombiedead/Dead (9).png',\r\n            './assets/sprites/malezombiedead/Dead (10).png',\r\n        ]\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        this.zsprites = new Array<HTMLImageElement>()\r\n        this.walls = new Array<HTMLImageElement>()\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        this.gun = new Array<HTMLImageElement>()\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private zspritessrcs: Array<string>\r\n    public zsprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>    \r\n    private gunsrcs: Array<string>\r\n    public gun: Array<HTMLImageElement>\r\n    public soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private toload() {\r\n        return this.walls.length +\r\n            this.sprites.length +\r\n            this.zsprites.length +\r\n            this.skyline.length + \r\n            this.gun.length\r\n    }\r\n\r\n    private loadimages(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLImageElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Image())\r\n            arrobj[i].onload = () => {\r\n                onprogress(++this.loaded / this.toload())\r\n                if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    private loadaudio(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLAudioElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Audio())\r\n            arrobj[i].oncanplaythrough = () => {\r\n                //onprogress(++this.loaded / this.toload())\r\n                //if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        this.loadimages(this.wallssrcs, this.walls, onprogress, callback)\r\n        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback)\r\n        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback)\r\n        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback)\r\n        this.loadimages(this.gunsrcs, this.gun, onprogress, callback)\r\n        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0, PI4_0 } from './helpers/mathconst';\r\nimport { DistanceCalc } from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { BackgroundRenderer } from \"./renders/backgroundrenderer\";\r\nimport { Sort } from \"./helpers/quicksort\";\r\nimport { WallRenderer } from \"./renders/wallrenderer\";\r\nimport { FloorRenderer } from \"./renders/floorrenderer\";\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private backgroundrenderer: BackgroundRenderer\r\n    private wallrenderer: WallRenderer\r\n    private floorrenderer: FloorRenderer\r\n    private skipobjectdetectionrays: number = 5\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private ctxhud: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private loader: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.backgroundrenderer = new BackgroundRenderer(loader, settings)\r\n        this.wallrenderer = new WallRenderer(loader, settings)\r\n        this.floorrenderer = new FloorRenderer(loader, settings)\r\n    }\r\n\r\n    private drawgun() {\r\n        let gunimage = this.loader.gun[0]\r\n        let left = Math.floor(this.settings.width * 0.60)\r\n        let top = Math.floor(this.settings.height * 0.60)\r\n        this.ctxhud.drawImage(gunimage, 0, 0, gunimage.width, gunimage.height, left, top, this.settings.width - left, this.settings.height - top)\r\n    }\r\n\r\n    private getobjectsinrange(player: Player, sprites: Array<ISprite>) {\r\n        let objectsinrange = new Array<ISprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<ISprite>, rayangle: number, left: number, nearestwalldistance: number) {\r\n        let objecttodraw = new Array<ISprite>()\r\n        for (let object of sprites) {\r\n            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x)\r\n\r\n            let anglediff = rayangle - sprite_player_angle\r\n            if (anglediff < -Math.PI) anglediff += PI2_0\r\n            if (anglediff > Math.PI) anglediff -= PI2_0\r\n\r\n            if (anglediff < this.settings.fov) {\r\n                object.distance = DistanceCalc.distance(player, object)\r\n                if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n                    if (object.distance < 0.20) object.distance = 0.20\r\n                    let diff = anglediff / Math.atan2(object.anglewidth, object.distance)\r\n                    if (Math.abs(diff) <= 1) {\r\n                        diff = Math.abs((diff - 1))\r\n                        if (object.left < 0) {\r\n                            object.left = left\r\n                            object.starttexture = diff\r\n                        }\r\n                        object.width += this.skipobjectdetectionrays\r\n                        object.endtexture = diff\r\n                        objecttodraw.push(object)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, fov: number) {\r\n\r\n        this.backgroundrenderer.render(this.ctx, player.facing.angle, this.settings.fov)\r\n        let objectsinrange = this.getobjectsinrange(player, map.sprites)\r\n        Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, (a, b) => a.distance > b.distance)\r\n        let rays = player.getrays(this.settings.width, this.settings.fov)\r\n        let drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.distance(player, colision) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.wallrenderer.render(this.ctx, r, distance, colision)\r\n                }\r\n                bottom = this.floorrenderer.render(this.ctx, r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            if (r % this.skipobjectdetectionrays == 0) {\r\n                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance)\r\n            }\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.left >= 0) object.render(this.ctx)\r\n            object.left = -1\r\n            object.width = 0\r\n            object.move(delta)\r\n        }\r\n\r\n        this.drawgun()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\r\nexport const PI4_0: number = 4 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/mathconst.ts","import { IPoint } from '../ipoint';\r\nexport class DistanceCalc {\r\n    public static distance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n\r\n    public static mdistance(a:IPoint, b:IPoint) {\r\n        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/distancecalc.ts","import {DistanceCalc} from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './helpers/mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IPoint,\r\n        nextv: IPoint,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n        let distanceh = DistanceCalc.mdistance(origin, h)\r\n        let distancev = DistanceCalc.mdistance(origin, v)\r\n\r\n        if (distanceh < distancev) {\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h.x, h.y, type)]\r\n            } else {\r\n                return [new Colision(h.x, h.y, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh))\r\n            }\r\n        } else {\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v.x, v.y, type)]\r\n            } else {\r\n                return [new Colision(v.x, v.y, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev))\r\n            }\r\n        }\r\n    }\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IPoint {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IPoint {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision implements IPoint {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class BackgroundRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, facingangle: number, fov: number) {\r\n        let image = this.loader.skyline[0]\r\n        let sourceleft = Math.floor((image.width * (PI2_0 - facingangle)) / PI4_0)\r\n        let sourcewidth = Math.floor(image.width * 0.5 * (fov / PI2_0))\r\n        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2)\r\n        ctx.fillStyle = this.settings.floorcolor1\r\n        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/backgroundrenderer.ts","import { IComparable } from \"./icomparable\";\r\n\r\nexport class Sort {\r\n\r\n    public static quickSort<T>(arr: Array<T>, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n        let pivot: number\r\n        let partitionIndex: number\r\n\r\n        if (left < right) {\r\n            pivot = right;\r\n            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\r\n            //sort left and right\r\n            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    private static partition<T>(arr: Array<T>, pivot: number, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n\r\n        let partitionIndex = left;\r\n        for (var i = left; i < right; i++) {\r\n            if (compare(arr[i], arr[pivot])) {\r\n                this.swap(arr, i, partitionIndex);\r\n                partitionIndex++;\r\n            }\r\n        }\r\n        this.swap(arr, right, partitionIndex);\r\n        return partitionIndex;\r\n    }\r\n\r\n    private static swap<T>(arr: Array<T>, i: number, j: number) {\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/quicksort.ts","import {Colision} from '../colision';\r\nimport { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class WallRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(\r\n        ctx: CanvasRenderingContext2D,\r\n        left: number,\r\n        distance: number,\r\n        wall: Colision\r\n    ) {\r\n        let modx = wall.x - Math.floor(wall.x)\r\n        let mody = wall.y - Math.floor(wall.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        let image = this.getwallimage(wall.type, distance)\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let top = Math.floor(this.settings.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        ctx.drawImage(image, texleft, 0, 1, image.height, left, top, 1, height)\r\n        if (left % 3 == 0) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(left, top)\r\n            ctx.lineTo(left, this.settings.height - top)\r\n            ctx.lineWidth = 4\r\n            ctx.strokeStyle = '#000000'\r\n            ctx.fillStyle = '#000000'\r\n            ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            ctx.stroke()\r\n            ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private getwallimage(type: number, distance: number) {\r\n        if (distance < 3) {\r\n            return this.loader.walls[type - 1]\r\n        } else if (distance < 8) {\r\n            return this.loader.walls[type - 1 + 5]\r\n        }\r\n        return this.loader.walls[type - 1 + 10]\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/wallrenderer.ts","import {Colision} from '../colision';\r\nimport { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class FloorRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.settings.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(left, bottom)\r\n            ctx.lineTo(left, newbottom)\r\n            ctx.lineWidth = 3\r\n            ctx.strokeStyle = this.settings.floorcolor2\r\n            ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/floorrenderer.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 17) this.shoot = true\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent, canvas: HTMLCanvasElement) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageY < canvas.height * 0.5) {\r\n            this.shoot = true\r\n        } else {\r\n            if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n            else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n            else this.rotateright = true\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLCanvasElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e, canvas) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('hudcanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './helpers/mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import { ISettings } from './isettings';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { SpritesFactory, SpriteType } from \"./sprites/spritesfactory\"\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<ISprite>\r\n\r\n    constructor(size: number, randparam: number, loader: AssetLoader, settings: ISettings) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n        this.randomize(randparam)\r\n\r\n        let spritesfactory = new SpritesFactory(loader, size, settings)\r\n\r\n        this.sprites = new Array<ISprite>()\r\n        for (let i = 0; i < size * 10; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Static))\r\n        }\r\n        for (let i = 0; i < size * 30; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Zombie))\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                }\r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISprite } from \"./isprite\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { Zombie } from \"./zombie\";\r\n\r\nexport { SpritesFactory, SpriteType }\r\n\r\nclass SpritesFactory {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private mapsize: number,\r\n        private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public createsprite(type: SpriteType): ISprite {\r\n        switch (type) {\r\n            case SpriteType.Static: return new Sprite(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.loader.sprites[Math.floor(Math.random() * this.loader.sprites.length)],\r\n                this.settings\r\n            )\r\n            case SpriteType.Zombie: return new Zombie(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                Math.floor(Math.random() * 2),\r\n                this.loader,\r\n                this.settings\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nenum SpriteType {\r\n    Static = 1,\r\n    Zombie\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/spritesfactory.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Sprite implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.2\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public move(delta:number) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/sprite.ts","import { IPoint } from '../ipoint';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Zombie implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.35\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n    private frame: number = 0\r\n    private framemax: number = 9\r\n    private framelength: number = 100\r\n    private dead: boolean = false\r\n    private lasttick: number = 0\r\n    private lastvectorchangetick: number = 0\r\n    private vectorchangelength: number = 3000\r\n    private vector: IPoint\r\n\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        private type: number,\r\n        private loader: AssetLoader,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n        this.vector = this.getnewvector()\r\n    }\r\n\r\n    private getnewvector() {\r\n        return {\r\n            x: Math.sin((Math.random() * 2) - 1),\r\n            y: Math.sin((Math.random() * 2) - 1)\r\n        }\r\n    }\r\n\r\n    private getimage() {\r\n        if (this.type == 0) {\r\n            return this.loader.zsprites[0 + this.frame + (this.dead ? 10 : 0)]\r\n        } else {\r\n            return this.loader.zsprites[20 + this.frame + (this.dead ? 10 : 0)]\r\n        }\r\n    }\r\n\r\n    private setvector() {\r\n        let tick = (new Date()).getTime()\r\n        if (tick > this.lastvectorchangetick) {\r\n            this.vector = this.getnewvector()\r\n            this.lastvectorchangetick = tick + this.vectorchangelength\r\n        }\r\n    }\r\n\r\n    private setframe() {\r\n        let tick = (new Date()).getTime()\r\n        if (tick > this.lasttick) {\r\n            if (this.frame < this.framemax) this.frame++\r\n            else if (!this.dead) this.frame = 0\r\n            this.lasttick = tick + this.framelength\r\n        }\r\n    }\r\n\r\n    public move(delta: number) {\r\n        if (!this.dead) {\r\n            this.x += this.vector.x * (delta / 5000)\r\n            this.y += this.vector.y * (delta / 5000)\r\n            this.setvector()\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        this.setframe()\r\n        let image = this.getimage()\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * image.width)\r\n        let texright = Math.floor(this.endtexture * image.width)\r\n        let height = Math.floor(wallheight * 0.8)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(image, texleft, 0, swidth, image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/zombie.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './helpers/mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player implements IPoint {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public facing: Angle,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number, fov: number) {\r\n        var step = fov / columns\r\n        var angle = this.facing.angle + fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, newposition: IPoint) {\r\n        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n            newposition.x = this.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n            newposition.y = this.y\r\n        }\r\n        this.x = newposition.x\r\n        this.y = newposition.y\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        this.correctposition(map, {\r\n            x: this.x - this.facing.cos * delta / 500,\r\n            y: this.y - this.facing.sin * delta / 500\r\n        })\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n            this.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        var audio = new Audio(this.loader.soundssrcs[index]);\r\n        audio.play();\r\n        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n        //     let time = new Date()\r\n        //     let now = time.getTime()\r\n        //     console.log(this.loader.sounds[index].duration)\r\n        //     if (this.audiochannels[a].finish < now) {\r\n        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n        //         this.audiochannels[a].audioel.play()\r\n        //         break\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts"],"sourceRoot":""}