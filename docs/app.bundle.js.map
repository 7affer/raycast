{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap a0ba3ff991e914ddc80b","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/mathconst.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprite.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","fps","innerText","Math","floor","toString","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","document","getElementById","width","window","innerWidth","gamesettins","height","fov","PI","drawingdistance","floorcolor1","floorcolor2","canvas","ctx","getContext","Map","Controls","assetloader","AssetLoader","Player","x","size","y","Angle","Scene","style","bindevents","initonmap","loadall","prog","innerHTML","ceil","display","this","wallssrcs","walls","Array","item","push","Image","spritessrcs","sprites","skylinesrcs","skyline","soundssrcs","sounds","Audio","prototype","isloaded","toload","length","onprogress","callback","_this","i","onload","src","oncanplaythrough","mathconst_1","ray_1","distancecalc_1","settings","assets","height2","wallheight","renderbackground","image","PI4","sleft","PI2_0","facing","angle","abs","swidth","drawImage","fillStyle","fillRect","renderwall","row","distance","textureposition","top","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","drawwall","left","wall","modx","point","mody","type","drawobject","object","bottom","starttexture","texright","endtexture","max","end","start","drawfloor","useback","newbottom","filterobjectsinrange","objectsinrange","position","normalizeangle","atan2","getobjectstodraw","ray","walldistance","objecttodraw","_i","sprites_1","DistanceCalc","getdistance","PI1_5","diff","rays","getrays","r","drawfloorray","cos","colisions","Ray","cast","colisions_1","colision","_a","objectsinrange_1","PI0_5","PI1_0","sin","tg","ctg","dx","dy","colision_1","nearesty","origin","nexty","manhattandistance","nearestx","nextx","nexth","nextv","maxdistance","h","v","getvalue","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","sprite_1","randparam","Uint8Array","randomize","Sprite","random","setvalue","value","pos","mixer_1","loader","guncooldown","mixer","Mixer","columns","step","time","getTime","playsound","movement","correctposition","moveforward","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","console","log","duration","play"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(14);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(9);\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar map_1 = __webpack_require__(10);\r\n\tvar player_1 = __webpack_require__(12);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311'\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(150, 0.3);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov, assetloader);\r\n\tvar scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tvar lastrender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastrender;\r\n\t    lastrender = now;\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    scene.renderframe(delta, map, player);\r\n\t    requestAnimationFrame(render);\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t}\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () { document.getElementById('loading-container').style.display = 'none'; render(); });\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.walls = new Array();\r\n\t        for (var item in this.wallssrcs)\r\n\t            this.walls.push(new Image());\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        for (var item in this.spritessrcs)\r\n\t            this.sprites.push(new Image());\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.skyline = new Array();\r\n\t        for (var item in this.skylinesrcs)\r\n\t            this.skyline.push(new Image());\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sounds = new Array();\r\n\t        for (var item in this.soundssrcs)\r\n\t            this.sounds.push(new Audio());\r\n\t    }\r\n\t    AssetLoader.prototype.isloaded = function () {\r\n\t        return this.loaded == this.toload();\r\n\t    };\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.skyline.length +\r\n\t            this.sounds.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t        for (var i in this.spritessrcs) {\r\n\t            this.sprites[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sprites[i].src = this.spritessrcs[i];\r\n\t        }\r\n\t        for (var i in this.skylinesrcs) {\r\n\t            this.skyline[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.skyline[i].src = this.skylinesrcs[i];\r\n\t        }\r\n\t        for (var i in this.soundssrcs) {\r\n\t            this.sounds[i].oncanplaythrough = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sounds[i].src = this.soundssrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar distancecalc_1 = __webpack_require__(8);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function (player) {\r\n\t        var image = this.assets.skyline[0];\r\n\t        var PI4 = 4 * Math.PI;\r\n\t        var sleft = ((mathconst_1.PI2_0 - (player.facing.angle + player.fov / 2)) / PI4) * image.width;\r\n\t        sleft = Math.abs(sleft);\r\n\t        sleft = Math.floor(sleft);\r\n\t        var swidth = Math.floor((image.width * player.fov) / PI4);\r\n\t        var height = Math.floor(this.settings.height * 0.5);\r\n\t        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.point.x - Math.floor(wall.point.x);\r\n\t        var mody = wall.point.y - Math.floor(wall.point.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        if (distance < 3) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition);\r\n\t        }\r\n\t        else {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawobject = function (object) {\r\n\t        var wallheight = Math.ceil(this.wallheight / object.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var image = this.assets.sprites[object.type];\r\n\t        var texleft = Math.floor(object.starttexture * image.width);\r\n\t        var texright = Math.floor(object.endtexture * image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        var width = Math.max(1, object.end - object.start);\r\n\t        this.ctx.drawImage(image, texleft, 0, swidth, image.height, object.start, top, width, height);\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 3;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.filterobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (Math.abs(player.position.x - sprites[i].position.x) < this.settings.drawingdistance &&\r\n\t                Math.abs(player.position.y - sprites[i].position.y) < this.settings.drawingdistance) {\r\n\t                sprites[i].angle = angle_1.Angle.normalizeangle(Math.atan2(sprites[i].position.y - player.position.y, sprites[i].position.x - player.position.x));\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, ray, row, walldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            object.distance = distancecalc_1.DistanceCalc.getdistance(player.position, object.position);\r\n\t            if (object.distance < this.settings.drawingdistance && object.distance < walldistance) {\r\n\t                if (object.distance < 0.25)\r\n\t                    object.distance = 0.25;\r\n\t                if (ray.angle > mathconst_1.PI1_5)\r\n\t                    ray.angle -= mathconst_1.PI2_0;\r\n\t                if (object.angle > mathconst_1.PI1_5)\r\n\t                    object.angle -= mathconst_1.PI2_0;\r\n\t                var diff = (ray.angle - object.angle) / (2 * Math.atan2(0.05, object.distance));\r\n\t                if (Math.abs(diff) <= 1) {\r\n\t                    diff = Math.abs((diff - 1) * 0.5);\r\n\t                    if (object.start < 0) {\r\n\t                        object.start = row;\r\n\t                        object.starttexture = diff;\r\n\t                    }\r\n\t                    object.end = row;\r\n\t                    object.endtexture = diff;\r\n\t                    objecttodraw.push(object);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player) {\r\n\t        this.renderbackground(player);\r\n\t        var objectsinrange = this.filterobjectsinrange(player, map.sprites);\r\n\t        var rays = player.getrays(this.settings.width);\r\n\t        var drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colision.point) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            var objecttodraw = this.getobjectstodraw(player, objectsinrange, rays[r], r, walldistance);\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.start >= 0)\r\n\t                this.drawobject(object);\r\n\t            object.start = -1;\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageX < window.innerWidth * 0.333)\r\n\t            this.rotateleft = true;\r\n\t        else if (t.pageX < window.innerWidth * 0.666)\r\n\t            this.forward = true;\r\n\t        else\r\n\t            this.rotateright = true;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(11);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 25; i++) {\r\n\t            this.sprites.push(new sprite_1.Sprite({\r\n\t                x: Math.random() * size,\r\n\t                y: Math.random() * size\r\n\t            }, Math.floor(Math.random() * 5)));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(position, type) {\r\n\t        this.position = position;\r\n\t        this.type = type;\r\n\t        this.start = -1;\r\n\t    }\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(13);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov, loader) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        for (var a = 0; a < this.audiochannels.length; a++) {\r\n\t            var time = new Date();\r\n\t            var now = time.getTime();\r\n\t            console.log(this.loader.sounds[index].duration);\r\n\t            if (this.audiochannels[a].finish < now) {\r\n\t                this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000;\r\n\t                this.audiochannels[a].audioel.src = this.loader.sounds[index].src;\r\n\t                this.audiochannels[a].audioel.play();\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a0ba3ff991e914ddc80b","import { Sprite } from './sprite';\r\nimport { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311'\r\n}\r\n\r\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet ctx = canvas.getContext('2d')\r\nlet map = new Map(150, 0.3)\r\nlet controls = new Controls()\r\nlet assetloader = new AssetLoader()\r\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov, assetloader)\r\nlet scene = new Scene(ctx, gamesettins, assetloader)\r\n\r\ncanvas.width = gamesettins.width\r\ncanvas.height = gamesettins.height\r\ncanvas.style.width = `${gamesettins.width}px`\r\ncanvas.style.height = `${gamesettins.height}px`\r\ncontrols.bindevents(document, canvas)\r\nplayer.initonmap(map)\r\n\r\n\r\nlet lastrender: number = Date.now()\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastrender\r\n    lastrender = now\r\n    player.getcontrols(controls, map, delta)\r\n    scene.renderframe(delta, map, player)\r\n    requestAnimationFrame(render)\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n}\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { document.getElementById('loading-container').style.display = 'none'; render() }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n        this.walls = new Array<HTMLImageElement>()\r\n        for (let item in this.wallssrcs) this.walls.push(new Image())\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        for (let item in this.spritessrcs) this.sprites.push(new Image())\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        for (let item in this.skylinesrcs) this.skyline.push(new Image())\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n        for (let item in this.soundssrcs) this.sounds.push(new Audio())\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    private soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private isloaded() {\r\n        return this.loaded == this.toload()\r\n    }\r\n\r\n    private toload() {\r\n        return this.walls.length + \r\n            this.sprites.length + \r\n            this.skyline.length +\r\n            this.sounds.length\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog:number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n\r\n        for (let i in this.spritessrcs) {\r\n            this.sprites[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sprites[i].src = this.spritessrcs[i]\r\n        }\r\n\r\n        for (let i in this.skylinesrcs) {\r\n            this.skyline[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.skyline[i].src = this.skylinesrcs[i]\r\n        }\r\n        for (let i in this.soundssrcs) {\r\n            this.sounds[i].oncanplaythrough = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sounds[i].src = this.soundssrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0 } from './mathconst';\r\nimport { Sprite } from './sprite';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground(player: Player) {\r\n        let image = this.assets.skyline[0]\r\n        let PI4 = 4 * Math.PI\r\n        let sleft = ((PI2_0 - (player.facing.angle + player.fov / 2)) / PI4) * image.width\r\n        sleft = Math.abs(sleft)\r\n        sleft = Math.floor(sleft)\r\n        let swidth = Math.floor((image.width * player.fov) / PI4)\r\n        let height = Math.floor(this.settings.height * 0.5)\r\n        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.point.x - Math.floor(wall.point.x)\r\n        let mody = wall.point.y - Math.floor(wall.point.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        if (distance < 3) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n        } else if (distance < 8) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition)\r\n        } else {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition)\r\n        }\r\n    }\r\n\r\n    private drawobject(object: Sprite) {\r\n        let wallheight = Math.ceil(this.wallheight / object.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let image = this.assets.sprites[object.type]\r\n        let texleft = Math.floor(object.starttexture * image.width)\r\n        let texright = Math.floor(object.endtexture * image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        let width = Math.max(1, object.end - object.start)\r\n        this.ctx.drawImage(image, texleft, 0, swidth, image.height, object.start, top, width, height)\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 3\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    private filterobjectsinrange(player: Player, sprites: Array<Sprite>) {\r\n        let objectsinrange = new Array<Sprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (\r\n                Math.abs(player.position.x - sprites[i].position.x) < this.settings.drawingdistance &&\r\n                Math.abs(player.position.y - sprites[i].position.y) < this.settings.drawingdistance\r\n            ) {\r\n                sprites[i].angle = Angle.normalizeangle(Math.atan2(\r\n                    sprites[i].position.y - player.position.y,\r\n                    sprites[i].position.x - player.position.x\r\n                ))\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<Sprite>, ray: Angle, row: number, walldistance: number) {\r\n        let objecttodraw = new Array<Sprite>()\r\n        for (let object of sprites) {\r\n            object.distance = DistanceCalc.getdistance(player.position, object.position)\r\n            if (object.distance < this.settings.drawingdistance && object.distance < walldistance) {\r\n                if (object.distance < 0.25) object.distance = 0.25\r\n                if (ray.angle > PI1_5) ray.angle -= PI2_0\r\n                if (object.angle > PI1_5) object.angle -= PI2_0\r\n                let diff = (ray.angle - object.angle) / (2 * Math.atan2(0.05, object.distance))\r\n                if (Math.abs(diff) <= 1) {\r\n                    diff = Math.abs((diff - 1) * 0.5)\r\n                    if (object.start < 0) {\r\n                        object.start = row\r\n                        object.starttexture = diff\r\n                    }\r\n                    object.end = row\r\n                    object.endtexture = diff\r\n                    objecttodraw.push(object)\r\n                }\r\n            }\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player) {\r\n        this.renderbackground(player)\r\n\r\n        let objectsinrange = this.filterobjectsinrange(player, map.sprites)\r\n        let rays = player.getrays(this.settings.width)\r\n        let drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.getdistance(player.position, colision.point) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            let objecttodraw = this.getobjectstodraw(player, objectsinrange, rays[r], r, walldistance)\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.start >= 0) this.drawobject(object)\r\n            object.start = -1\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h, type)]\r\n            } else {\r\n                return [new Colision(h, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n            }\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v, type)]\r\n            } else {\r\n                return [new Colision(v, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n        else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n        else this.rotateright = true\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import {Sprite} from './sprite';\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<Sprite>\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n\r\n        this.sprites = new Array<Sprite>()\r\n        for (let i = 0; i < size * 25; i++) {\r\n            this.sprites.push(\r\n                new Sprite({\r\n                    x: Math.random() * size,\r\n                    y: Math.random() * size\r\n                },\r\n                    Math.floor(Math.random() * 5)\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { Angle } from './angle';\r\nimport { IPoint } from './ipoint';\r\nexport class Sprite {\r\n\r\n    public angle: number\r\n    public start: number = -1\r\n    public starttexture: number\r\n    public end: number\r\n    public endtexture: number\r\n    public distance: number\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprite.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        for (let a = 0; a < this.audiochannels.length; a++) {\r\n            let time = new Date()\r\n            let now = time.getTime()\r\n            console.log(this.loader.sounds[index].duration)\r\n            if (this.audiochannels[a].finish < now) {\r\n                this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n                this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n                this.audiochannels[a].audioel.play()\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts"],"sourceRoot":""}