{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap dc349f72625b9280696b","webpack:///./src/main.ts","webpack:///./src/controls.ts","webpack:///./src/distancecalc.ts","webpack:///./src/angle.ts","webpack:///./src/ray.ts","webpack:///./src/colision.ts","webpack:///./src/map.ts","webpack:///./src/player.ts","webpack:///./src/mathconst.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","initctx","canvas","width","WIDTH","height","HEIGHT","document","addEventListener","e","controls","keydown","keyup","requestPointerLock","lockChangeAlert","pointerLockElement","canvaselement","mousemovefunction","removeEventListener","render","now","Date","delta","lastRender","fps","innerText","Math","floor","toString","ctx","fillStyle","fillRect","HEIGHT2","player","getcontrols","map","rays","getrays","r","length","colisions","ray_1","Ray","cast","position","DRAWINGDISTANCE","type","distance","distancecalc_1","DistanceCalc","getdistance","point","distancecorrected","cos","facing","angle","ceil","WALLHEIGHT","color","colorhex","toLowerCase","top_1","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","requestAnimationFrame","controls_1","angle_1","map_1","player_1","FOV","getElementById","getContext","Map","randomize","playerposition","x","size","y","getvalue","Player","Angle","PI","Controls","mousemove","this","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","prototype","movementX","resetmouserotate","keyCode","shiftKey","a","b","sqrt","sin","tg","ctg","dx","dy","colision_1","nearesty","origin","nexty","manhattandistance","abs","nearestx","nextx","nexth","nextv","maxdistance","h","v","Colision","concat","Uint8Array","setvalue","value","pos","factor","i","random","mathconst_1","fov","columns","step","Array","push","moveforward","movebackward","newfacing","PI0_5","PI1_0","PI1_5","PI2_0"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(10);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar controls_1 = __webpack_require__(2);\r\n\tvar distancecalc_1 = __webpack_require__(3);\r\n\tvar angle_1 = __webpack_require__(4);\r\n\tvar ray_1 = __webpack_require__(5);\r\n\tvar map_1 = __webpack_require__(7);\r\n\tvar player_1 = __webpack_require__(8);\r\n\tvar WIDTH = 800;\r\n\tvar HEIGHT = 600;\r\n\tvar HEIGHT2 = Math.floor(HEIGHT / 2);\r\n\tvar WALLHEIGHT = HEIGHT * 0.8;\r\n\tvar FOV = 70;\r\n\tvar DRAWINGDISTANCE = 30;\r\n\tvar canvaselement = document.getElementById('gamecanvas');\r\n\tvar fps = document.getElementById('fps');\r\n\tvar ctx = canvaselement.getContext('2d');\r\n\tvar map = new map_1.Map(100);\r\n\tmap.randomize(0.3);\r\n\tvar playerposition = { x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 };\r\n\twhile (map.getvalue(Math.floor(playerposition.x), Math.floor(playerposition.y)) > 0)\r\n\t    playerposition.x += 1;\r\n\tvar player = new player_1.Player(playerposition, new angle_1.Angle(0), FOV * Math.PI / 180);\r\n\tvar controls = new controls_1.Controls();\r\n\tfunction initctx(canvas) {\r\n\t    canvas.width = WIDTH;\r\n\t    canvas.height = HEIGHT;\r\n\t    document.addEventListener('keydown', function (e) { return controls.keydown(e); }, false);\r\n\t    document.addEventListener('keyup', function (e) { return controls.keyup(e); }, false);\r\n\t    canvas.addEventListener('click', function (e) {\r\n\t        canvas.requestPointerLock = canvas.requestPointerLock;\r\n\t        canvas.requestPointerLock();\r\n\t    }, false);\r\n\t    document.addEventListener('pointerlockchange', lockChangeAlert, false);\r\n\t}\r\n\tvar mousemovefunction = function (e) { return controls.mousemove(e); };\r\n\tfunction lockChangeAlert() {\r\n\t    if (document.pointerLockElement === canvaselement) {\r\n\t        document.addEventListener(\"mousemove\", mousemovefunction, false);\r\n\t    }\r\n\t    else {\r\n\t        document.removeEventListener(\"mousemove\", mousemovefunction, false);\r\n\t    }\r\n\t}\r\n\tvar lastRender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastRender;\r\n\t    lastRender = now;\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    ctx.fillStyle = '#ffffff';\r\n\t    ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\t    ctx.fillStyle = '#000000';\r\n\t    ctx.fillRect(0, HEIGHT2, WIDTH, HEIGHT2);\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    var rays = player.getrays(WIDTH);\r\n\t    for (var r = 0; r < rays.length; r++) {\r\n\t        var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], DRAWINGDISTANCE);\r\n\t        for (var c = 0; c < colisions.length; c++) {\r\n\t            if (colisions[c].type > 0) {\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colisions[c].point);\r\n\t                var distancecorrected = distance * Math.cos(player.facing.angle - rays[r].angle);\r\n\t                var height = Math.ceil(WALLHEIGHT / distancecorrected);\r\n\t                var color = Math.floor(255 - distancecorrected * 10);\r\n\t                var colorhex = color.toString(16).toLowerCase();\r\n\t                var top_1 = Math.floor(HEIGHT2 - height / 2);\r\n\t                ctx.beginPath();\r\n\t                ctx.moveTo(r, top_1);\r\n\t                ctx.lineTo(r, HEIGHT - top_1);\r\n\t                ctx.lineWidth = 2;\r\n\t                ctx.strokeStyle = \"#\" + colorhex + colorhex + colorhex;\r\n\t                ctx.stroke();\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    requestAnimationFrame(render);\r\n\t}\r\n\tinitctx(canvaselement);\r\n\trender();\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = false;\r\n\t        this.mouserotateright = false;\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = true;\r\n\t            this.mouserotateright = false;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = false;\r\n\t            this.mouserotateright = true;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = false;\r\n\t        this.mouserotateright = false;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = angle;\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(6);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y) + facing.dy;\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x) + facing.dx;\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            return [new colision_1.Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n\t                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            return [new colision_1.Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n\t                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (factor) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            this.map[i] = Math.random() < factor ? 1 : 0;\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(9);\r\n\tvar angle_1 = __webpack_require__(4);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t        else if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) == 0) {\r\n\t            position.y = this.position.y;\r\n\t            this.position = position;\r\n\t        }\r\n\t        else if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) == 0) {\r\n\t            position.x = this.position.x;\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft || controls.mouserotateleft)\r\n\t            this.rotateleft(delta);\r\n\t        if (controls.rotateright || controls.mouserotateright)\r\n\t            this.rotateright(delta);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc349f72625b9280696b","import { Controls } from './controls';\r\nimport { DistanceCalc } from './distancecalc';\r\nimport { Angle } from './angle';\r\nimport { Ray } from './ray';\r\nimport { PI2_0 } from './mathconst'\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\nconst WIDTH = 800\r\nconst HEIGHT = 600\r\nconst HEIGHT2 = Math.floor(HEIGHT / 2)\r\nconst WALLHEIGHT = HEIGHT * 0.8\r\nconst FOV = 70\r\nconst DRAWINGDISTANCE = 30\r\n\r\nlet canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet fps = <HTMLSpanElement>document.getElementById('fps')\r\nlet ctx = canvaselement.getContext('2d')\r\nlet map = new Map(100)\r\nmap.randomize(0.3)\r\n\r\nlet playerposition = { x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }\r\nwhile(map.getvalue(Math.floor(playerposition.x), Math.floor(playerposition.y)) > 0) playerposition.x += 1\r\nlet player = new Player(playerposition, new Angle(0), FOV * Math.PI / 180)\r\nlet controls = new Controls()\r\n\r\nfunction initctx(canvas: HTMLCanvasElement) {\r\n    canvas.width = WIDTH\r\n    canvas.height = HEIGHT\r\n    document.addEventListener('keydown', (e) => controls.keydown(e), false)\r\n    document.addEventListener('keyup', (e) => controls.keyup(e), false)\r\n    canvas.addEventListener('click', (e) => {\r\n        canvas.requestPointerLock = canvas.requestPointerLock\r\n        canvas.requestPointerLock()\r\n    }, false)\r\n\r\n    document.addEventListener('pointerlockchange', lockChangeAlert, false);\r\n}\r\n\r\nlet mousemovefunction = (e: MouseEvent) => controls.mousemove(e)\r\nfunction lockChangeAlert() {\r\n    if (document.pointerLockElement === canvaselement) {\r\n        document.addEventListener(\"mousemove\", mousemovefunction, false);\r\n    } else {\r\n        document.removeEventListener(\"mousemove\", mousemovefunction, false);\r\n    }\r\n}\r\n\r\nlet lastRender = Date.now();\r\n\r\n\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastRender\r\n    lastRender = now\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n    ctx.fillStyle = '#ffffff'\r\n    ctx.fillRect(0, 0, WIDTH, HEIGHT)\r\n    ctx.fillStyle = '#000000'\r\n    ctx.fillRect(0, HEIGHT2, WIDTH, HEIGHT2)\r\n\r\n    player.getcontrols(controls, map, delta)\r\n\r\n    var rays = player.getrays(WIDTH)\r\n    for (let r = 0; r < rays.length; r++) {\r\n        let colisions = Ray.cast(map, player.position, null, null, rays[r], DRAWINGDISTANCE)\r\n        for (let c = 0; c < colisions.length; c++) {\r\n            if (colisions[c].type > 0) {\r\n                let distance = DistanceCalc.getdistance(player.position, colisions[c].point)\r\n                let distancecorrected = distance * Math.cos(player.facing.angle - rays[r].angle)\r\n                let height = Math.ceil(WALLHEIGHT / distancecorrected)\r\n                let color = Math.floor(255 - distancecorrected * 10)\r\n                let colorhex = color.toString(16).toLowerCase()\r\n                let top = Math.floor(HEIGHT2 - height / 2)\r\n                ctx.beginPath()\r\n                ctx.moveTo(r, top)\r\n                ctx.lineTo(r, HEIGHT - top)\r\n                ctx.lineWidth = 2\r\n                ctx.strokeStyle = `#${colorhex}${colorhex}${colorhex}`\r\n                ctx.stroke()\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    requestAnimationFrame(render)\r\n}\r\n\r\n\r\ninitctx(canvaselement)\r\nrender()\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: boolean = false\r\n    public mouserotateright: boolean = false\r\n\r\n    public mousemove(e:MouseEvent) {\r\n        if(e.movementX < 0) {\r\n            this.mouserotateleft = true\r\n            this.mouserotateright = false\r\n        } else if(e.movementX > 0) {\r\n            this.mouserotateleft = false\r\n            this.mouserotateright = true\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = false\r\n        this.mouserotateright = false\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/controls.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/distancecalc.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = angle\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/angle.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y) + facing.dy\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x) + facing.dx\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n\r\n            return [new Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            return [new Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/colision.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(factor:number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            this.map[i] = Math.random() < factor ? 1 : 0\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * delta / 1200)\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        } else if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) == 0) {\r\n            position.y = this.position.y\r\n            this.position = position\r\n        } else if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) == 0) {\r\n            position.x = this.position.x\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft || controls.mouserotateleft) this.rotateleft(delta)\r\n        if (controls.rotateright || controls.mouserotateright) this.rotateright(delta)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/mathconst.ts"],"sourceRoot":""}