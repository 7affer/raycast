{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap fcfa69ff647c0a428d7c","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/helpers/mathconst.ts","webpack:///./src/scripts/helpers/distancecalc.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/renders/backgroundrenderer.ts","webpack:///./src/scripts/helpers/quicksort.ts","webpack:///./src/scripts/renders/wallrenderer.ts","webpack:///./src/scripts/renders/floorrenderer.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprites/spritesfactory.ts","webpack:///./src/scripts/sprites/sprite.ts","webpack:///./src/scripts/sprites/zombie.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","width","window","innerWidth","gamesettins","height","Math","floor","height2","fov","PI","drawingdistance","floorcolor1","floorcolor2","wallheight","assetloader","AssetLoader","loadall","prog","innerHTML","ceil","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","innerText","toString","style","display","canvas","ctx","getContext","Map","Controls","Player","size","Angle","Scene","bindevents","initonmap","this","wallssrcs","spritessrcs","zspritessrcs","skylinesrcs","soundssrcs","sprites","Array","zsprites","walls","skyline","sounds","prototype","toload","length","loadimages","arrsrc","arrobj","onprogress","callback","_this","i","push","Image","onload","src","loadaudio","Audio","oncanplaythrough","mathconst_1","distancecalc_1","ray_1","backgroundrenderer_1","quicksort_1","wallrenderer_1","floorrenderer_1","settings","assets","skipobjectdetectionrays","backgroundrenderer","BackgroundRenderer","wallrenderer","WallRenderer","floorrenderer","FloorRenderer","getobjectsinrange","objectsinrange","DistanceCalc","mdistance","getobjectstodraw","rayangle","left","nearestwalldistance","objecttodraw","_i","sprites_1","object","sprite_player_angle","atan2","y","x","anglediff","PI2_0","distance","diff","anglewidth","abs","starttexture","endtexture","facing","angle","Sort","quickSort","a","b","rays","getrays","drawfloor","r","bottom","drawfloorray","walldistance","cos","colisions","Ray","cast","colisions_1","colision","type","_a","objectsinrange_1","move","PI0_5","PI1_0","PI1_5","PI4_0","sqrt","colision_1","origin","nexth","nextv","maxdistance","h","nearesty","v","nearestx","distanceh","distancev","getvalue","dy","Colision","concat","dx","nexty","ctg","nextx","tg","loader","facingangle","image","sourceleft","sourcewidth","drawImage","fillStyle","fillRect","arr","right","compare","pivot","partitionIndex","partition","swap","j","temp","wall","modx","mody","textureposition","getwallimage","top","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","useback","newbottom","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageY","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","normalizeangle","sin","spritesfactory_1","randparam","Uint8Array","randomize","spritesfactory","SpritesFactory","createsprite","SpriteType","Static","Zombie","setvalue","value","pos","random","sprite_1","zombie_1","mapsize","Sprite","maxheight","texright","swidth","max","frame","framemax","framelength","dead","lasttick","lastvectorchangetick","vectorchangelength","vector","getnewvector","getimage","setvector","tick","getTime","setframe","mixer_1","guncooldown","mixer","Mixer","columns","step","time","playsound","movement","correctposition","newposition","moveforward","position","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","audio","play"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(20);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(12);\r\n\tvar angle_1 = __webpack_require__(13);\r\n\tvar map_1 = __webpack_require__(14);\r\n\tvar player_1 = __webpack_require__(18);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    height2: Math.floor(width / 1.8 / 2),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311',\r\n\t    wallheight: Math.floor(width / 1.8) * 0.8\r\n\t};\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () {\r\n\t    document.getElementById('loading-container').style.display = 'none';\r\n\t    var canvas = document.getElementById('gamecanvas');\r\n\t    var ctx = canvas.getContext('2d');\r\n\t    var map = new map_1.Map(150, 0.3, assetloader, gamesettins);\r\n\t    var controls = new controls_1.Controls();\r\n\t    var player = new player_1.Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new angle_1.Angle(0), assetloader);\r\n\t    var scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, canvas);\r\n\t    player.initonmap(map);\r\n\t    var lastrender = Date.now();\r\n\t    function render() {\r\n\t        var now = Date.now();\r\n\t        var delta = now - lastrender;\r\n\t        lastrender = now;\r\n\t        player.getcontrols(controls, map, delta);\r\n\t        scene.renderframe(delta, map, player, gamesettins.fov);\r\n\t        requestAnimationFrame(render);\r\n\t        fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    }\r\n\t    render();\r\n\t});\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.zspritessrcs = [\r\n\t            './assets/sprites/femalezombiewalk/Walk (1).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (2).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (3).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (4).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (5).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (6).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (7).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (8).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (9).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (10).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (1).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (2).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (3).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (4).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (5).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (6).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (7).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (8).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (9).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (10).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (1).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (2).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (3).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (4).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (5).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (6).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (7).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (8).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (9).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (10).png',\r\n\t            './assets/sprites/malezombiedead/Dead (1).png',\r\n\t            './assets/sprites/malezombiedead/Dead (2).png',\r\n\t            './assets/sprites/malezombiedead/Dead (3).png',\r\n\t            './assets/sprites/malezombiedead/Dead (4).png',\r\n\t            './assets/sprites/malezombiedead/Dead (5).png',\r\n\t            './assets/sprites/malezombiedead/Dead (6).png',\r\n\t            './assets/sprites/malezombiedead/Dead (7).png',\r\n\t            './assets/sprites/malezombiedead/Dead (8).png',\r\n\t            './assets/sprites/malezombiedead/Dead (9).png',\r\n\t            './assets/sprites/malezombiedead/Dead (10).png',\r\n\t        ];\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        this.zsprites = new Array();\r\n\t        this.walls = new Array();\r\n\t        this.skyline = new Array();\r\n\t        this.sounds = new Array();\r\n\t    }\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.zsprites.length +\r\n\t            this.skyline.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadimages = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Image());\r\n\t            arrobj[i].onload = function () {\r\n\t                onprogress(++_this.loaded / _this.toload());\r\n\t                if (_this.loaded >= _this.toload())\r\n\t                    callback();\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadaudio = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Audio());\r\n\t            arrobj[i].oncanplaythrough = function () {\r\n\t                //onprogress(++this.loaded / this.toload())\r\n\t                //if (this.loaded >= this.toload()) callback()\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        this.loadimages(this.wallssrcs, this.walls, onprogress, callback);\r\n\t        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback);\r\n\t        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback);\r\n\t        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback);\r\n\t        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback);\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar backgroundrenderer_1 = __webpack_require__(8);\r\n\tvar quicksort_1 = __webpack_require__(9);\r\n\tvar wallrenderer_1 = __webpack_require__(10);\r\n\tvar floorrenderer_1 = __webpack_require__(11);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.skipobjectdetectionrays = 5;\r\n\t        this.lastrender = Date.now();\r\n\t        this.backgroundrenderer = new backgroundrenderer_1.BackgroundRenderer(assets, settings);\r\n\t        this.wallrenderer = new wallrenderer_1.WallRenderer(assets, settings);\r\n\t        this.floorrenderer = new floorrenderer_1.FloorRenderer(assets, settings);\r\n\t    }\r\n\t    Scene.prototype.getobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (distancecalc_1.DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, rayangle, left, nearestwalldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x);\r\n\t            var anglediff = rayangle - sprite_player_angle;\r\n\t            if (anglediff < -Math.PI)\r\n\t                anglediff += mathconst_1.PI2_0;\r\n\t            if (anglediff > Math.PI)\r\n\t                anglediff -= mathconst_1.PI2_0;\r\n\t            if (anglediff < this.settings.fov) {\r\n\t                object.distance = distancecalc_1.DistanceCalc.distance(player, object);\r\n\t                if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n\t                    if (object.distance < 0.20)\r\n\t                        object.distance = 0.20;\r\n\t                    var diff = anglediff / Math.atan2(object.anglewidth, object.distance);\r\n\t                    if (Math.abs(diff) <= 1) {\r\n\t                        diff = Math.abs((diff - 1));\r\n\t                        if (object.left < 0) {\r\n\t                            object.left = left;\r\n\t                            object.starttexture = diff;\r\n\t                        }\r\n\t                        object.width += this.skipobjectdetectionrays;\r\n\t                        object.endtexture = diff;\r\n\t                        objecttodraw.push(object);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, fov) {\r\n\t        this.backgroundrenderer.render(this.ctx, player.facing.angle, this.settings.fov);\r\n\t        var objectsinrange = this.getobjectsinrange(player, map.sprites);\r\n\t        quicksort_1.Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, function (a, b) { return a.distance > b.distance; });\r\n\t        var rays = player.getrays(this.settings.width, this.settings.fov);\r\n\t        var drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.distance(player, colision) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.wallrenderer.render(this.ctx, r, distance, colision);\r\n\t                }\r\n\t                bottom = this.floorrenderer.render(this.ctx, r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            if (r % this.skipobjectdetectionrays == 0) {\r\n\t                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.left >= 0)\r\n\t                object.render(this.ctx);\r\n\t            object.left = -1;\r\n\t            object.width = 0;\r\n\t            object.move(delta);\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\texports.PI4_0 = 4 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.distance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    DistanceCalc.mdistance = function (a, b) {\r\n\t        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        var distanceh = distancecalc_1.DistanceCalc.mdistance(origin, h);\r\n\t        var distancev = distancecalc_1.DistanceCalc.mdistance(origin, v);\r\n\t        if (distanceh < distancev) {\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y\r\n\t        };\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(x, y, type) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar BackgroundRenderer = (function () {\r\n\t    function BackgroundRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    BackgroundRenderer.prototype.render = function (ctx, facingangle, fov) {\r\n\t        var image = this.loader.skyline[0];\r\n\t        var sourceleft = Math.floor((image.width * (mathconst_1.PI2_0 - facingangle)) / mathconst_1.PI4_0);\r\n\t        var sourcewidth = Math.floor(image.width * 0.5 * (fov / mathconst_1.PI2_0));\r\n\t        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2);\r\n\t        ctx.fillStyle = this.settings.floorcolor1;\r\n\t        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    return BackgroundRenderer;\r\n\t}());\r\n\texports.BackgroundRenderer = BackgroundRenderer;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sort = (function () {\r\n\t    function Sort() {\r\n\t    }\r\n\t    Sort.quickSort = function (arr, left, right, compare) {\r\n\t        var pivot;\r\n\t        var partitionIndex;\r\n\t        if (left < right) {\r\n\t            pivot = right;\r\n\t            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\t            //sort left and right\r\n\t            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n\t            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n\t        }\r\n\t        return arr;\r\n\t    };\r\n\t    Sort.partition = function (arr, pivot, left, right, compare) {\r\n\t        var partitionIndex = left;\r\n\t        for (var i = left; i < right; i++) {\r\n\t            if (compare(arr[i], arr[pivot])) {\r\n\t                this.swap(arr, i, partitionIndex);\r\n\t                partitionIndex++;\r\n\t            }\r\n\t        }\r\n\t        this.swap(arr, right, partitionIndex);\r\n\t        return partitionIndex;\r\n\t    };\r\n\t    Sort.swap = function (arr, i, j) {\r\n\t        var temp = arr[i];\r\n\t        arr[i] = arr[j];\r\n\t        arr[j] = temp;\r\n\t    };\r\n\t    return Sort;\r\n\t}());\r\n\texports.Sort = Sort;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar WallRenderer = (function () {\r\n\t    function WallRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    WallRenderer.prototype.render = function (ctx, left, distance, wall) {\r\n\t        var modx = wall.x - Math.floor(wall.x);\r\n\t        var mody = wall.y - Math.floor(wall.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        var image = this.getwallimage(wall.type, distance);\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var top = Math.floor(this.settings.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        ctx.drawImage(image, texleft, 0, 1, image.height, left, top, 1, height);\r\n\t        if (left % 3 == 0) {\r\n\t            ctx.beginPath();\r\n\t            ctx.moveTo(left, top);\r\n\t            ctx.lineTo(left, this.settings.height - top);\r\n\t            ctx.lineWidth = 4;\r\n\t            ctx.strokeStyle = '#000000';\r\n\t            ctx.fillStyle = '#000000';\r\n\t            ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            ctx.stroke();\r\n\t            ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    WallRenderer.prototype.getwallimage = function (type, distance) {\r\n\t        if (distance < 3) {\r\n\t            return this.loader.walls[type - 1];\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            return this.loader.walls[type - 1 + 5];\r\n\t        }\r\n\t        return this.loader.walls[type - 1 + 10];\r\n\t    };\r\n\t    return WallRenderer;\r\n\t}());\r\n\texports.WallRenderer = WallRenderer;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar FloorRenderer = (function () {\r\n\t    function FloorRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    FloorRenderer.prototype.render = function (ctx, left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.settings.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            ctx.beginPath();\r\n\t            ctx.moveTo(left, bottom);\r\n\t            ctx.lineTo(left, newbottom);\r\n\t            ctx.lineWidth = 3;\r\n\t            ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    return FloorRenderer;\r\n\t}());\r\n\texports.FloorRenderer = FloorRenderer;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 17)\r\n\t            this.shoot = true;\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e, canvas) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageY < canvas.height * 0.5) {\r\n\t            this.shoot = true;\r\n\t        }\r\n\t        else {\r\n\t            if (t.pageX < window.innerWidth * 0.333)\r\n\t                this.rotateleft = true;\r\n\t            else if (t.pageX < window.innerWidth * 0.666)\r\n\t                this.forward = true;\r\n\t            else\r\n\t                this.rotateright = true;\r\n\t        }\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e, canvas); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar spritesfactory_1 = __webpack_require__(15);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam, loader, settings) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        var spritesfactory = new spritesfactory_1.SpritesFactory(loader, size, settings);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 10; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Static));\r\n\t        }\r\n\t        for (var i = 0; i < size * 30; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Zombie));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(16);\r\n\tvar zombie_1 = __webpack_require__(17);\r\n\tvar SpritesFactory = (function () {\r\n\t    function SpritesFactory(loader, mapsize, settings) {\r\n\t        this.loader = loader;\r\n\t        this.mapsize = mapsize;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    SpritesFactory.prototype.createsprite = function (type) {\r\n\t        switch (type) {\r\n\t            case SpriteType.Static: return new sprite_1.Sprite(Math.random() * this.mapsize, Math.random() * this.mapsize, this.loader.sprites[Math.floor(Math.random() * this.loader.sprites.length)], this.settings);\r\n\t            case SpriteType.Zombie: return new zombie_1.Zombie(Math.random() * this.mapsize, Math.random() * this.mapsize, Math.floor(Math.random() * 2), this.loader, this.settings);\r\n\t        }\r\n\t    };\r\n\t    return SpritesFactory;\r\n\t}());\r\n\texports.SpritesFactory = SpritesFactory;\r\n\tvar SpriteType;\r\n\t(function (SpriteType) {\r\n\t    SpriteType[SpriteType[\"Static\"] = 1] = \"Static\";\r\n\t    SpriteType[SpriteType[\"Zombie\"] = 2] = \"Zombie\";\r\n\t})(SpriteType || (SpriteType = {}));\r\n\texports.SpriteType = SpriteType;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.2;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.move = function (delta) {\r\n\t    };\r\n\t    Sprite.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Zombie = (function () {\r\n\t    function Zombie(x, y, type, loader, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t        this.loader = loader;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.35;\r\n\t        this.frame = 0;\r\n\t        this.framemax = 9;\r\n\t        this.framelength = 100;\r\n\t        this.dead = false;\r\n\t        this.lasttick = 0;\r\n\t        this.lastvectorchangetick = 0;\r\n\t        this.vectorchangelength = 3000;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t        this.vector = this.getnewvector();\r\n\t    }\r\n\t    Zombie.prototype.getnewvector = function () {\r\n\t        return {\r\n\t            x: Math.sin((Math.random() * 2) - 1),\r\n\t            y: Math.sin((Math.random() * 2) - 1)\r\n\t        };\r\n\t    };\r\n\t    Zombie.prototype.getimage = function () {\r\n\t        if (this.type == 0) {\r\n\t            return this.loader.zsprites[0 + this.frame + (this.dead ? 10 : 0)];\r\n\t        }\r\n\t        else {\r\n\t            return this.loader.zsprites[20 + this.frame + (this.dead ? 10 : 0)];\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.setvector = function () {\r\n\t        var tick = (new Date()).getTime();\r\n\t        if (tick > this.lastvectorchangetick) {\r\n\t            this.vector = this.getnewvector();\r\n\t            this.lastvectorchangetick = tick + this.vectorchangelength;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.setframe = function () {\r\n\t        var tick = (new Date()).getTime();\r\n\t        if (tick > this.lasttick) {\r\n\t            if (this.frame < this.framemax)\r\n\t                this.frame++;\r\n\t            else if (!this.dead)\r\n\t                this.frame = 0;\r\n\t            this.lasttick = tick + this.framelength;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.move = function (delta) {\r\n\t        if (!this.dead) {\r\n\t            this.x += this.vector.x * (delta / 5000);\r\n\t            this.y += this.vector.y * (delta / 5000);\r\n\t            this.setvector();\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.render = function (ctx) {\r\n\t        this.setframe();\r\n\t        var image = this.getimage();\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * image.width);\r\n\t        var texright = Math.floor(this.endtexture * image.width);\r\n\t        var height = Math.floor(wallheight * 0.8);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(image, texleft, 0, swidth, image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Zombie;\r\n\t}());\r\n\texports.Zombie = Zombie;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(19);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(13);\r\n\tvar Player = (function () {\r\n\t    function Player(x, y, facing, loader) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.facing = facing;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns, fov) {\r\n\t        var step = fov / columns;\r\n\t        var angle = this.facing.angle + fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, newposition) {\r\n\t        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n\t            newposition.x = this.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n\t            newposition.y = this.y;\r\n\t        }\r\n\t        this.x = newposition.x;\r\n\t        this.y = newposition.y;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        this.correctposition(map, {\r\n\t            x: this.x - this.facing.cos * delta / 500,\r\n\t            y: this.y - this.facing.sin * delta / 500\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n\t            this.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        var audio = new Audio(this.loader.soundssrcs[index]);\r\n\t        audio.play();\r\n\t        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n\t        //     let time = new Date()\r\n\t        //     let now = time.getTime()\r\n\t        //     console.log(this.loader.sounds[index].duration)\r\n\t        //     if (this.audiochannels[a].finish < now) {\r\n\t        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n\t        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n\t        //         this.audiochannels[a].audioel.play()\r\n\t        //         break\r\n\t        //     }\r\n\t        // }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fcfa69ff647c0a428d7c","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    height2: Math.floor(width / 1.8 / 2),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311',\r\n    wallheight: Math.floor(width / 1.8) * 0.8\r\n}\r\n\r\nlet assetloader = new AssetLoader()\r\n\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { \r\n        document.getElementById('loading-container').style.display = 'none'; \r\n        let canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let map = new Map(150, 0.3, assetloader, gamesettins)\r\n        let controls = new Controls()\r\n        let player = new Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new Angle(0), assetloader)\r\n        let scene = new Scene(ctx, gamesettins, assetloader)\r\n\r\n        canvas.width = gamesettins.width\r\n        canvas.height = gamesettins.height\r\n        canvas.style.width = `${gamesettins.width}px`\r\n        canvas.style.height = `${gamesettins.height}px`\r\n        controls.bindevents(document, canvas)\r\n        player.initonmap(map)\r\n\r\n\r\n        let lastrender: number = Date.now()\r\n        function render() {\r\n            let now = Date.now()\r\n            let delta = now - lastrender\r\n            lastrender = now\r\n            player.getcontrols(controls, map, delta)\r\n            scene.renderframe(delta, map, player, gamesettins.fov)\r\n            requestAnimationFrame(render)\r\n            fps.innerText = (Math.floor(1000 / delta)).toString()\r\n        }\r\n        render() \r\n    }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n\r\n        this.zspritessrcs = [\r\n            './assets/sprites/femalezombiewalk/Walk (1).png',\r\n            './assets/sprites/femalezombiewalk/Walk (2).png',\r\n            './assets/sprites/femalezombiewalk/Walk (3).png',\r\n            './assets/sprites/femalezombiewalk/Walk (4).png',\r\n            './assets/sprites/femalezombiewalk/Walk (5).png',\r\n            './assets/sprites/femalezombiewalk/Walk (6).png',\r\n            './assets/sprites/femalezombiewalk/Walk (7).png',\r\n            './assets/sprites/femalezombiewalk/Walk (8).png',\r\n            './assets/sprites/femalezombiewalk/Walk (9).png',\r\n            './assets/sprites/femalezombiewalk/Walk (10).png',\r\n            './assets/sprites/femalezombiedead/Dead (1).png',\r\n            './assets/sprites/femalezombiedead/Dead (2).png',\r\n            './assets/sprites/femalezombiedead/Dead (3).png',\r\n            './assets/sprites/femalezombiedead/Dead (4).png',\r\n            './assets/sprites/femalezombiedead/Dead (5).png',\r\n            './assets/sprites/femalezombiedead/Dead (6).png',\r\n            './assets/sprites/femalezombiedead/Dead (7).png',\r\n            './assets/sprites/femalezombiedead/Dead (8).png',\r\n            './assets/sprites/femalezombiedead/Dead (9).png',\r\n            './assets/sprites/femalezombiedead/Dead (10).png',\r\n            './assets/sprites/malezombiewalk/Walk (1).png',\r\n            './assets/sprites/malezombiewalk/Walk (2).png',\r\n            './assets/sprites/malezombiewalk/Walk (3).png',\r\n            './assets/sprites/malezombiewalk/Walk (4).png',\r\n            './assets/sprites/malezombiewalk/Walk (5).png',\r\n            './assets/sprites/malezombiewalk/Walk (6).png',\r\n            './assets/sprites/malezombiewalk/Walk (7).png',\r\n            './assets/sprites/malezombiewalk/Walk (8).png',\r\n            './assets/sprites/malezombiewalk/Walk (9).png',\r\n            './assets/sprites/malezombiewalk/Walk (10).png',\r\n            './assets/sprites/malezombiedead/Dead (1).png',\r\n            './assets/sprites/malezombiedead/Dead (2).png',\r\n            './assets/sprites/malezombiedead/Dead (3).png',\r\n            './assets/sprites/malezombiedead/Dead (4).png',\r\n            './assets/sprites/malezombiedead/Dead (5).png',\r\n            './assets/sprites/malezombiedead/Dead (6).png',\r\n            './assets/sprites/malezombiedead/Dead (7).png',\r\n            './assets/sprites/malezombiedead/Dead (8).png',\r\n            './assets/sprites/malezombiedead/Dead (9).png',\r\n            './assets/sprites/malezombiedead/Dead (10).png',\r\n        ]\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        this.zsprites = new Array<HTMLImageElement>()\r\n        this.walls = new Array<HTMLImageElement>()\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private zspritessrcs: Array<string>\r\n    public zsprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    public soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private toload() {\r\n        return this.walls.length +\r\n            this.sprites.length +\r\n            this.zsprites.length +\r\n            this.skyline.length\r\n    }\r\n\r\n    private loadimages(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLImageElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Image())\r\n            arrobj[i].onload = () => {\r\n                onprogress(++this.loaded / this.toload())\r\n                if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    private loadaudio(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLAudioElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Audio())\r\n            arrobj[i].oncanplaythrough = () => {\r\n                //onprogress(++this.loaded / this.toload())\r\n                //if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        this.loadimages(this.wallssrcs, this.walls, onprogress, callback)\r\n        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback)\r\n        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback)\r\n        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback)\r\n        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0, PI4_0 } from './helpers/mathconst';\r\nimport { DistanceCalc } from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { BackgroundRenderer } from \"./renders/backgroundrenderer\";\r\nimport { Sort } from \"./helpers/quicksort\";\r\nimport { WallRenderer } from \"./renders/wallrenderer\";\r\nimport { FloorRenderer } from \"./renders/floorrenderer\";\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private backgroundrenderer: BackgroundRenderer\r\n    private wallrenderer: WallRenderer\r\n    private floorrenderer: FloorRenderer\r\n    private skipobjectdetectionrays: number = 5\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.backgroundrenderer = new BackgroundRenderer(assets, settings)\r\n        this.wallrenderer = new WallRenderer(assets, settings)\r\n        this.floorrenderer = new FloorRenderer(assets, settings)\r\n    }\r\n\r\n    private getobjectsinrange(player: Player, sprites: Array<ISprite>) {\r\n        let objectsinrange = new Array<ISprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<ISprite>, rayangle: number, left: number, nearestwalldistance: number) {\r\n        let objecttodraw = new Array<ISprite>()\r\n        for (let object of sprites) {\r\n            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x)\r\n\r\n            let anglediff = rayangle - sprite_player_angle\r\n            if (anglediff < -Math.PI) anglediff += PI2_0\r\n            if (anglediff > Math.PI) anglediff -= PI2_0\r\n\r\n            if (anglediff < this.settings.fov) {\r\n                object.distance = DistanceCalc.distance(player, object)\r\n                if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n                    if (object.distance < 0.20) object.distance = 0.20\r\n                    let diff = anglediff / Math.atan2(object.anglewidth, object.distance)\r\n                    if (Math.abs(diff) <= 1) {\r\n                        diff = Math.abs((diff - 1))\r\n                        if (object.left < 0) {\r\n                            object.left = left\r\n                            object.starttexture = diff\r\n                        }\r\n                        object.width += this.skipobjectdetectionrays\r\n                        object.endtexture = diff\r\n                        objecttodraw.push(object)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, fov: number) {\r\n\r\n        this.backgroundrenderer.render(this.ctx, player.facing.angle, this.settings.fov)\r\n        let objectsinrange = this.getobjectsinrange(player, map.sprites)\r\n        Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, (a, b) => a.distance > b.distance)\r\n        let rays = player.getrays(this.settings.width, this.settings.fov)\r\n        let drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.distance(player, colision) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.wallrenderer.render(this.ctx, r, distance, colision)\r\n                }\r\n                bottom = this.floorrenderer.render(this.ctx, r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            if (r % this.skipobjectdetectionrays == 0) {\r\n                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance)\r\n            }\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.left >= 0) object.render(this.ctx)\r\n            object.left = -1\r\n            object.width = 0\r\n            object.move(delta)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\r\nexport const PI4_0: number = 4 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/mathconst.ts","import { IPoint } from '../ipoint';\r\nexport class DistanceCalc {\r\n    public static distance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n\r\n    public static mdistance(a:IPoint, b:IPoint) {\r\n        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/distancecalc.ts","import {DistanceCalc} from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './helpers/mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IPoint,\r\n        nextv: IPoint,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n        let distanceh = DistanceCalc.mdistance(origin, h)\r\n        let distancev = DistanceCalc.mdistance(origin, v)\r\n\r\n        if (distanceh < distancev) {\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h.x, h.y, type)]\r\n            } else {\r\n                return [new Colision(h.x, h.y, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh))\r\n            }\r\n        } else {\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v.x, v.y, type)]\r\n            } else {\r\n                return [new Colision(v.x, v.y, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev))\r\n            }\r\n        }\r\n    }\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IPoint {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IPoint {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision implements IPoint {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class BackgroundRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, facingangle: number, fov: number) {\r\n        let image = this.loader.skyline[0]\r\n        let sourceleft = Math.floor((image.width * (PI2_0 - facingangle)) / PI4_0)\r\n        let sourcewidth = Math.floor(image.width * 0.5 * (fov / PI2_0))\r\n        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2)\r\n        ctx.fillStyle = this.settings.floorcolor1\r\n        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/backgroundrenderer.ts","import { IComparable } from \"./icomparable\";\r\n\r\nexport class Sort {\r\n\r\n    public static quickSort<T>(arr: Array<T>, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n        let pivot: number\r\n        let partitionIndex: number\r\n\r\n        if (left < right) {\r\n            pivot = right;\r\n            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\r\n            //sort left and right\r\n            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    private static partition<T>(arr: Array<T>, pivot: number, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n\r\n        let partitionIndex = left;\r\n        for (var i = left; i < right; i++) {\r\n            if (compare(arr[i], arr[pivot])) {\r\n                this.swap(arr, i, partitionIndex);\r\n                partitionIndex++;\r\n            }\r\n        }\r\n        this.swap(arr, right, partitionIndex);\r\n        return partitionIndex;\r\n    }\r\n\r\n    private static swap<T>(arr: Array<T>, i: number, j: number) {\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/quicksort.ts","import {Colision} from '../colision';\r\nimport { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class WallRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(\r\n        ctx: CanvasRenderingContext2D,\r\n        left: number,\r\n        distance: number,\r\n        wall: Colision\r\n    ) {\r\n        let modx = wall.x - Math.floor(wall.x)\r\n        let mody = wall.y - Math.floor(wall.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        let image = this.getwallimage(wall.type, distance)\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let top = Math.floor(this.settings.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        ctx.drawImage(image, texleft, 0, 1, image.height, left, top, 1, height)\r\n        if (left % 3 == 0) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(left, top)\r\n            ctx.lineTo(left, this.settings.height - top)\r\n            ctx.lineWidth = 4\r\n            ctx.strokeStyle = '#000000'\r\n            ctx.fillStyle = '#000000'\r\n            ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            ctx.stroke()\r\n            ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private getwallimage(type: number, distance: number) {\r\n        if (distance < 3) {\r\n            return this.loader.walls[type - 1]\r\n        } else if (distance < 8) {\r\n            return this.loader.walls[type - 1 + 5]\r\n        }\r\n        return this.loader.walls[type - 1 + 10]\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/wallrenderer.ts","import {Colision} from '../colision';\r\nimport { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class FloorRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.settings.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(left, bottom)\r\n            ctx.lineTo(left, newbottom)\r\n            ctx.lineWidth = 3\r\n            ctx.strokeStyle = this.settings.floorcolor2\r\n            ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/floorrenderer.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 17) this.shoot = true\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent, canvas: HTMLCanvasElement) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageY < canvas.height * 0.5) {\r\n            this.shoot = true\r\n        } else {\r\n            if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n            else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n            else this.rotateright = true\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLCanvasElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e, canvas) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './helpers/mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import { ISettings } from './isettings';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { SpritesFactory, SpriteType } from \"./sprites/spritesfactory\"\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<ISprite>\r\n\r\n    constructor(size: number, randparam: number, loader: AssetLoader, settings: ISettings) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n        this.randomize(randparam)\r\n\r\n        let spritesfactory = new SpritesFactory(loader, size, settings)\r\n\r\n        this.sprites = new Array<ISprite>()\r\n        for (let i = 0; i < size * 10; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Static))\r\n        }\r\n        for (let i = 0; i < size * 30; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Zombie))\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                }\r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISprite } from \"./isprite\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { Zombie } from \"./zombie\";\r\n\r\nexport { SpritesFactory, SpriteType }\r\n\r\nclass SpritesFactory {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private mapsize: number,\r\n        private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public createsprite(type: SpriteType): ISprite {\r\n        switch (type) {\r\n            case SpriteType.Static: return new Sprite(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.loader.sprites[Math.floor(Math.random() * this.loader.sprites.length)],\r\n                this.settings\r\n            )\r\n            case SpriteType.Zombie: return new Zombie(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                Math.floor(Math.random() * 2),\r\n                this.loader,\r\n                this.settings\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nenum SpriteType {\r\n    Static = 1,\r\n    Zombie\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/spritesfactory.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Sprite implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.2\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public move(delta:number) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/sprite.ts","import { IPoint } from '../ipoint';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Zombie implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.35\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n    private frame: number = 0\r\n    private framemax: number = 9\r\n    private framelength: number = 100\r\n    private dead: boolean = false\r\n    private lasttick: number = 0\r\n    private lastvectorchangetick: number = 0\r\n    private vectorchangelength: number = 3000\r\n    private vector: IPoint\r\n\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        private type: number,\r\n        private loader: AssetLoader,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n        this.vector = this.getnewvector()\r\n    }\r\n\r\n    private getnewvector() {\r\n        return {\r\n            x: Math.sin((Math.random() * 2) - 1),\r\n            y: Math.sin((Math.random() * 2) - 1)\r\n        }\r\n    }\r\n\r\n    private getimage() {\r\n        if (this.type == 0) {\r\n            return this.loader.zsprites[0 + this.frame + (this.dead ? 10 : 0)]\r\n        } else {\r\n            return this.loader.zsprites[20 + this.frame + (this.dead ? 10 : 0)]\r\n        }\r\n    }\r\n\r\n    private setvector() {\r\n        let tick = (new Date()).getTime()\r\n        if (tick > this.lastvectorchangetick) {\r\n            this.vector = this.getnewvector()\r\n            this.lastvectorchangetick = tick + this.vectorchangelength\r\n        }\r\n    }\r\n\r\n    private setframe() {\r\n        let tick = (new Date()).getTime()\r\n        if (tick > this.lasttick) {\r\n            if (this.frame < this.framemax) this.frame++\r\n            else if (!this.dead) this.frame = 0\r\n            this.lasttick = tick + this.framelength\r\n        }\r\n    }\r\n\r\n    public move(delta: number) {\r\n        if (!this.dead) {\r\n            this.x += this.vector.x * (delta / 5000)\r\n            this.y += this.vector.y * (delta / 5000)\r\n            this.setvector()\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        this.setframe()\r\n        let image = this.getimage()\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * image.width)\r\n        let texright = Math.floor(this.endtexture * image.width)\r\n        let height = Math.floor(wallheight * 0.8)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(image, texleft, 0, swidth, image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/zombie.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './helpers/mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player implements IPoint {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public facing: Angle,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number, fov: number) {\r\n        var step = fov / columns\r\n        var angle = this.facing.angle + fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, newposition: IPoint) {\r\n        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n            newposition.x = this.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n            newposition.y = this.y\r\n        }\r\n        this.x = newposition.x\r\n        this.y = newposition.y\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        this.correctposition(map, {\r\n            x: this.x - this.facing.cos * delta / 500,\r\n            y: this.y - this.facing.sin * delta / 500\r\n        })\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n            this.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        var audio = new Audio(this.loader.soundssrcs[index]);\r\n        audio.play();\r\n        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n        //     let time = new Date()\r\n        //     let now = time.getTime()\r\n        //     console.log(this.loader.sounds[index].duration)\r\n        //     if (this.audiochannels[a].finish < now) {\r\n        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n        //         this.audiochannels[a].audioel.play()\r\n        //         break\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts"],"sourceRoot":""}