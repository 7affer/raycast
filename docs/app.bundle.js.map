{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 0d059cfebcd48dfcff6c","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/mathconst.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","scene","renderframe","requestAnimationFrame","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","gamesettins","width","height","fov","Math","PI","drawingdistance","sceneevents","renderfps","e","innerText","floor","toString","canvas","ctx","getContext","map","Map","player","Player","x","size","y","Angle","controls","Controls","assetloader","AssetLoader","Scene","style","bindevents","initonmap","loadall","this","loadedwalls","wallssrcs","walls","Image","prototype","callback","_this","i","onload","length","src","ray_1","distancecalc_1","settings","events","assets","lastrender","Date","now","height2","wallheight","renderbackground","fillStyle","fillRect","renderwall","row","distancecorrected","image","textureposition","ceil","top","texleft","drawImage","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","stroke","delta","getcontrols","rays","getrays","r","colisions","Ray","cast","position","type","modx","point","mody","abs","distance","DistanceCalc","getdistance","cos","facing","angle","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","Colision","getvalue","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","canvaselement","pointerLockElement","removeEventListener","sin","randparam","Uint8Array","randomize","setvalue","value","pos","random","mathconst_1","columns","step","Array","push","movement","correctposition","moveforward","movebackward","newfacing","PI0_5","PI1_0","PI1_5","PI2_0"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(12);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(7);\r\n\tvar angle_1 = __webpack_require__(8);\r\n\tvar map_1 = __webpack_require__(9);\r\n\tvar player_1 = __webpack_require__(10);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar gamesettins = {\r\n\t    width: 1024,\r\n\t    height: 600,\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 25\r\n\t};\r\n\tvar sceneevents = {\r\n\t    renderfps: function (e) { fps.innerText = (Math.floor(e)).toString(); }\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(1000, 0.3);\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar scene = new scene_1.Scene(ctx, map, player, controls, gamesettins, sceneevents, assetloader);\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tfunction render() {\r\n\t    scene.renderframe();\r\n\t    requestAnimationFrame(render);\r\n\t}\r\n\tassetloader.loadall(render);\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loadedwalls = 0;\r\n\t        this.wallssrcs = [\r\n\t            '/assets/wall1.jpg',\r\n\t            '/assets/wall2.jpg',\r\n\t            '/assets/wall3.jpg',\r\n\t            '/assets/wall4.jpg',\r\n\t            '/assets/wall5.jpg'\r\n\t        ];\r\n\t        this.walls = [\r\n\t            new Image(),\r\n\t            new Image(),\r\n\t            new Image(),\r\n\t            new Image(),\r\n\t            new Image()\r\n\t        ];\r\n\t    }\r\n\t    AssetLoader.prototype.loadall = function (callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loadedwalls += 1;\r\n\t                if (_this.loadedwalls == _this.wallssrcs.length)\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ray_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(6);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, map, player, controls, settings, events, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.map = map;\r\n\t        this.player = player;\r\n\t        this.controls = controls;\r\n\t        this.settings = settings;\r\n\t        this.events = events;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function () {\r\n\t        this.ctx.fillStyle = '#ffffff';\r\n\t        this.ctx.fillRect(0, 0, this.settings.width, this.settings.height);\r\n\t        this.ctx.fillStyle = '#000000';\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.height2);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distancecorrected, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distancecorrected);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        this.ctx.beginPath();\r\n\t        this.ctx.moveTo(row, top);\r\n\t        this.ctx.lineTo(row, this.settings.height - top);\r\n\t        this.ctx.lineWidth = 2;\r\n\t        this.ctx.strokeStyle = '#000000';\r\n\t        this.ctx.globalAlpha = distancecorrected / this.settings.drawingdistance;\r\n\t        this.ctx.stroke();\r\n\t        this.ctx.globalAlpha = 1;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function () {\r\n\t        var now = Date.now();\r\n\t        var delta = now - this.lastrender;\r\n\t        this.lastrender = now;\r\n\t        this.events.renderfps(Math.floor(1000 / delta));\r\n\t        this.renderbackground();\r\n\t        this.player.getcontrols(this.controls, this.map, delta);\r\n\t        var rays = this.player.getrays(this.settings.width);\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var colisions = ray_1.Ray.cast(this.map, this.player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var c = 0; c < colisions.length; c++) {\r\n\t                if (colisions[c].type > 0) {\r\n\t                    var modx = colisions[c].point.x - Math.floor(colisions[c].point.x);\r\n\t                    var mody = colisions[c].point.y - Math.floor(colisions[c].point.y);\r\n\t                    var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t                    var distance = distancecalc_1.DistanceCalc.getdistance(this.player.position, colisions[c].point);\r\n\t                    var distancecorrected = distance * Math.cos(this.player.facing.angle - rays[r].angle);\r\n\t                    this.renderwall(r, distancecorrected, this.assets.walls[colisions[c].type - 1], textureposition);\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(5);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            return [new colision_1.Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n\t                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            return [new colision_1.Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n\t                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = angle;\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(11);\r\n\tvar angle_1 = __webpack_require__(8);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d059cfebcd48dfcff6c","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet gamesettins = {\r\n    width: 1024,\r\n    height: 600,\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 25\r\n}\r\n\r\nlet sceneevents = {\r\n    renderfps: (e: number) => { fps.innerText = (Math.floor(e)).toString() }\r\n}\r\n\r\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet ctx = canvas.getContext('2d')\r\nlet map = new Map(1000, 0.3)\r\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov)\r\nlet controls = new Controls()\r\nlet assetloader = new AssetLoader()\r\nlet scene = new Scene(ctx, map, player, controls, gamesettins, sceneevents, assetloader)\r\n\r\ncanvas.width = gamesettins.width\r\ncanvas.height = gamesettins.height\r\ncanvas.style.width = `${gamesettins.width}px`\r\ncanvas.style.height = `${gamesettins.height}px`\r\ncontrols.bindevents(document, canvas)\r\nplayer.initonmap(map)\r\n\r\nfunction render() {\r\n    scene.renderframe()\r\n    requestAnimationFrame(render)\r\n}\r\nassetloader.loadall(render)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            '/assets/wall1.jpg',\r\n            '/assets/wall2.jpg',\r\n            '/assets/wall3.jpg',\r\n            '/assets/wall4.jpg',\r\n            '/assets/wall5.jpg'\r\n        ]\r\n\r\n        this.walls = [\r\n            new Image(),\r\n            new Image(),\r\n            new Image(),\r\n            new Image(),\r\n            new Image()\r\n        ]\r\n    }\r\n\r\n    private loadedwalls = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n\r\n    public loadall(callback: () => void) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loadedwalls += 1\r\n                if (this.loadedwalls == this.wallssrcs.length) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import {AssetLoader} from './assetloader';\r\nimport {ISceneEvents} from './isceneevents';\r\nimport {ISettings} from './isettings';\r\nimport {Map} from './map';\r\nimport {Player} from './player';\r\nimport {Controls} from './controls';\r\nimport {Ray} from './ray';\r\nimport {DistanceCalc} from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private map: Map,\r\n        private player: Player,\r\n        private controls: Controls,\r\n        private settings: ISettings,\r\n        private events: ISceneEvents,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground() {\r\n        this.ctx.fillStyle = '#ffffff'\r\n        this.ctx.fillRect(0, 0, this.settings.width, this.settings.height)\r\n        this.ctx.fillStyle = '#000000'\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.height2)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number, \r\n        distancecorrected: number, \r\n        image: HTMLImageElement, \r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distancecorrected)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(row, top)\r\n        this.ctx.lineTo(row, this.settings.height - top)\r\n        this.ctx.lineWidth = 2\r\n        this.ctx.strokeStyle = '#000000'\r\n        this.ctx.globalAlpha = distancecorrected / this.settings.drawingdistance\r\n        this.ctx.stroke()\r\n        this.ctx.globalAlpha = 1\r\n    }\r\n\r\n    public renderframe() {\r\n        let now = Date.now()\r\n        let delta = now - this.lastrender\r\n        this.lastrender = now\r\n        this.events.renderfps(Math.floor(1000 / delta))\r\n        this.renderbackground()\r\n        this.player.getcontrols(this.controls, this.map, delta)\r\n\r\n        var rays = this.player.getrays(this.settings.width)\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let colisions = Ray.cast(this.map, this.player.position, null, null, rays[r], this.settings.drawingdistance)\r\n            for (let c = 0; c < colisions.length; c++) {\r\n                if (colisions[c].type > 0) {\r\n                    let modx = colisions[c].point.x - Math.floor(colisions[c].point.x) \r\n                    let mody = colisions[c].point.y - Math.floor(colisions[c].point.y)\r\n                    let textureposition = Math.abs(modx > mody ? modx : mody)\r\n                    let distance = DistanceCalc.getdistance(this.player.position, colisions[c].point)\r\n                    let distancecorrected = distance * Math.cos(this.player.facing.angle - rays[r].angle)\r\n                    this.renderwall(r, distancecorrected, this.assets.walls[colisions[c].type - 1], textureposition)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y+ facing.dy) \r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x+ facing.dx) \r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n\r\n            return [new Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            return [new Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock\r\n            canvas.requestPointerLock()\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = angle\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        } \r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts"],"sourceRoot":""}