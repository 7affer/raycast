{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 48ad9e9cd3e8692b2b7c","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/sprite.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/mathconst.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","now","Date","delta","lastrender","objectsinrange","Array","i","sprites","length","Math","abs","player","position","x","gamesettins","drawingdistance","y","angle","angle_1","Angle","normalizeangle","atan2","push","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","fps","innerText","floor","toString","sprite_1","assetloader_1","scene_1","controls_1","map_1","player_1","document","getElementById","width","window","innerWidth","height","fov","PI","floorcolor1","floorcolor2","canvas","ctx","getContext","Map","Controls","assetloader","AssetLoader","Player","size","Scene","Sprite","random","style","bindevents","initonmap","loadall","prog","innerHTML","ceil","display","type","this","start","wallssrcs","walls","item","Image","spritessrcs","skylinesrcs","skyline","soundssrcs","sounds","Audio","prototype","isloaded","toload","onprogress","callback","_this","onload","src","oncanplaythrough","mathconst_1","ray_1","distancecalc_1","settings","assets","height2","wallheight","renderbackground","image","PI4","sleft","PI2_0","facing","swidth","drawImage","fillStyle","fillRect","renderwall","row","distance","textureposition","top","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","drawwall","left","wall","modx","point","mody","drawobject","object","bottom","starttexture","texright","endtexture","max","end","drawfloor","useback","newbottom","objects","rays","getrays","r","drawfloorray","walldistance","cos","colisions","Ray","cast","_i","colisions_1","colision","DistanceCalc","getdistance","_a","objects_1","PI1_5","diff","_b","objects_2","PI0_5","PI1_0","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","getvalue","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","sin","randparam","Uint8Array","randomize","setvalue","value","pos","mixer_1","loader","mixer","Mixer","columns","step","playsound","movement","correctposition","moveforward","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","time","getTime","console","log","duration","play"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(14);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(2);\r\n\tvar assetloader_1 = __webpack_require__(3);\r\n\tvar scene_1 = __webpack_require__(4);\r\n\tvar controls_1 = __webpack_require__(9);\r\n\tvar angle_1 = __webpack_require__(10);\r\n\tvar map_1 = __webpack_require__(11);\r\n\tvar player_1 = __webpack_require__(12);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311'\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(150, 0.3);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov, assetloader);\r\n\tvar scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\tvar sprites = new Array();\r\n\tfor (var i = 0; i < map.size * 25; i++) {\r\n\t    sprites.push(new sprite_1.Sprite({\r\n\t        x: Math.random() * map.size,\r\n\t        y: Math.random() * map.size\r\n\t    }, Math.floor(Math.random() * 5)));\r\n\t}\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tvar objectsinrange = new Array();\r\n\tvar lastrender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastrender;\r\n\t    lastrender = now;\r\n\t    objectsinrange = new Array();\r\n\t    for (var i = 0; i < sprites.length; i++) {\r\n\t        if (Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n\t            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance) {\r\n\t            sprites[i].angle = angle_1.Angle.normalizeangle(Math.atan2(sprites[i].position.y - player.position.y, sprites[i].position.x - player.position.x));\r\n\t            objectsinrange.push(sprites[i]);\r\n\t        }\r\n\t    }\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    scene.renderframe(delta, map, player, objectsinrange);\r\n\t    requestAnimationFrame(render);\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t}\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () { document.getElementById('loading-container').style.display = 'none'; render(); });\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(position, type) {\r\n\t        this.position = position;\r\n\t        this.type = type;\r\n\t        this.start = -1;\r\n\t    }\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.walls = new Array();\r\n\t        for (var item in this.wallssrcs)\r\n\t            this.walls.push(new Image());\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        for (var item in this.spritessrcs)\r\n\t            this.sprites.push(new Image());\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.skyline = new Array();\r\n\t        for (var item in this.skylinesrcs)\r\n\t            this.skyline.push(new Image());\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sounds = new Array();\r\n\t        for (var item in this.soundssrcs)\r\n\t            this.sounds.push(new Audio());\r\n\t    }\r\n\t    AssetLoader.prototype.isloaded = function () {\r\n\t        return this.loaded == this.toload();\r\n\t    };\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.skyline.length +\r\n\t            this.sounds.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t        for (var i in this.spritessrcs) {\r\n\t            this.sprites[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sprites[i].src = this.spritessrcs[i];\r\n\t        }\r\n\t        for (var i in this.skylinesrcs) {\r\n\t            this.skyline[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.skyline[i].src = this.skylinesrcs[i];\r\n\t        }\r\n\t        for (var i in this.soundssrcs) {\r\n\t            this.sounds[i].oncanplaythrough = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sounds[i].src = this.soundssrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar distancecalc_1 = __webpack_require__(8);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function (player) {\r\n\t        var image = this.assets.skyline[0];\r\n\t        var PI4 = 4 * Math.PI;\r\n\t        var sleft = ((mathconst_1.PI2_0 - (player.facing.angle + player.fov / 2)) / PI4) * image.width;\r\n\t        sleft = Math.abs(sleft);\r\n\t        sleft = Math.floor(sleft);\r\n\t        var swidth = Math.floor((image.width * player.fov) / PI4);\r\n\t        var height = Math.floor(this.settings.height * 0.5);\r\n\t        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.point.x - Math.floor(wall.point.x);\r\n\t        var mody = wall.point.y - Math.floor(wall.point.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        if (distance < 3) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition);\r\n\t        }\r\n\t        else {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawobject = function (object) {\r\n\t        var wallheight = Math.ceil(this.wallheight / object.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var image = this.assets.sprites[object.type];\r\n\t        var texleft = Math.floor(object.starttexture * image.width);\r\n\t        var texright = Math.floor(object.endtexture * image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        var width = Math.max(1, object.end - object.start);\r\n\t        this.ctx.drawImage(image, texleft, 0, swidth, image.height, object.start, top, width, height);\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 3;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, objects) {\r\n\t        this.renderbackground(player);\r\n\t        var rays = player.getrays(this.settings.width);\r\n\t        var drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colision.point) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\r\n\t                var object = objects_1[_a];\r\n\t                object.distance = distancecalc_1.DistanceCalc.getdistance(player.position, object.position);\r\n\t                if (object.distance < this.settings.drawingdistance && object.distance < walldistance) {\r\n\t                    if (object.distance < 0.25)\r\n\t                        object.distance = 0.25;\r\n\t                    if (rays[r].angle > mathconst_1.PI1_5)\r\n\t                        rays[r].angle -= mathconst_1.PI2_0;\r\n\t                    if (object.angle > mathconst_1.PI1_5)\r\n\t                        object.angle -= mathconst_1.PI2_0;\r\n\t                    var diff = (rays[r].angle - object.angle) / (2 * Math.atan2(0.05, object.distance));\r\n\t                    if (Math.abs(diff) <= 1) {\r\n\t                        diff = Math.abs((diff - 1) * 0.5);\r\n\t                        if (object.start < 0) {\r\n\t                            object.start = r;\r\n\t                            object.starttexture = diff;\r\n\t                        }\r\n\t                        object.end = r;\r\n\t                        object.endtexture = diff;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        for (var _b = 0, objects_2 = objects; _b < objects_2.length; _b++) {\r\n\t            var object = objects_2[_b];\r\n\t            if (object.start >= 0)\r\n\t                this.drawobject(object);\r\n\t            object.start = -1;\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageX < window.innerWidth * 0.333)\r\n\t            this.rotateleft = true;\r\n\t        else if (t.pageX < window.innerWidth * 0.666)\r\n\t            this.forward = true;\r\n\t        else\r\n\t            this.rotateright = true;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(5);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(13);\r\n\tvar mathconst_1 = __webpack_require__(5);\r\n\tvar angle_1 = __webpack_require__(10);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov, loader) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t        this.loader = loader;\r\n\t        this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        this.mixer.playsound(0);\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        for (var a = 0; a < this.audiochannels.length; a++) {\r\n\t            var time = new Date();\r\n\t            var now = time.getTime();\r\n\t            console.log(this.loader.sounds[index].duration);\r\n\t            if (this.audiochannels[a].finish < now) {\r\n\t                this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000;\r\n\t                this.audiochannels[a].audioel.src = this.loader.sounds[index].src;\r\n\t                this.audiochannels[a].audioel.play();\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 48ad9e9cd3e8692b2b7c","import { Sprite } from './sprite';\r\nimport { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311'\r\n}\r\n\r\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet ctx = canvas.getContext('2d')\r\nlet map = new Map(150, 0.3)\r\nlet controls = new Controls()\r\nlet assetloader = new AssetLoader()\r\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov, assetloader)\r\nlet scene = new Scene(ctx, gamesettins, assetloader)\r\nlet sprites = new Array<Sprite>()\r\nfor (let i = 0; i < map.size * 25; i++) {\r\n    sprites.push(\r\n        new Sprite({\r\n            x: Math.random() * map.size,\r\n            y: Math.random() * map.size\r\n        },\r\n            Math.floor(Math.random() * 5)\r\n        )\r\n    )\r\n}\r\n\r\ncanvas.width = gamesettins.width\r\ncanvas.height = gamesettins.height\r\ncanvas.style.width = `${gamesettins.width}px`\r\ncanvas.style.height = `${gamesettins.height}px`\r\ncontrols.bindevents(document, canvas)\r\nplayer.initonmap(map)\r\n\r\nlet objectsinrange = new Array<Sprite>()\r\nlet lastrender: number = Date.now()\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastrender\r\n    lastrender = now\r\n\r\n    objectsinrange = new Array<Sprite>()\r\n    for (let i = 0; i < sprites.length; i++) {\r\n        if (\r\n            Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance\r\n        ) {\r\n            sprites[i].angle = Angle.normalizeangle(Math.atan2(\r\n                sprites[i].position.y - player.position.y,\r\n                sprites[i].position.x - player.position.x\r\n            ))\r\n            objectsinrange.push(sprites[i])\r\n        }\r\n    }\r\n\r\n    player.getcontrols(controls, map, delta)\r\n    scene.renderframe(delta, map, player, objectsinrange)\r\n    requestAnimationFrame(render)\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n}\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { document.getElementById('loading-container').style.display = 'none'; render() }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","import { Angle } from './angle';\r\nimport { IPoint } from './ipoint';\r\nexport class Sprite {\r\n\r\n    public angle: number\r\n    public start: number = -1\r\n    public starttexture: number\r\n    public end: number\r\n    public endtexture: number\r\n    public distance: number\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprite.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n        this.walls = new Array<HTMLImageElement>()\r\n        for (let item in this.wallssrcs) this.walls.push(new Image())\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        for (let item in this.spritessrcs) this.sprites.push(new Image())\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        for (let item in this.skylinesrcs) this.skyline.push(new Image())\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n        for (let item in this.soundssrcs) this.sounds.push(new Audio())\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    private soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private isloaded() {\r\n        return this.loaded == this.toload()\r\n    }\r\n\r\n    private toload() {\r\n        return this.walls.length + \r\n            this.sprites.length + \r\n            this.skyline.length +\r\n            this.sounds.length\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog:number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n\r\n        for (let i in this.spritessrcs) {\r\n            this.sprites[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sprites[i].src = this.spritessrcs[i]\r\n        }\r\n\r\n        for (let i in this.skylinesrcs) {\r\n            this.skyline[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.skyline[i].src = this.skylinesrcs[i]\r\n        }\r\n        for (let i in this.soundssrcs) {\r\n            this.sounds[i].oncanplaythrough = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sounds[i].src = this.soundssrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0 } from './mathconst';\r\nimport { Sprite } from './sprite';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground(player: Player) {\r\n        let image = this.assets.skyline[0]\r\n        let PI4 = 4 * Math.PI\r\n        let sleft = ((PI2_0 - (player.facing.angle + player.fov / 2)) / PI4) * image.width\r\n        sleft = Math.abs(sleft)\r\n        sleft = Math.floor(sleft)\r\n        let swidth = Math.floor((image.width * player.fov) / PI4)\r\n        let height = Math.floor(this.settings.height * 0.5)\r\n        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = Math.min(distance,shadowdistance) / shadowdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.point.x - Math.floor(wall.point.x)\r\n        let mody = wall.point.y - Math.floor(wall.point.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        if (distance < 3) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n        } else if (distance < 8) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition)\r\n        } else {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition)\r\n        }\r\n    }\r\n\r\n    private drawobject(object: Sprite) {\r\n        let wallheight = Math.ceil(this.wallheight / object.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let image = this.assets.sprites[object.type]\r\n        let texleft = Math.floor(object.starttexture * image.width)\r\n        let texright = Math.floor(object.endtexture * image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        let width = Math.max(1, object.end - object.start)\r\n        this.ctx.drawImage(image, texleft, 0, swidth, image.height, object.start, top, width, height)\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 3\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, objects: Array<Sprite>) {\r\n        this.renderbackground(player)\r\n        let rays = player.getrays(this.settings.width)\r\n        let drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.getdistance(player.position, colision.point) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            for (let object of objects) {\r\n                object.distance = DistanceCalc.getdistance(player.position, object.position)\r\n                if (object.distance < this.settings.drawingdistance && object.distance < walldistance) {\r\n                    if (object.distance < 0.25) object.distance = 0.25\r\n                    if (rays[r].angle > PI1_5) rays[r].angle -= PI2_0\r\n                    if (object.angle > PI1_5) object.angle -= PI2_0\r\n                    let diff = (rays[r].angle - object.angle) / (2 * Math.atan2(0.05, object.distance))\r\n                    if (Math.abs(diff) <= 1) {\r\n                        diff = Math.abs((diff - 1) * 0.5)\r\n                        if (object.start < 0) {\r\n                            object.start = r\r\n                            object.starttexture = diff\r\n                        }\r\n                        object.end = r\r\n                        object.endtexture = diff\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let object of objects) {\r\n            if (object.start >= 0) this.drawobject(object)\r\n            object.start = -1\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h, type)]\r\n            } else {\r\n                return [new Colision(h, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n            }\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v, type)]\r\n            } else {\r\n                return [new Colision(v, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n        else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n        else this.rotateright = true\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    private mixer: Mixer\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number,\r\n        private loader: AssetLoader\r\n    ) {\r\n        this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        this.mixer.playsound(0)\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) { \r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        for (let a = 0; a < this.audiochannels.length; a++) {\r\n            let time = new Date()\r\n            let now = time.getTime()\r\n            console.log(this.loader.sounds[index].duration)\r\n            if (this.audiochannels[a].finish < now) {\r\n                this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n                this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n                this.audiochannels[a].audioel.play()\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts"],"sourceRoot":""}