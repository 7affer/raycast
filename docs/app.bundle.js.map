{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 7d6295274d965d83a088","webpack:///./src/main.ts","webpack:///./src/controls.ts","webpack:///./src/distancecalc.ts","webpack:///./src/wallfactory.ts","webpack:///./src/angle.ts","webpack:///./src/ray.ts","webpack:///./src/colision.ts","webpack:///./src/map.ts","webpack:///./src/player.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","initctx","canvas","width","WIDTH","height","HEIGHT","document","addEventListener","e","controls","keydown","keyCode","keyup","render","now","Date","delta","lastRender","fps","innerText","Math","floor","toString","ctx","fillStyle","fillRect","HEIGHT2","player","getcontrols","rays","getrays","r","length","colisions","ray_1","Ray","cast","map","position","type","distance","distancecalc_1","DistanceCalc","getdistance","point","WALLHEIGHT","cos","facing","angle","ceil","color","putImageData","wallfact","getpxdata","requestAnimationFrame","controls_1","wallfactory_1","angle_1","map_1","player_1","WallFactory","canvaselement","getElementById","getContext","FOV","Map","Player","x","size","y","Angle","PI","Controls","randomize","this","rotateleft","rotateright","forward","backward","prototype","keycode","a","b","sqrt","pxdatacache","g","data","createpxdata","pxdata","createImageData","h","sin","tg","ctg","dx","dy","colision_1","nearesty","origin","nexty","manhattandistance","abs","nearestx","nextx","nexth","nextv","maxdistance","v","Colision","getvalue","concat","Uint8Array","setvalue","value","pos","factor","i","random","fov","columns","step","Array","push","moveforward","movebackward"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(10);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar controls_1 = __webpack_require__(2);\r\n\tvar distancecalc_1 = __webpack_require__(3);\r\n\tvar wallfactory_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar map_1 = __webpack_require__(8);\r\n\tvar player_1 = __webpack_require__(9);\r\n\tvar wallfact = new wallfactory_1.WallFactory();\r\n\tvar canvaselement = document.getElementById('gamecanvas');\r\n\tvar fps = document.getElementById('fps');\r\n\tvar ctx = canvaselement.getContext('2d');\r\n\tvar WIDTH = 800;\r\n\tvar HEIGHT = 600;\r\n\tvar HEIGHT2 = HEIGHT / 2;\r\n\tvar WALLHEIGHT = HEIGHT * 0.8;\r\n\tvar FOV = 90;\r\n\tvar map = new map_1.Map(100);\r\n\tvar player = new player_1.Player({ x: map.size / 2, y: map.size / 2 }, new angle_1.Angle(0), FOV * Math.PI / 180);\r\n\tvar controls = new controls_1.Controls();\r\n\tfunction initctx(canvas) {\r\n\t    canvas.width = WIDTH;\r\n\t    canvas.height = HEIGHT;\r\n\t    document.addEventListener('keydown', function (e) {\r\n\t        controls.keydown(e.keyCode);\r\n\t    }, false);\r\n\t    document.addEventListener('keyup', function (e) {\r\n\t        controls.keyup(e.keyCode);\r\n\t    }, false);\r\n\t}\r\n\tvar lastRender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastRender;\r\n\t    lastRender = now;\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    ctx.fillStyle = '#ffffff';\r\n\t    ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\t    ctx.fillStyle = '#000000';\r\n\t    ctx.fillRect(0, HEIGHT2, WIDTH, HEIGHT2);\r\n\t    player.getcontrols(controls, delta);\r\n\t    var rays = player.getrays(WIDTH);\r\n\t    for (var r = 0; r < rays.length; r++) {\r\n\t        var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], 20);\r\n\t        for (var c = 0; c < colisions.length; c++) {\r\n\t            if (colisions[c].type > 0) {\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colisions[c].point);\r\n\t                var height = WALLHEIGHT / (distance * Math.cos(0.99 * (player.facing.angle - rays[r].angle)));\r\n\t                height = Math.ceil(height > HEIGHT ? HEIGHT : height);\r\n\t                var color = Math.floor(255 - distance * 10);\r\n\t                ctx.putImageData(wallfact.getpxdata(ctx, height, color, color, color, 255), r, HEIGHT2 - height / 2);\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    requestAnimationFrame(render);\r\n\t}\r\n\tmap.randomize(0.3);\r\n\tinitctx(canvaselement);\r\n\trender();\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t    }\r\n\t    Controls.prototype.keydown = function (keycode) {\r\n\t        if (keycode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (keycode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (keycode == 38)\r\n\t            this.forward = true;\r\n\t        if (keycode == 40)\r\n\t            this.backward = true;\r\n\t    };\r\n\t    Controls.prototype.keyup = function (keycode) {\r\n\t        if (keycode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (keycode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (keycode == 38)\r\n\t            this.forward = false;\r\n\t        if (keycode == 40)\r\n\t            this.backward = false;\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar WallFactory = (function () {\r\n\t    function WallFactory() {\r\n\t        this.pxdatacache = [];\r\n\t    }\r\n\t    WallFactory.prototype.getpxdata = function (ctx, height, r, g, b, a) {\r\n\t        var data = this.pxdatacache[height];\r\n\t        if (data == null) {\r\n\t            data = this.createpxdata(ctx, height, r, g, b, a);\r\n\t            this.pxdatacache[height] = data;\r\n\t        }\r\n\t        return data;\r\n\t    };\r\n\t    WallFactory.prototype.createpxdata = function (ctx, height, r, g, b, a) {\r\n\t        var pxdata = ctx.createImageData(1, height);\r\n\t        var h = 0;\r\n\t        while (h < 4 * height) {\r\n\t            pxdata.data[h++] = r;\r\n\t            pxdata.data[h++] = g;\r\n\t            pxdata.data[h++] = b;\r\n\t            pxdata.data[h++] = a;\r\n\t        }\r\n\t        return pxdata;\r\n\t    };\r\n\t    return WallFactory;\r\n\t}());\r\n\texports.WallFactory = WallFactory;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = angle;\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y) + facing.dy;\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x) + facing.dx;\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            return [new colision_1.Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n\t                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            return [new colision_1.Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n\t                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (factor) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            this.map[i] = Math.random() < factor ? 1 : 0;\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI / delta);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI / delta);\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta) {\r\n\t        this.position = {\r\n\t            x: this.position.x + this.facing.cos / delta,\r\n\t            y: this.position.y + this.facing.sin / delta\r\n\t        };\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta) {\r\n\t        this.position = {\r\n\t            x: this.position.x - this.facing.cos / delta,\r\n\t            y: this.position.y - this.facing.sin / delta\r\n\t        };\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta);\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7d6295274d965d83a088","import { Controls } from './controls';\r\nimport { DistanceCalc } from './distancecalc';\r\nimport { WallFactory } from './wallfactory';\r\nimport { Angle } from './angle';\r\nimport { Ray } from './ray';\r\nimport { PI2_0 } from './mathconst'\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\nconst wallfact = new WallFactory()\r\nconst canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nconst fps = <HTMLSpanElement>document.getElementById('fps')\r\nconst ctx = canvaselement.getContext('2d')\r\nconst WIDTH = 800\r\nconst HEIGHT = 600\r\nconst HEIGHT2 = HEIGHT / 2\r\nconst WALLHEIGHT = HEIGHT * 0.8\r\nconst FOV = 90\r\n\r\nconst map = new Map(100)\r\nconst player = new Player(\r\n    { x: map.size / 2, y: map.size / 2 },\r\n    new Angle(0),\r\n    FOV * Math.PI / 180\r\n)\r\nconst controls = new Controls()\r\n\r\nfunction initctx(canvas: HTMLCanvasElement) {\r\n    canvas.width = WIDTH\r\n    canvas.height = HEIGHT\r\n    document.addEventListener('keydown', function (e: KeyboardEvent) {\r\n        controls.keydown(e.keyCode)\r\n    }, false)\r\n    document.addEventListener('keyup', function (e: KeyboardEvent) {\r\n        controls.keyup(e.keyCode)\r\n    }, false)\r\n}\r\n\r\nlet lastRender = Date.now();\r\n\r\n\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastRender\r\n    lastRender = now\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n    ctx.fillStyle = '#ffffff'\r\n    ctx.fillRect(0, 0, WIDTH, HEIGHT)\r\n    ctx.fillStyle = '#000000'\r\n    ctx.fillRect(0, HEIGHT2, WIDTH, HEIGHT2)\r\n\r\n    player.getcontrols(controls, delta)\r\n    var rays = player.getrays(WIDTH)\r\n\r\n    for (let r = 0; r < rays.length; r++) {\r\n        let colisions = Ray.cast(map, player.position, null, null, rays[r], 20)\r\n        for (let c = 0; c < colisions.length; c++) {\r\n            if (colisions[c].type > 0) {\r\n                let distance = DistanceCalc.getdistance(player.position, colisions[c].point)\r\n                let height = \r\n                    WALLHEIGHT / (distance * Math.cos(0.99 * (player.facing.angle - rays[r].angle)))\r\n\r\n                height = Math.ceil(height > HEIGHT ? HEIGHT : height)\r\n                let color = Math.floor(255 - distance * 10)\r\n\r\n                ctx.putImageData(\r\n                    wallfact.getpxdata(ctx, height, color, color, color, 255),\r\n                    r,\r\n                    HEIGHT2 - height / 2\r\n                )\r\n                break\r\n            }\r\n        }\r\n    }\r\n    requestAnimationFrame(render)\r\n}\r\n\r\nmap.randomize(0.3)\r\ninitctx(canvaselement)\r\nrender()\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n\r\n    public keydown(keycode: number) {\r\n        if (keycode == 37) this.rotateleft = true\r\n        if (keycode == 39) this.rotateright = true\r\n        if (keycode == 38) this.forward = true\r\n        if (keycode == 40) this.backward = true\r\n    }\r\n\r\n    public keyup(keycode: number) {\r\n        if (keycode == 37) this.rotateleft = false\r\n        if (keycode == 39) this.rotateright = false\r\n        if (keycode == 38) this.forward = false\r\n        if (keycode == 40) this.backward = false\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/controls.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/distancecalc.ts","export class WallFactory {\r\n    private pxdatacache: any = []\r\n\r\n    public getpxdata(ctx: CanvasRenderingContext2D, height: number, r: number, g: number, b: number, a: number) {\r\n        let data = this.pxdatacache[height]\r\n        if (data == null) {\r\n            data = this.createpxdata(ctx, height, r, g, b, a)\r\n            this.pxdatacache[height] = data\r\n        }\r\n        return data\r\n    }\r\n\r\n    private createpxdata(ctx: CanvasRenderingContext2D, height: number, r: number, g: number, b: number, a: number) {\r\n        let pxdata = ctx.createImageData(1, height)\r\n        let h = 0\r\n        while (h < 4 * height) {\r\n            pxdata.data[h++] = r\r\n            pxdata.data[h++] = g\r\n            pxdata.data[h++] = b\r\n            pxdata.data[h++] = a\r\n        }\r\n        return pxdata\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/wallfactory.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = angle\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/angle.ts","import { IManhattanDist } from './imanhattandist';\nimport { IPoint } from './ipoint';\nimport { Colision } from './colision';\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\nimport { Angle } from './angle';\nimport { Map } from './map';\n\nexport class Ray {\n\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\n        let nexty = Math.floor(origin.y) + facing.dy\n        if (nexty == origin.y) nexty -= 1\n        let dy = nexty - origin.y\n        let dx = facing.ctg * dy\n        return {\n            x: dx + origin.x,\n            y: nexty,\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\n        }\n    }\n\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\n        let nextx = Math.floor(origin.x) + facing.dx\n        if (nextx == origin.x) nextx -= 1\n        let dx = nextx - origin.x\n        let dy = facing.tg * dx\n        return {\n            x: nextx,\n            y: dy + origin.y,\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\n        }\n    }\n\n    public static cast(\n        map: Map,\n        origin: IPoint,\n        nexth: IManhattanDist,\n        nextv: IManhattanDist,\n        facing: Angle,\n        maxdistance: number\n    ): Colision[] {\n\n        if (maxdistance < 1) return []\n\n        let h = nexth || Ray.nearesty(origin, facing)\n        let v = nextv || Ray.nearestx(origin, facing)\n\n        if (h.manhattandistance < v.manhattandistance) {\n            v.manhattandistance -= h.manhattandistance\n\n            return [new Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\n                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\n        } else {\n            h.manhattandistance -= v.manhattandistance\n            return [new Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\n                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/colision.ts","export class Map {\n    public map: Uint8Array\n    public size: number\n\n    constructor(size: number) {\n        this.map = new Uint8Array(size * size)\n        this.size = size\n    }\n\n    public setvalue(x: number, y: number, value: number) {\n        let pos = this.size * y + x\n        if (pos < this.map.length && pos >= 0) {\n            this.map[this.size * y + x] = value\n        }\n    }\n\n    public getvalue(x: number, y: number) {\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\n            let pos = this.size * y + x\n            return this.map[pos]\n        }\n        return 0\n    }\n\n    public randomize(factor:number) {\n        for (let i = 0; i < this.map.length; i++) {\n            this.map[i] = Math.random() < factor ? 1 : 0\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/map.ts","import { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI / delta)\r\n    }\r\n\r\n    public rotateright(delta: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI / delta)\r\n    }\r\n\r\n    public moveforward(delta: number) {\r\n        this.position = {\r\n            x: this.position.x + this.facing.cos / delta,\r\n            y: this.position.y + this.facing.sin / delta\r\n        }\r\n    }\r\n\r\n    public movebackward(delta: number) {\r\n        this.position = {\r\n            x: this.position.x - this.facing.cos / delta,\r\n            y: this.position.y - this.facing.sin / delta\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, delta: number) {\r\n        if (controls.forward) this.moveforward(delta)\r\n        if (controls.backward) this.movebackward(delta)\r\n        if (controls.rotateleft) this.rotateleft(delta)\r\n        if (controls.rotateright) this.rotateright(delta)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player.ts"],"sourceRoot":""}