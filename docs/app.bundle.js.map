{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 4635e8e695a123a96461","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/mathconst.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprites/sprite.ts","webpack:///./src/scripts/sprites/zombie.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts","webpack:///./src/scripts/sprites/spritesfactory.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","width","window","innerWidth","gamesettins","height","Math","floor","fov","PI","drawingdistance","floorcolor1","floorcolor2","wallheight","assetloader","AssetLoader","loadall","prog","innerHTML","ceil","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","innerText","toString","style","display","canvas","ctx","getContext","Map","Controls","Player","size","Angle","Scene","bindevents","initonmap","this","wallssrcs","spritessrcs","zspritessrcs","skylinesrcs","soundssrcs","sprites","Array","zsprites","walls","skyline","sounds","prototype","toload","length","loadimages","arrsrc","arrobj","onprogress","callback","_this","i","push","Image","onload","src","loadaudio","Audio","oncanplaythrough","mathconst_1","ray_1","distancecalc_1","settings","assets","height2","renderbackground","image","PI4","sleft","PI2_0","facing","angle","abs","swidth","drawImage","fillStyle","fillRect","renderwall","row","distance","textureposition","top","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","drawwall","left","wall","modx","x","mody","y","type","drawfloor","bottom","useback","newbottom","filterobjectsinrange","objectsinrange","DistanceCalc","mdistance","getobjectstodraw","rayangle","nearestwalldistance","objecttodraw","_i","sprites_1","object","sprite_player_angle","atan2","anglediff","diff","anglewidth","starttexture","endtexture","rays","getrays","r","drawfloorray","walldistance","cos","colisions","Ray","cast","colisions_1","colision","_a","objectsinrange_1","PI0_5","PI1_0","PI1_5","normalizeangle","sin","tg","ctg","dx","dy","colision_1","origin","nexth","nextv","maxdistance","h","nearesty","v","nearestx","distanceh","distancev","getvalue","Colision","concat","nexty","nextx","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageY","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","spritesfactory_1","randparam","loader","Uint8Array","randomize","spritesfactory","SpritesFactory","createsprite","SpriteType","Static","Zombie","setvalue","value","pos","random","Sprite","maxheight","texright","max","mixer_1","guncooldown","mixer","Mixer","columns","step","time","getTime","playsound","movement","correctposition","newposition","moveforward","position","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","audio","play","sprite_1","zombie_1","mapsize"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(15);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(9);\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar map_1 = __webpack_require__(10);\r\n\tvar player_1 = __webpack_require__(13);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311',\r\n\t    wallheight: Math.floor(width / 1.8) * 0.8\r\n\t};\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () {\r\n\t    document.getElementById('loading-container').style.display = 'none';\r\n\t    var canvas = document.getElementById('gamecanvas');\r\n\t    var ctx = canvas.getContext('2d');\r\n\t    var map = new map_1.Map(150, 0.3, assetloader, gamesettins);\r\n\t    var controls = new controls_1.Controls();\r\n\t    var player = new player_1.Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new angle_1.Angle(0), assetloader);\r\n\t    var scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, canvas);\r\n\t    player.initonmap(map);\r\n\t    var lastrender = Date.now();\r\n\t    function render() {\r\n\t        var now = Date.now();\r\n\t        var delta = now - lastrender;\r\n\t        lastrender = now;\r\n\t        player.getcontrols(controls, map, delta);\r\n\t        scene.renderframe(delta, map, player, gamesettins.fov);\r\n\t        requestAnimationFrame(render);\r\n\t        fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    }\r\n\t    render();\r\n\t});\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.zspritessrcs = [\r\n\t            './assets/sprites/zombie1.png',\r\n\t            './assets/sprites/zombie2.png',\r\n\t            './assets/sprites/zombie3.png',\r\n\t            './assets/sprites/zombie4.png'\r\n\t        ];\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        this.zsprites = new Array();\r\n\t        this.walls = new Array();\r\n\t        this.skyline = new Array();\r\n\t        this.sounds = new Array();\r\n\t    }\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.zsprites.length +\r\n\t            this.skyline.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadimages = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Image());\r\n\t            arrobj[i].onload = function () {\r\n\t                onprogress(++_this.loaded / _this.toload());\r\n\t                if (_this.loaded >= _this.toload())\r\n\t                    callback();\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadaudio = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Audio());\r\n\t            arrobj[i].oncanplaythrough = function () {\r\n\t                //onprogress(++this.loaded / this.toload())\r\n\t                //if (this.loaded >= this.toload()) callback()\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        this.loadimages(this.wallssrcs, this.walls, onprogress, callback);\r\n\t        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback);\r\n\t        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback);\r\n\t        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback);\r\n\t        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback);\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar distancecalc_1 = __webpack_require__(7);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function (player, fov) {\r\n\t        var image = this.assets.skyline[0];\r\n\t        var PI4 = 4 * Math.PI;\r\n\t        var sleft = ((mathconst_1.PI2_0 - (player.facing.angle + fov / 2)) / PI4) * image.width;\r\n\t        sleft = Math.abs(sleft);\r\n\t        sleft = Math.floor(sleft);\r\n\t        var swidth = Math.floor((image.width * fov) / PI4);\r\n\t        var height = Math.floor(this.settings.height * 0.5);\r\n\t        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.x - Math.floor(wall.x);\r\n\t        var mody = wall.y - Math.floor(wall.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        if (distance < 3) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition);\r\n\t        }\r\n\t        else {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 3;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.filterobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (distancecalc_1.DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, rayangle, left, nearestwalldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x);\r\n\t            object.distance = distancecalc_1.DistanceCalc.distance(player, object);\r\n\t            if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n\t                if (object.distance < 0.20)\r\n\t                    object.distance = 0.20;\r\n\t                var anglediff = rayangle - sprite_player_angle;\r\n\t                if (anglediff < -Math.PI)\r\n\t                    anglediff += mathconst_1.PI2_0;\r\n\t                if (anglediff > Math.PI)\r\n\t                    anglediff -= mathconst_1.PI2_0;\r\n\t                var diff = anglediff / Math.atan2(object.anglewidth, object.distance);\r\n\t                if (Math.abs(diff) <= 1) {\r\n\t                    diff = Math.abs((diff - 1));\r\n\t                    if (object.left < 0) {\r\n\t                        object.left = left;\r\n\t                        object.starttexture = diff;\r\n\t                    }\r\n\t                    object.width += 5;\r\n\t                    object.endtexture = diff;\r\n\t                    objecttodraw.push(object);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, fov) {\r\n\t        this.renderbackground(player, fov);\r\n\t        var objectsinrange = this.filterobjectsinrange(player, map.sprites);\r\n\t        var rays = player.getrays(this.settings.width, this.settings.fov);\r\n\t        var drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.distance(player, colision) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            if (r % 5 == 0) {\r\n\t                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.left >= 0)\r\n\t                object.render(this.ctx);\r\n\t            object.left = -1;\r\n\t            object.width = 0;\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar distancecalc_1 = __webpack_require__(7);\r\n\tvar colision_1 = __webpack_require__(8);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        var distanceh = distancecalc_1.DistanceCalc.mdistance(origin, h);\r\n\t        var distancev = distancecalc_1.DistanceCalc.mdistance(origin, v);\r\n\t        if (distanceh < distancev) {\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y\r\n\t        };\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.distance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    DistanceCalc.mdistance = function (a, b) {\r\n\t        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(x, y, type) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 17)\r\n\t            this.shoot = true;\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e, canvas) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageY < canvas.height * 0.5) {\r\n\t            this.shoot = true;\r\n\t        }\r\n\t        else {\r\n\t            if (t.pageX < window.innerWidth * 0.333)\r\n\t                this.rotateleft = true;\r\n\t            else if (t.pageX < window.innerWidth * 0.666)\r\n\t                this.forward = true;\r\n\t            else\r\n\t                this.rotateright = true;\r\n\t        }\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e, canvas); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar spritesfactory_1 = __webpack_require__(17);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam, loader, settings) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        var spritesfactory = new spritesfactory_1.SpritesFactory(loader, size, settings);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 10; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Static));\r\n\t        }\r\n\t        for (var i = 0; i < size * 30; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Zombie));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.2;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Zombie = (function () {\r\n\t    function Zombie(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.35;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Zombie.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.8);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Zombie;\r\n\t}());\r\n\texports.Zombie = Zombie;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(14);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(5);\r\n\tvar Player = (function () {\r\n\t    function Player(x, y, facing, loader) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.facing = facing;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns, fov) {\r\n\t        var step = fov / columns;\r\n\t        var angle = this.facing.angle + fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, newposition) {\r\n\t        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n\t            newposition.x = this.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n\t            newposition.y = this.y;\r\n\t        }\r\n\t        this.x = newposition.x;\r\n\t        this.y = newposition.y;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        this.correctposition(map, {\r\n\t            x: this.x - this.facing.cos * delta / 500,\r\n\t            y: this.y - this.facing.sin * delta / 500\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n\t            this.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        var audio = new Audio(this.loader.soundssrcs[index]);\r\n\t        audio.play();\r\n\t        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n\t        //     let time = new Date()\r\n\t        //     let now = time.getTime()\r\n\t        //     console.log(this.loader.sounds[index].duration)\r\n\t        //     if (this.audiochannels[a].finish < now) {\r\n\t        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n\t        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n\t        //         this.audiochannels[a].audioel.play()\r\n\t        //         break\r\n\t        //     }\r\n\t        // }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(11);\r\n\tvar zombie_1 = __webpack_require__(12);\r\n\tvar SpritesFactory = (function () {\r\n\t    function SpritesFactory(assetloader, mapsize, settings) {\r\n\t        this.assetloader = assetloader;\r\n\t        this.mapsize = mapsize;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    SpritesFactory.prototype.createsprite = function (type) {\r\n\t        switch (type) {\r\n\t            case SpriteType.Static: return new sprite_1.Sprite(Math.random() * this.mapsize, Math.random() * this.mapsize, this.assetloader.sprites[Math.floor(Math.random() * this.assetloader.sprites.length)], this.settings);\r\n\t            case SpriteType.Zombie: return new zombie_1.Zombie(Math.random() * this.mapsize, Math.random() * this.mapsize, this.assetloader.zsprites[Math.floor(Math.random() * this.assetloader.zsprites.length)], this.settings);\r\n\t        }\r\n\t    };\r\n\t    return SpritesFactory;\r\n\t}());\r\n\texports.SpritesFactory = SpritesFactory;\r\n\tvar SpriteType;\r\n\t(function (SpriteType) {\r\n\t    SpriteType[SpriteType[\"Static\"] = 1] = \"Static\";\r\n\t    SpriteType[SpriteType[\"Zombie\"] = 2] = \"Zombie\";\r\n\t})(SpriteType || (SpriteType = {}));\r\n\texports.SpriteType = SpriteType;\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4635e8e695a123a96461","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311',\r\n    wallheight: Math.floor(width / 1.8) * 0.8\r\n}\r\n\r\nlet assetloader = new AssetLoader()\r\n\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { \r\n        document.getElementById('loading-container').style.display = 'none'; \r\n        let canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let map = new Map(150, 0.3, assetloader, gamesettins)\r\n        let controls = new Controls()\r\n        let player = new Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new Angle(0), assetloader)\r\n        let scene = new Scene(ctx, gamesettins, assetloader)\r\n\r\n        canvas.width = gamesettins.width\r\n        canvas.height = gamesettins.height\r\n        canvas.style.width = `${gamesettins.width}px`\r\n        canvas.style.height = `${gamesettins.height}px`\r\n        controls.bindevents(document, canvas)\r\n        player.initonmap(map)\r\n\r\n\r\n        let lastrender: number = Date.now()\r\n        function render() {\r\n            let now = Date.now()\r\n            let delta = now - lastrender\r\n            lastrender = now\r\n            player.getcontrols(controls, map, delta)\r\n            scene.renderframe(delta, map, player, gamesettins.fov)\r\n            requestAnimationFrame(render)\r\n            fps.innerText = (Math.floor(1000 / delta)).toString()\r\n        }\r\n        render() \r\n    }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n        \r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n\r\n        this.zspritessrcs = [\r\n            './assets/sprites/zombie1.png',\r\n            './assets/sprites/zombie2.png',\r\n            './assets/sprites/zombie3.png',\r\n            './assets/sprites/zombie4.png'\r\n        ]\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        this.zsprites = new Array<HTMLImageElement>()\r\n        this.walls = new Array<HTMLImageElement>()\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private zspritessrcs: Array<string>\r\n    public zsprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    public soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private toload() {\r\n        return this.walls.length +\r\n            this.sprites.length +\r\n            this.zsprites.length +\r\n            this.skyline.length\r\n    }\r\n\r\n    private loadimages(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLImageElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Image())\r\n            arrobj[i].onload = () => {\r\n                onprogress(++this.loaded / this.toload())\r\n                if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    private loadaudio(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLAudioElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Audio())\r\n            arrobj[i].oncanplaythrough = () => {\r\n                //onprogress(++this.loaded / this.toload())\r\n                //if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        this.loadimages(this.wallssrcs, this.walls, onprogress, callback)\r\n        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback)\r\n        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback)\r\n        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback)\r\n        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0 } from './mathconst';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\nimport { ISprite } from \"./sprites/isprite\";\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n    }\r\n\r\n    private renderbackground(player: Player, fov: number) {\r\n        let image = this.assets.skyline[0]\r\n        let PI4 = 4 * Math.PI\r\n        let sleft = ((PI2_0 - (player.facing.angle + fov / 2)) / PI4) * image.width\r\n        sleft = Math.abs(sleft)\r\n        sleft = Math.floor(sleft)\r\n        let swidth = Math.floor((image.width * fov) / PI4)\r\n        let height = Math.floor(this.settings.height * 0.5)\r\n        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.x - Math.floor(wall.x)\r\n        let mody = wall.y - Math.floor(wall.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        if (distance < 3) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n        } else if (distance < 8) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition)\r\n        } else {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition)\r\n        }\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 3\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    private filterobjectsinrange(player: Player, sprites: Array<ISprite>) {\r\n        let objectsinrange = new Array<ISprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<ISprite>, rayangle: number, left: number, nearestwalldistance: number) {\r\n        let objecttodraw = new Array<ISprite>()\r\n        for (let object of sprites) {\r\n            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x)\r\n\r\n            object.distance = DistanceCalc.distance(player, object)\r\n            if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n                if (object.distance < 0.20) object.distance = 0.20\r\n                \r\n                let anglediff = rayangle - sprite_player_angle\r\n                if(anglediff < -Math.PI) anglediff += PI2_0 \r\n                if(anglediff > Math.PI) anglediff -= PI2_0\r\n                              \r\n                let diff = anglediff / Math.atan2(object.anglewidth, object.distance)\r\n\r\n                if (Math.abs(diff) <= 1) {\r\n                    diff = Math.abs((diff - 1))\r\n                    if (object.left < 0) {\r\n                        object.left = left\r\n                        object.starttexture = diff\r\n                    }\r\n                    object.width += 5\r\n                    object.endtexture = diff\r\n                    objecttodraw.push(object)\r\n                }\r\n            }\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, fov: number) {\r\n        this.renderbackground(player, fov)\r\n\r\n        let objectsinrange = this.filterobjectsinrange(player, map.sprites)\r\n        let rays = player.getrays(this.settings.width, this.settings.fov)\r\n        let drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.distance(player, colision) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            if(r % 5 == 0) {\r\n                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance)\r\n            }\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.left >= 0) object.render(this.ctx)\r\n            object.left = -1\r\n            object.width = 0\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import {DistanceCalc} from './distancecalc';\r\nimport { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IPoint,\r\n        nextv: IPoint,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n        let distanceh = DistanceCalc.mdistance(origin, h)\r\n        let distancev = DistanceCalc.mdistance(origin, v)\r\n\r\n        if (distanceh < distancev) {\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h.x, h.y, type)]\r\n            } else {\r\n                return [new Colision(h.x, h.y, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh))\r\n            }\r\n        } else {\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v.x, v.y, type)]\r\n            } else {\r\n                return [new Colision(v.x, v.y, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev))\r\n            }\r\n        }\r\n    }\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IPoint {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IPoint {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static distance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n\r\n    public static mdistance(a:IPoint, b:IPoint) {\r\n        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","import {IPoint} from './ipoint';\r\nexport class Colision implements IPoint {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 17) this.shoot = true\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent, canvas: HTMLCanvasElement) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageY < canvas.height * 0.5) {\r\n            this.shoot = true\r\n        } else {\r\n            if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n            else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n            else this.rotateright = true\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLCanvasElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e, canvas) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { ISettings } from './isettings';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { SpritesFactory, SpriteType } from \"./sprites/spritesfactory\"\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<ISprite>\r\n\r\n    constructor(size: number, randparam: number, loader: AssetLoader, settings: ISettings) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n        this.randomize(randparam)\r\n\r\n        let spritesfactory = new SpritesFactory(loader, size, settings)\r\n\r\n        this.sprites = new Array<ISprite>()\r\n        for (let i = 0; i < size * 10; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Static))\r\n        }\r\n        for (let i = 0; i < size * 30; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Zombie))\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                }\r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Sprite implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.2\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/sprite.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Zombie implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.35\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.8)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/zombie.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player implements IPoint {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public facing: Angle,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number, fov: number) {\r\n        var step = fov / columns\r\n        var angle = this.facing.angle + fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, newposition: IPoint) {\r\n        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n            newposition.x = this.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n            newposition.y = this.y\r\n        }\r\n        this.x = newposition.x\r\n        this.y = newposition.y\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        this.correctposition(map, {\r\n            x: this.x - this.facing.cos * delta / 500,\r\n            y: this.y - this.facing.sin * delta / 500\r\n        })\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n            this.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        var audio = new Audio(this.loader.soundssrcs[index]);\r\n        audio.play();\r\n        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n        //     let time = new Date()\r\n        //     let now = time.getTime()\r\n        //     console.log(this.loader.sounds[index].duration)\r\n        //     if (this.audiochannels[a].finish < now) {\r\n        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n        //         this.audiochannels[a].audioel.play()\r\n        //         break\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISprite } from \"./isprite\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { Zombie } from \"./zombie\";\r\n\r\nexport { SpritesFactory, SpriteType }\r\n\r\nclass SpritesFactory {\r\n\r\n    public constructor(\r\n        private assetloader: AssetLoader,\r\n        private mapsize: number,\r\n        private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public createsprite(type: SpriteType) {\r\n        switch (type) {\r\n            case SpriteType.Static: return new Sprite(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.assetloader.sprites[Math.floor(Math.random() * this.assetloader.sprites.length)],\r\n                this.settings\r\n            )\r\n            case SpriteType.Zombie: return new Zombie(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.assetloader.zsprites[Math.floor(Math.random() * this.assetloader.zsprites.length)],\r\n                this.settings\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nenum SpriteType {\r\n    Static = 1,\r\n    Zombie\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/spritesfactory.ts"],"sourceRoot":""}