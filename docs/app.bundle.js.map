{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 88210dd78554a6031f2f","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/helpers/mathconst.ts","webpack:///./src/scripts/helpers/distancecalc.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/renders/backgroundrenderer.ts","webpack:///./src/scripts/helpers/quicksort.ts","webpack:///./src/scripts/renders/wallrenderer.ts","webpack:///./src/scripts/renders/floorrenderer.ts","webpack:///./src/scripts/renders/gunrenderer.ts","webpack:///./src/scripts/renders/bloodrenderer.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprites/spritesfactory.ts","webpack:///./src/scripts/sprites/sprite.ts","webpack:///./src/scripts/sprites/zombie.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","width","window","innerWidth","gamesettins","height","Math","floor","height2","fov","PI","drawingdistance","floorcolor1","floorcolor2","wallheight","assetloader","AssetLoader","loadall","prog","innerHTML","ceil","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","innerText","toString","style","display","canvas","hud","ctx","getContext","ctxhud","Map","Controls","Player","size","Angle","Scene","bindevents","initonmap","this","wallssrcs","spritessrcs","gunsrcs","bloodsrcs","zspritessrcs","skylinesrcs","soundssrcs","sprites","Array","zsprites","walls","skyline","gun","blood","sounds","prototype","toload","length","loadimages","arrsrc","arrobj","onprogress","callback","_this","i","push","Image","onload","src","loadaudio","Audio","oncanplaythrough","mathconst_1","distancecalc_1","ray_1","backgroundrenderer_1","quicksort_1","wallrenderer_1","floorrenderer_1","gunrenderer_1","bloodrenderer_1","settings","loader","skipobjectdetectionrays","backgroundrenderer","BackgroundRenderer","wallrenderer","WallRenderer","floorrenderer","FloorRenderer","gunrenderer","GunRenderer","bloodrenderer","BloodRenderer","drawhud","clearRect","getobjectsinrange","objectsinrange","DistanceCalc","mdistance","getobjectstodraw","rayangle","left","nearestwalldistance","objecttodraw","_i","sprites_1","object","sprite_player_angle","atan2","y","x","anglediff","PI2_0","distance","diff","anglewidth","abs","starttexture","endtexture","settarget","facing","angle","Sort","quickSort","a","b","rays","getrays","drawfloor","r","bottom","drawfloorray","walldistance","cos","colisions","Ray","cast","colisions_1","colision","type","_a","objectsinrange_1","ifshoot","fired","splash","targeted","move","PI0_5","PI1_0","PI1_5","PI4_0","sqrt","colision_1","origin","nexth","nextv","maxdistance","h","nearesty","v","nearestx","distanceh","distancev","getvalue","dy","Colision","concat","dx","nexty","ctg","nextx","tg","facingangle","image","sourceleft","sourcewidth","drawImage","fillStyle","fillRect","arr","right","compare","pivot","partitionIndex","partition","swap","j","temp","wall","modx","mody","textureposition","getwallimage","top","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","useback","newbottom","frame","framelength","state","lasttick","framemax","ratio","setframe","gunimage","getimage","shoot","tick","getTime","bloodimage","top_1","random","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageY","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","normalizeangle","sin","spritesfactory_1","randparam","Uint8Array","randomize","spritesfactory","SpritesFactory","createsprite","SpriteType","Static","Zombie","setvalue","value","pos","sprite_1","zombie_1","mapsize","Sprite","maxheight","onshoot","texright","swidth","max","dead","lastvectorchangetick","vectorchangelength","vector","getnewvector","setvector","mixer_1","guncooldown","mixer","Mixer","columns","step","time","playsound","movement","correctposition","newposition","moveforward","position","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","audio","play"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(22);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(14);\r\n\tvar angle_1 = __webpack_require__(15);\r\n\tvar map_1 = __webpack_require__(16);\r\n\tvar player_1 = __webpack_require__(20);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    height2: Math.floor(width / 1.8 / 2),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311',\r\n\t    wallheight: Math.floor(width / 1.8) * 0.8\r\n\t};\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () {\r\n\t    document.getElementById('loading-container').style.display = 'none';\r\n\t    var canvas = document.getElementById('gamecanvas');\r\n\t    var hud = document.getElementById('hudcanvas');\r\n\t    var ctx = canvas.getContext('2d');\r\n\t    var ctxhud = hud.getContext('2d');\r\n\t    var map = new map_1.Map(150, 0.3, assetloader, gamesettins);\r\n\t    var controls = new controls_1.Controls();\r\n\t    var player = new player_1.Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new angle_1.Angle(0), assetloader);\r\n\t    var scene = new scene_1.Scene(ctx, ctxhud, gamesettins, assetloader, player);\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    hud.width = gamesettins.width;\r\n\t    hud.height = gamesettins.height;\r\n\t    hud.style.width = gamesettins.width + \"px\";\r\n\t    hud.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, hud);\r\n\t    player.initonmap(map);\r\n\t    var lastrender = Date.now();\r\n\t    function render() {\r\n\t        var now = Date.now();\r\n\t        var delta = now - lastrender;\r\n\t        lastrender = now;\r\n\t        player.getcontrols(controls, map, delta);\r\n\t        scene.renderframe(delta, map, gamesettins.fov);\r\n\t        requestAnimationFrame(render);\r\n\t        fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    }\r\n\t    render();\r\n\t});\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.gunsrcs = [\r\n\t            './assets/sprites/gun/gun.png',\r\n\t            './assets/sprites/gun/shoot1.png',\r\n\t            './assets/sprites/gun/shoot2.png',\r\n\t            './assets/sprites/gun/shoot3.png',\r\n\t            './assets/sprites/gun/shoot4.png',\r\n\t            './assets/sprites/gun/reload1.png',\r\n\t            './assets/sprites/gun/reload2.png',\r\n\t            './assets/sprites/gun/reload3.png',\r\n\t            './assets/sprites/gun/reload4.png'\r\n\t        ];\r\n\t        this.bloodsrcs = [\r\n\t            './assets/sprites/blood/blood1.png',\r\n\t            './assets/sprites/blood/blood2.png',\r\n\t            './assets/sprites/blood/blood3.png'\r\n\t        ];\r\n\t        this.zspritessrcs = [\r\n\t            './assets/sprites/femalezombiewalk/Walk (1).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (2).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (3).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (4).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (5).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (6).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (7).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (8).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (9).png',\r\n\t            './assets/sprites/femalezombiewalk/Walk (10).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (1).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (2).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (3).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (4).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (5).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (6).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (7).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (8).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (9).png',\r\n\t            './assets/sprites/femalezombiedead/Dead (10).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (1).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (2).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (3).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (4).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (5).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (6).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (7).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (8).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (9).png',\r\n\t            './assets/sprites/malezombiewalk/Walk (10).png',\r\n\t            './assets/sprites/malezombiedead/Dead (1).png',\r\n\t            './assets/sprites/malezombiedead/Dead (2).png',\r\n\t            './assets/sprites/malezombiedead/Dead (3).png',\r\n\t            './assets/sprites/malezombiedead/Dead (4).png',\r\n\t            './assets/sprites/malezombiedead/Dead (5).png',\r\n\t            './assets/sprites/malezombiedead/Dead (6).png',\r\n\t            './assets/sprites/malezombiedead/Dead (7).png',\r\n\t            './assets/sprites/malezombiedead/Dead (8).png',\r\n\t            './assets/sprites/malezombiedead/Dead (9).png',\r\n\t            './assets/sprites/malezombiedead/Dead (10).png',\r\n\t        ];\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        this.zsprites = new Array();\r\n\t        this.walls = new Array();\r\n\t        this.skyline = new Array();\r\n\t        this.gun = new Array();\r\n\t        this.blood = new Array();\r\n\t        this.sounds = new Array();\r\n\t    }\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.zsprites.length +\r\n\t            this.skyline.length +\r\n\t            this.bloodsrcs.length +\r\n\t            this.gunsrcs.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadimages = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Image());\r\n\t            arrobj[i].onload = function () {\r\n\t                onprogress(++_this.loaded / _this.toload());\r\n\t                if (_this.loaded >= _this.toload())\r\n\t                    callback();\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadaudio = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Audio());\r\n\t            arrobj[i].oncanplaythrough = function () {\r\n\t                //onprogress(++this.loaded / this.toload())\r\n\t                //if (this.loaded >= this.toload()) callback()\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        this.loadimages(this.wallssrcs, this.walls, onprogress, callback);\r\n\t        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback);\r\n\t        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback);\r\n\t        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback);\r\n\t        this.loadimages(this.gunsrcs, this.gun, onprogress, callback);\r\n\t        this.loadimages(this.bloodsrcs, this.blood, onprogress, callback);\r\n\t        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback);\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar backgroundrenderer_1 = __webpack_require__(8);\r\n\tvar quicksort_1 = __webpack_require__(9);\r\n\tvar wallrenderer_1 = __webpack_require__(10);\r\n\tvar floorrenderer_1 = __webpack_require__(11);\r\n\tvar gunrenderer_1 = __webpack_require__(12);\r\n\tvar bloodrenderer_1 = __webpack_require__(13);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, ctxhud, settings, loader, player) {\r\n\t        this.ctx = ctx;\r\n\t        this.ctxhud = ctxhud;\r\n\t        this.settings = settings;\r\n\t        this.loader = loader;\r\n\t        this.player = player;\r\n\t        this.skipobjectdetectionrays = 5;\r\n\t        this.lastrender = Date.now();\r\n\t        this.backgroundrenderer = new backgroundrenderer_1.BackgroundRenderer(loader, settings);\r\n\t        this.wallrenderer = new wallrenderer_1.WallRenderer(loader, settings);\r\n\t        this.floorrenderer = new floorrenderer_1.FloorRenderer(loader, settings);\r\n\t        this.gunrenderer = new gunrenderer_1.GunRenderer(loader, settings);\r\n\t        this.bloodrenderer = new bloodrenderer_1.BloodRenderer(loader, settings);\r\n\t        this.player.gunrenderer = this.gunrenderer;\r\n\t    }\r\n\t    Scene.prototype.drawhud = function () {\r\n\t        this.ctxhud.clearRect(0, 0, this.settings.width, this.settings.height);\r\n\t        this.bloodrenderer.render(this.ctxhud);\r\n\t        this.gunrenderer.render(this.ctxhud);\r\n\t    };\r\n\t    Scene.prototype.getobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (distancecalc_1.DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, rayangle, left, nearestwalldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x);\r\n\t            var anglediff = rayangle - sprite_player_angle;\r\n\t            if (anglediff < -Math.PI)\r\n\t                anglediff += mathconst_1.PI2_0;\r\n\t            if (anglediff > Math.PI)\r\n\t                anglediff -= mathconst_1.PI2_0;\r\n\t            object.distance = distancecalc_1.DistanceCalc.distance(player, object);\r\n\t            if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n\t                if (object.distance < 0.20)\r\n\t                    object.distance = 0.20;\r\n\t                var diff = anglediff / Math.atan2(object.anglewidth, object.distance);\r\n\t                if (Math.abs(diff) <= 0.5) {\r\n\t                    diff = Math.abs((diff - 0.5));\r\n\t                    if (object.left < 0) {\r\n\t                        object.left = left;\r\n\t                        object.starttexture = diff;\r\n\t                    }\r\n\t                    object.width += this.skipobjectdetectionrays;\r\n\t                    object.endtexture = diff;\r\n\t                    objecttodraw.push(object);\r\n\t                    object.settarget(left, this.settings.width);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, fov) {\r\n\t        var _this = this;\r\n\t        this.backgroundrenderer.render(this.ctx, this.player.facing.angle, this.settings.fov);\r\n\t        var objectsinrange = this.getobjectsinrange(this.player, map.sprites);\r\n\t        quicksort_1.Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, function (a, b) { return a.distance > b.distance; });\r\n\t        var rays = this.player.getrays(this.settings.width, this.settings.fov);\r\n\t        var drawfloor = (Math.floor(this.player.x) + Math.floor(this.player.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(this.player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, this.player, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.distance(this.player, colision) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.wallrenderer.render(this.ctx, r, distance, colision);\r\n\t                }\r\n\t                bottom = this.floorrenderer.render(this.ctx, r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            if (r % this.skipobjectdetectionrays == 0) {\r\n\t                this.getobjectstodraw(this.player, objectsinrange, rays[r].angle, r, walldistance);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.left >= 0)\r\n\t                object.render(this.ctx);\r\n\t            object.ifshoot(this.player.fired, function () { return _this.bloodrenderer.splash(); });\r\n\t            object.targeted = false;\r\n\t            object.left = -1;\r\n\t            object.width = 0;\r\n\t            object.move(delta);\r\n\t        }\r\n\t        this.player.fired = false;\r\n\t        this.drawhud();\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\texports.PI4_0 = 4 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.distance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    DistanceCalc.mdistance = function (a, b) {\r\n\t        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        var distanceh = distancecalc_1.DistanceCalc.mdistance(origin, h);\r\n\t        var distancev = distancecalc_1.DistanceCalc.mdistance(origin, v);\r\n\t        if (distanceh < distancev) {\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y\r\n\t        };\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(x, y, type) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar BackgroundRenderer = (function () {\r\n\t    function BackgroundRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    BackgroundRenderer.prototype.render = function (ctx, facingangle, fov) {\r\n\t        var image = this.loader.skyline[0];\r\n\t        var sourceleft = Math.floor((image.width * (mathconst_1.PI2_0 - facingangle)) / mathconst_1.PI4_0);\r\n\t        var sourcewidth = Math.floor(image.width * 0.5 * (fov / mathconst_1.PI2_0));\r\n\t        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2);\r\n\t        ctx.fillStyle = this.settings.floorcolor1;\r\n\t        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    return BackgroundRenderer;\r\n\t}());\r\n\texports.BackgroundRenderer = BackgroundRenderer;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sort = (function () {\r\n\t    function Sort() {\r\n\t    }\r\n\t    Sort.quickSort = function (arr, left, right, compare) {\r\n\t        var pivot;\r\n\t        var partitionIndex;\r\n\t        if (left < right) {\r\n\t            pivot = right;\r\n\t            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\t            //sort left and right\r\n\t            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n\t            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n\t        }\r\n\t        return arr;\r\n\t    };\r\n\t    Sort.partition = function (arr, pivot, left, right, compare) {\r\n\t        var partitionIndex = left;\r\n\t        for (var i = left; i < right; i++) {\r\n\t            if (compare(arr[i], arr[pivot])) {\r\n\t                this.swap(arr, i, partitionIndex);\r\n\t                partitionIndex++;\r\n\t            }\r\n\t        }\r\n\t        this.swap(arr, right, partitionIndex);\r\n\t        return partitionIndex;\r\n\t    };\r\n\t    Sort.swap = function (arr, i, j) {\r\n\t        var temp = arr[i];\r\n\t        arr[i] = arr[j];\r\n\t        arr[j] = temp;\r\n\t    };\r\n\t    return Sort;\r\n\t}());\r\n\texports.Sort = Sort;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar WallRenderer = (function () {\r\n\t    function WallRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    WallRenderer.prototype.render = function (ctx, left, distance, wall) {\r\n\t        var modx = wall.x - Math.floor(wall.x);\r\n\t        var mody = wall.y - Math.floor(wall.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        var image = this.getwallimage(wall.type, distance);\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var top = Math.floor(this.settings.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        ctx.drawImage(image, texleft, 0, 1, image.height, left, top, 1, height);\r\n\t        if (left % 3 == 0) {\r\n\t            ctx.beginPath();\r\n\t            ctx.moveTo(left, top);\r\n\t            ctx.lineTo(left, this.settings.height - top);\r\n\t            ctx.lineWidth = 4;\r\n\t            ctx.strokeStyle = '#000000';\r\n\t            ctx.fillStyle = '#000000';\r\n\t            ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            ctx.stroke();\r\n\t            ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    WallRenderer.prototype.getwallimage = function (type, distance) {\r\n\t        if (distance < 3) {\r\n\t            return this.loader.walls[type - 1];\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            return this.loader.walls[type - 1 + 5];\r\n\t        }\r\n\t        return this.loader.walls[type - 1 + 10];\r\n\t    };\r\n\t    return WallRenderer;\r\n\t}());\r\n\texports.WallRenderer = WallRenderer;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar FloorRenderer = (function () {\r\n\t    function FloorRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    FloorRenderer.prototype.render = function (ctx, left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.settings.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            ctx.beginPath();\r\n\t            ctx.moveTo(left, bottom);\r\n\t            ctx.lineTo(left, newbottom);\r\n\t            ctx.lineWidth = 3;\r\n\t            ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    return FloorRenderer;\r\n\t}());\r\n\texports.FloorRenderer = FloorRenderer;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar GunRenderer = (function () {\r\n\t    function GunRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t        this.frame = 0;\r\n\t        this.framelength = 100;\r\n\t        this.state = 0;\r\n\t        this.lasttick = 0;\r\n\t        this.framemax = loader.gun.length - 1;\r\n\t        this.left = Math.floor(this.settings.width * 0.50);\r\n\t        this.top = Math.floor(this.settings.height * 0.55);\r\n\t        this.ratio = loader.gun[0].width / loader.gun[0].height;\r\n\t        this.height = Math.floor(this.settings.height - this.top);\r\n\t        this.width = Math.floor(this.height * this.ratio);\r\n\t    }\r\n\t    GunRenderer.prototype.render = function (ctx) {\r\n\t        this.setframe();\r\n\t        var gunimage = this.getimage();\r\n\t        ctx.drawImage(gunimage, 0, 0, gunimage.width, gunimage.height, this.left, this.top, this.width, this.height);\r\n\t    };\r\n\t    GunRenderer.prototype.getimage = function () {\r\n\t        return this.loader.gun[this.frame];\r\n\t    };\r\n\t    GunRenderer.prototype.shoot = function () {\r\n\t        this.state = 1;\r\n\t    };\r\n\t    GunRenderer.prototype.setframe = function () {\r\n\t        if (this.state == 1) {\r\n\t            var tick = (new Date()).getTime();\r\n\t            if (tick > this.lasttick) {\r\n\t                if (this.frame < this.framemax - 1)\r\n\t                    this.frame++;\r\n\t                else {\r\n\t                    this.frame = 0;\r\n\t                    this.state = 0;\r\n\t                }\r\n\t                this.lasttick = tick + this.framelength;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return GunRenderer;\r\n\t}());\r\n\texports.GunRenderer = GunRenderer;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar BloodRenderer = (function () {\r\n\t    function BloodRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t        this.frame = 0;\r\n\t        this.framelength = 500;\r\n\t        this.framemax = 3;\r\n\t        this.state = 0;\r\n\t        this.lasttick = 0;\r\n\t        this.image = 0;\r\n\t    }\r\n\t    BloodRenderer.prototype.render = function (ctx) {\r\n\t        if (this.state == 1) {\r\n\t            this.setframe();\r\n\t            var bloodimage = this.loader.blood[this.image];\r\n\t            var top_1 = Math.floor(this.settings.height * 0.1);\r\n\t            var ratio = bloodimage.width / bloodimage.height;\r\n\t            var height = Math.floor(this.settings.height - top_1);\r\n\t            var width = Math.floor(height * ratio);\r\n\t            ctx.drawImage(bloodimage, 0, 0, bloodimage.width, bloodimage.height, this.left, top_1, width, height);\r\n\t        }\r\n\t    };\r\n\t    BloodRenderer.prototype.splash = function () {\r\n\t        this.left = Math.floor(this.settings.width * (Math.random() * 0.5));\r\n\t        this.state = 1;\r\n\t        this.image = Math.floor(Math.random() * 3);\r\n\t        this.frame = 0;\r\n\t    };\r\n\t    BloodRenderer.prototype.setframe = function () {\r\n\t        if (this.state == 1) {\r\n\t            var tick = (new Date()).getTime();\r\n\t            if (tick > this.lasttick) {\r\n\t                if (this.frame < this.framemax)\r\n\t                    this.frame++;\r\n\t                else {\r\n\t                    this.frame = 0;\r\n\t                    this.state = 0;\r\n\t                }\r\n\t                this.lasttick = tick + this.framelength;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return BloodRenderer;\r\n\t}());\r\n\texports.BloodRenderer = BloodRenderer;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 17)\r\n\t            this.shoot = true;\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e, canvas) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageY < canvas.height * 0.5) {\r\n\t            this.shoot = true;\r\n\t        }\r\n\t        else {\r\n\t            if (t.pageX < window.innerWidth * 0.333)\r\n\t                this.rotateleft = true;\r\n\t            else if (t.pageX < window.innerWidth * 0.666)\r\n\t                this.forward = true;\r\n\t            else\r\n\t                this.rotateright = true;\r\n\t        }\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e, canvas); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('hudcanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar spritesfactory_1 = __webpack_require__(17);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam, loader, settings) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        var spritesfactory = new spritesfactory_1.SpritesFactory(loader, size, settings);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 10; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Static));\r\n\t        }\r\n\t        for (var i = 0; i < size * 30; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Zombie));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(18);\r\n\tvar zombie_1 = __webpack_require__(19);\r\n\tvar SpritesFactory = (function () {\r\n\t    function SpritesFactory(loader, mapsize, settings) {\r\n\t        this.loader = loader;\r\n\t        this.mapsize = mapsize;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    SpritesFactory.prototype.createsprite = function (type) {\r\n\t        switch (type) {\r\n\t            case SpriteType.Static: return new sprite_1.Sprite(Math.random() * this.mapsize, Math.random() * this.mapsize, this.loader.sprites[Math.floor(Math.random() * this.loader.sprites.length)], this.settings);\r\n\t            case SpriteType.Zombie: return new zombie_1.Zombie(Math.random() * this.mapsize, Math.random() * this.mapsize, Math.floor(Math.random() * 2), this.loader, this.settings);\r\n\t        }\r\n\t    };\r\n\t    return SpritesFactory;\r\n\t}());\r\n\texports.SpritesFactory = SpritesFactory;\r\n\tvar SpriteType;\r\n\t(function (SpriteType) {\r\n\t    SpriteType[SpriteType[\"Static\"] = 1] = \"Static\";\r\n\t    SpriteType[SpriteType[\"Zombie\"] = 2] = \"Zombie\";\r\n\t})(SpriteType || (SpriteType = {}));\r\n\texports.SpriteType = SpriteType;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.2;\r\n\t        this.targeted = false;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.move = function (delta) {\r\n\t    };\r\n\t    Sprite.prototype.settarget = function (left, width) {\r\n\t    };\r\n\t    Sprite.prototype.ifshoot = function (fired, onshoot) {\r\n\t    };\r\n\t    Sprite.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Zombie = (function () {\r\n\t    function Zombie(x, y, type, loader, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t        this.loader = loader;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.35;\r\n\t        this.frame = 0;\r\n\t        this.framemax = 9;\r\n\t        this.framelength = 100;\r\n\t        this.dead = false;\r\n\t        this.lasttick = 0;\r\n\t        this.lastvectorchangetick = 0;\r\n\t        this.vectorchangelength = 3000;\r\n\t        this.targeted = false;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t        this.vector = this.getnewvector();\r\n\t    }\r\n\t    Zombie.prototype.getnewvector = function () {\r\n\t        return {\r\n\t            x: Math.sin((Math.random() * 2) - 1),\r\n\t            y: Math.sin((Math.random() * 2) - 1)\r\n\t        };\r\n\t    };\r\n\t    Zombie.prototype.getimage = function () {\r\n\t        if (this.type == 0) {\r\n\t            return this.loader.zsprites[0 + this.frame + (this.dead ? 10 : 0)];\r\n\t        }\r\n\t        else {\r\n\t            return this.loader.zsprites[20 + this.frame + (this.dead ? 10 : 0)];\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.setvector = function () {\r\n\t        var tick = (new Date()).getTime();\r\n\t        if (tick > this.lastvectorchangetick) {\r\n\t            this.vector = this.getnewvector();\r\n\t            this.lastvectorchangetick = tick + this.vectorchangelength;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.setframe = function () {\r\n\t        var tick = (new Date()).getTime();\r\n\t        if (tick > this.lasttick) {\r\n\t            if (this.frame < this.framemax)\r\n\t                this.frame++;\r\n\t            else if (!this.dead)\r\n\t                this.frame = 0;\r\n\t            this.lasttick = tick + this.framelength;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.move = function (delta) {\r\n\t        if (!this.dead) {\r\n\t            this.x += this.vector.x * (delta / 5000);\r\n\t            this.y += this.vector.y * (delta / 5000);\r\n\t            this.setvector();\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.settarget = function (left, width) {\r\n\t        if (width * 0.45 < left &&\r\n\t            width * 0.55 > left &&\r\n\t            this.distance < 5) {\r\n\t            this.targeted = true;\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.ifshoot = function (fired, onshoot) {\r\n\t        if (fired && this.targeted && !this.dead) {\r\n\t            this.dead = true;\r\n\t            this.frame = 0;\r\n\t            if (this.distance < 2) {\r\n\t                onshoot();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Zombie.prototype.render = function (ctx) {\r\n\t        this.setframe();\r\n\t        var image = this.getimage();\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * image.width);\r\n\t        var texright = Math.floor(this.endtexture * image.width);\r\n\t        var height = Math.floor(wallheight * 0.8);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(image, texleft, 0, swidth, image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Zombie;\r\n\t}());\r\n\texports.Zombie = Zombie;\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(21);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(15);\r\n\tvar Player = (function () {\r\n\t    function Player(x, y, facing, loader) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.facing = facing;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        this.fired = false;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns, fov) {\r\n\t        var step = fov / columns;\r\n\t        var angle = this.facing.angle + fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.fired = true;\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t            this.gunrenderer.shoot();\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, newposition) {\r\n\t        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n\t            newposition.x = this.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n\t            newposition.y = this.y;\r\n\t        }\r\n\t        this.x = newposition.x;\r\n\t        this.y = newposition.y;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        this.correctposition(map, {\r\n\t            x: this.x - this.facing.cos * delta / 500,\r\n\t            y: this.y - this.facing.sin * delta / 500\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n\t            this.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        var audio = new Audio(this.loader.soundssrcs[index]);\r\n\t        audio.play();\r\n\t        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n\t        //     let time = new Date()\r\n\t        //     let now = time.getTime()\r\n\t        //     console.log(this.loader.sounds[index].duration)\r\n\t        //     if (this.audiochannels[a].finish < now) {\r\n\t        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n\t        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n\t        //         this.audiochannels[a].audioel.play()\r\n\t        //         break\r\n\t        //     }\r\n\t        // }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 88210dd78554a6031f2f","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    height2: Math.floor(width / 1.8 / 2),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311',\r\n    wallheight: Math.floor(width / 1.8) * 0.8\r\n}\r\n\r\nlet assetloader = new AssetLoader()\r\n\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { \r\n        document.getElementById('loading-container').style.display = 'none'; \r\n        let canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        let hud = <HTMLCanvasElement>document.getElementById('hudcanvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let ctxhud = hud.getContext('2d')\r\n        let map = new Map(150, 0.3, assetloader, gamesettins)\r\n        let controls = new Controls()\r\n        let player = new Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new Angle(0), assetloader)\r\n        let scene = new Scene(ctx, ctxhud, gamesettins, assetloader, player)\r\n\r\n        canvas.width = gamesettins.width\r\n        canvas.height = gamesettins.height\r\n        canvas.style.width = `${gamesettins.width}px`\r\n        canvas.style.height = `${gamesettins.height}px`\r\n        hud.width = gamesettins.width\r\n        hud.height = gamesettins.height\r\n        hud.style.width = `${gamesettins.width}px`\r\n        hud.style.height = `${gamesettins.height}px`\r\n        controls.bindevents(document, hud)\r\n        player.initonmap(map)\r\n\r\n\r\n        let lastrender: number = Date.now()\r\n        function render() {\r\n            let now = Date.now()\r\n            let delta = now - lastrender\r\n            lastrender = now\r\n            player.getcontrols(controls, map, delta)\r\n            scene.renderframe(delta, map, gamesettins.fov)\r\n            requestAnimationFrame(render)\r\n            fps.innerText = (Math.floor(1000 / delta)).toString()\r\n        }\r\n        render() \r\n    }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n\r\n        this.gunsrcs = [\r\n            './assets/sprites/gun/gun.png',\r\n            './assets/sprites/gun/shoot1.png',\r\n            './assets/sprites/gun/shoot2.png',\r\n            './assets/sprites/gun/shoot3.png',\r\n            './assets/sprites/gun/shoot4.png',\r\n            './assets/sprites/gun/reload1.png',\r\n            './assets/sprites/gun/reload2.png',\r\n            './assets/sprites/gun/reload3.png',\r\n            './assets/sprites/gun/reload4.png'\r\n        ]\r\n\r\n        this.bloodsrcs = [\r\n            './assets/sprites/blood/blood1.png',\r\n            './assets/sprites/blood/blood2.png',\r\n            './assets/sprites/blood/blood3.png'\r\n        ]\r\n\r\n        this.zspritessrcs = [\r\n            './assets/sprites/femalezombiewalk/Walk (1).png',\r\n            './assets/sprites/femalezombiewalk/Walk (2).png',\r\n            './assets/sprites/femalezombiewalk/Walk (3).png',\r\n            './assets/sprites/femalezombiewalk/Walk (4).png',\r\n            './assets/sprites/femalezombiewalk/Walk (5).png',\r\n            './assets/sprites/femalezombiewalk/Walk (6).png',\r\n            './assets/sprites/femalezombiewalk/Walk (7).png',\r\n            './assets/sprites/femalezombiewalk/Walk (8).png',\r\n            './assets/sprites/femalezombiewalk/Walk (9).png',\r\n            './assets/sprites/femalezombiewalk/Walk (10).png',\r\n            './assets/sprites/femalezombiedead/Dead (1).png',\r\n            './assets/sprites/femalezombiedead/Dead (2).png',\r\n            './assets/sprites/femalezombiedead/Dead (3).png',\r\n            './assets/sprites/femalezombiedead/Dead (4).png',\r\n            './assets/sprites/femalezombiedead/Dead (5).png',\r\n            './assets/sprites/femalezombiedead/Dead (6).png',\r\n            './assets/sprites/femalezombiedead/Dead (7).png',\r\n            './assets/sprites/femalezombiedead/Dead (8).png',\r\n            './assets/sprites/femalezombiedead/Dead (9).png',\r\n            './assets/sprites/femalezombiedead/Dead (10).png',\r\n            './assets/sprites/malezombiewalk/Walk (1).png',\r\n            './assets/sprites/malezombiewalk/Walk (2).png',\r\n            './assets/sprites/malezombiewalk/Walk (3).png',\r\n            './assets/sprites/malezombiewalk/Walk (4).png',\r\n            './assets/sprites/malezombiewalk/Walk (5).png',\r\n            './assets/sprites/malezombiewalk/Walk (6).png',\r\n            './assets/sprites/malezombiewalk/Walk (7).png',\r\n            './assets/sprites/malezombiewalk/Walk (8).png',\r\n            './assets/sprites/malezombiewalk/Walk (9).png',\r\n            './assets/sprites/malezombiewalk/Walk (10).png',\r\n            './assets/sprites/malezombiedead/Dead (1).png',\r\n            './assets/sprites/malezombiedead/Dead (2).png',\r\n            './assets/sprites/malezombiedead/Dead (3).png',\r\n            './assets/sprites/malezombiedead/Dead (4).png',\r\n            './assets/sprites/malezombiedead/Dead (5).png',\r\n            './assets/sprites/malezombiedead/Dead (6).png',\r\n            './assets/sprites/malezombiedead/Dead (7).png',\r\n            './assets/sprites/malezombiedead/Dead (8).png',\r\n            './assets/sprites/malezombiedead/Dead (9).png',\r\n            './assets/sprites/malezombiedead/Dead (10).png',\r\n        ]\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        this.zsprites = new Array<HTMLImageElement>()\r\n        this.walls = new Array<HTMLImageElement>()\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        this.gun = new Array<HTMLImageElement>()\r\n        this.blood = new Array<HTMLImageElement>()\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private zspritessrcs: Array<string>\r\n    public zsprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    private gunsrcs: Array<string>\r\n    public gun: Array<HTMLImageElement>\r\n    private bloodsrcs: Array<string>\r\n    public blood: Array<HTMLImageElement>\r\n    public soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private toload() {\r\n        return this.walls.length +\r\n            this.sprites.length +\r\n            this.zsprites.length +\r\n            this.skyline.length +\r\n            this.bloodsrcs.length +\r\n            this.gunsrcs.length\r\n    }\r\n\r\n    private loadimages(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLImageElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Image())\r\n            arrobj[i].onload = () => {\r\n                onprogress(++this.loaded / this.toload())\r\n                if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    private loadaudio(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLAudioElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Audio())\r\n            arrobj[i].oncanplaythrough = () => {\r\n                //onprogress(++this.loaded / this.toload())\r\n                //if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        this.loadimages(this.wallssrcs, this.walls, onprogress, callback)\r\n        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback)\r\n        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback)\r\n        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback)\r\n        this.loadimages(this.gunsrcs, this.gun, onprogress, callback)\r\n        this.loadimages(this.bloodsrcs, this.blood, onprogress, callback)\r\n        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0, PI4_0 } from './helpers/mathconst';\r\nimport { DistanceCalc } from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { BackgroundRenderer } from \"./renders/backgroundrenderer\";\r\nimport { Sort } from \"./helpers/quicksort\";\r\nimport { WallRenderer } from \"./renders/wallrenderer\";\r\nimport { FloorRenderer } from \"./renders/floorrenderer\";\r\nimport { GunRenderer } from \"./renders/gunrenderer\";\r\nimport { BloodRenderer } from \"./renders/bloodrenderer\";\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private backgroundrenderer: BackgroundRenderer\r\n    private wallrenderer: WallRenderer\r\n    private floorrenderer: FloorRenderer\r\n    private gunrenderer: GunRenderer\r\n    private bloodrenderer: BloodRenderer\r\n    private skipobjectdetectionrays: number = 5\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private ctxhud: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private loader: AssetLoader,\r\n        private player: Player\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.backgroundrenderer = new BackgroundRenderer(loader, settings)\r\n        this.wallrenderer = new WallRenderer(loader, settings)\r\n        this.floorrenderer = new FloorRenderer(loader, settings)\r\n        this.gunrenderer = new GunRenderer(loader, settings)\r\n        this.bloodrenderer = new BloodRenderer(loader, settings)\r\n        this.player.gunrenderer = this.gunrenderer\r\n    }\r\n\r\n    private drawhud() {\r\n        this.ctxhud.clearRect(0,0, this.settings.width, this.settings.height)\r\n        this.bloodrenderer.render(this.ctxhud)\r\n        this.gunrenderer.render(this.ctxhud)\r\n    }\r\n\r\n    private getobjectsinrange(player: Player, sprites: Array<ISprite>) {\r\n        let objectsinrange = new Array<ISprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<ISprite>, rayangle: number, left: number, nearestwalldistance: number) {\r\n        let objecttodraw = new Array<ISprite>()\r\n        for (let object of sprites) {\r\n            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x)\r\n\r\n            let anglediff = rayangle - sprite_player_angle\r\n            if (anglediff < -Math.PI) anglediff += PI2_0\r\n            if (anglediff > Math.PI) anglediff -= PI2_0\r\n\r\n\r\n            object.distance = DistanceCalc.distance(player, object)\r\n            if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n                if (object.distance < 0.20) object.distance = 0.20\r\n                let diff = anglediff / Math.atan2(object.anglewidth, object.distance)\r\n                if (Math.abs(diff) <= 0.5) {\r\n                    diff = Math.abs((diff - 0.5))\r\n                    if (object.left < 0) {\r\n                        object.left = left\r\n                        object.starttexture = diff\r\n                    }\r\n                    object.width += this.skipobjectdetectionrays\r\n                    object.endtexture = diff\r\n                    objecttodraw.push(object)\r\n                    object.settarget(left, this.settings.width)\r\n                }\r\n            }\r\n\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, fov: number) {\r\n\r\n        this.backgroundrenderer.render(this.ctx, this.player.facing.angle, this.settings.fov)\r\n        let objectsinrange = this.getobjectsinrange(this.player, map.sprites)\r\n        Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, (a, b) => a.distance > b.distance)\r\n        let rays = this.player.getrays(this.settings.width, this.settings.fov)\r\n        let drawfloor = (Math.floor(this.player.x) + Math.floor(this.player.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(this.player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, this.player, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.distance(this.player, colision) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.wallrenderer.render(this.ctx, r, distance, colision)\r\n                }\r\n                bottom = this.floorrenderer.render(this.ctx, r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            if (r % this.skipobjectdetectionrays == 0) {\r\n                this.getobjectstodraw(this.player, objectsinrange, rays[r].angle, r, walldistance)\r\n            }\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.left >= 0) object.render(this.ctx)\r\n            object.ifshoot(this.player.fired, () => this.bloodrenderer.splash())\r\n            object.targeted = false\r\n            object.left = -1\r\n            object.width = 0            \r\n            object.move(delta)\r\n        }\r\n        this.player.fired = false\r\n\r\n        this.drawhud()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\r\nexport const PI4_0: number = 4 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/mathconst.ts","import { IPoint } from '../ipoint';\r\nexport class DistanceCalc {\r\n    public static distance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n\r\n    public static mdistance(a:IPoint, b:IPoint) {\r\n        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/distancecalc.ts","import {DistanceCalc} from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './helpers/mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IPoint,\r\n        nextv: IPoint,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n        let distanceh = DistanceCalc.mdistance(origin, h)\r\n        let distancev = DistanceCalc.mdistance(origin, v)\r\n\r\n        if (distanceh < distancev) {\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h.x, h.y, type)]\r\n            } else {\r\n                return [new Colision(h.x, h.y, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh))\r\n            }\r\n        } else {\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v.x, v.y, type)]\r\n            } else {\r\n                return [new Colision(v.x, v.y, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev))\r\n            }\r\n        }\r\n    }\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IPoint {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IPoint {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision implements IPoint {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class BackgroundRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, facingangle: number, fov: number) {\r\n        let image = this.loader.skyline[0]\r\n        let sourceleft = Math.floor((image.width * (PI2_0 - facingangle)) / PI4_0)\r\n        let sourcewidth = Math.floor(image.width * 0.5 * (fov / PI2_0))\r\n        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2)\r\n        ctx.fillStyle = this.settings.floorcolor1\r\n        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/backgroundrenderer.ts","import { IComparable } from \"./icomparable\";\r\n\r\nexport class Sort {\r\n\r\n    public static quickSort<T>(arr: Array<T>, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n        let pivot: number\r\n        let partitionIndex: number\r\n\r\n        if (left < right) {\r\n            pivot = right;\r\n            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\r\n            //sort left and right\r\n            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    private static partition<T>(arr: Array<T>, pivot: number, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n\r\n        let partitionIndex = left;\r\n        for (var i = left; i < right; i++) {\r\n            if (compare(arr[i], arr[pivot])) {\r\n                this.swap(arr, i, partitionIndex);\r\n                partitionIndex++;\r\n            }\r\n        }\r\n        this.swap(arr, right, partitionIndex);\r\n        return partitionIndex;\r\n    }\r\n\r\n    private static swap<T>(arr: Array<T>, i: number, j: number) {\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/quicksort.ts","import {Colision} from '../colision';\r\nimport { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class WallRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(\r\n        ctx: CanvasRenderingContext2D,\r\n        left: number,\r\n        distance: number,\r\n        wall: Colision\r\n    ) {\r\n        let modx = wall.x - Math.floor(wall.x)\r\n        let mody = wall.y - Math.floor(wall.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        let image = this.getwallimage(wall.type, distance)\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let top = Math.floor(this.settings.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        ctx.drawImage(image, texleft, 0, 1, image.height, left, top, 1, height)\r\n        if (left % 3 == 0) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(left, top)\r\n            ctx.lineTo(left, this.settings.height - top)\r\n            ctx.lineWidth = 4\r\n            ctx.strokeStyle = '#000000'\r\n            ctx.fillStyle = '#000000'\r\n            ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            ctx.stroke()\r\n            ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private getwallimage(type: number, distance: number) {\r\n        if (distance < 3) {\r\n            return this.loader.walls[type - 1]\r\n        } else if (distance < 8) {\r\n            return this.loader.walls[type - 1 + 5]\r\n        }\r\n        return this.loader.walls[type - 1 + 10]\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/wallrenderer.ts","import {Colision} from '../colision';\r\nimport { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class FloorRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.settings.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(left, bottom)\r\n            ctx.lineTo(left, newbottom)\r\n            ctx.lineWidth = 3\r\n            ctx.strokeStyle = this.settings.floorcolor2\r\n            ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/floorrenderer.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nexport class GunRenderer {\r\n\r\n    private frame: number = 0\r\n    private framelength: number = 100\r\n    private framemax: number\r\n    private state: number = 0\r\n    private lasttick: number = 0\r\n\r\n    private left: number\r\n    private top: number\r\n    private height: number\r\n    private width: number\r\n    private ratio: number\r\n\r\n    public constructor(private loader: AssetLoader, private settings: ISettings) {\r\n        this.framemax = loader.gun.length - 1\r\n        this.left = Math.floor(this.settings.width * 0.50)\r\n        this.top = Math.floor(this.settings.height * 0.55)\r\n        this.ratio = loader.gun[0].width / loader.gun[0].height\r\n        this.height = Math.floor(this.settings.height - this.top)\r\n        this.width = Math.floor(this.height * this.ratio)\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        this.setframe()\r\n        let gunimage = this.getimage()\r\n\r\n        ctx.drawImage(gunimage, 0, 0, gunimage.width, gunimage.height, this.left, this.top, this.width, this.height)\r\n    }\r\n\r\n    private getimage() {\r\n        return this.loader.gun[this.frame]\r\n    }\r\n\r\n    public shoot() {\r\n        this.state = 1\r\n    }\r\n\r\n    private setframe() {\r\n        if (this.state == 1) {\r\n            let tick = (new Date()).getTime()\r\n            if (tick > this.lasttick) {\r\n                if (this.frame < this.framemax - 1) this.frame++\r\n                else {\r\n                    this.frame = 0\r\n                    this.state = 0\r\n                }\r\n                this.lasttick = tick + this.framelength\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/gunrenderer.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nexport class BloodRenderer {\r\n\r\n    private frame: number = 0\r\n    private framelength: number = 500\r\n    private framemax: number = 3\r\n    private state: number = 0\r\n    private lasttick: number = 0\r\n    private image: number = 0\r\n\r\n    private left: number\r\n\r\n    public constructor(private loader: AssetLoader, private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        if (this.state == 1) {\r\n            this.setframe()\r\n            let bloodimage = this.loader.blood[this.image]\r\n            let top = Math.floor(this.settings.height * 0.1)\r\n            let ratio = bloodimage.width / bloodimage.height\r\n            let height = Math.floor(this.settings.height - top)\r\n            let width = Math.floor(height * ratio)\r\n            ctx.drawImage(bloodimage, 0, 0, bloodimage.width, bloodimage.height, this.left, top, width, height)\r\n        }\r\n    }\r\n\r\n    public splash() {\r\n        this.left = Math.floor(this.settings.width * (Math.random() * 0.5))\r\n        this.state = 1\r\n        this.image = Math.floor(Math.random() * 3)\r\n        this.frame = 0\r\n    }\r\n\r\n    private setframe() {\r\n        if (this.state == 1) {\r\n            let tick = (new Date()).getTime()\r\n            if (tick > this.lasttick) {\r\n                if (this.frame < this.framemax) this.frame++\r\n                else {\r\n                    this.frame = 0\r\n                    this.state = 0\r\n                }\r\n                this.lasttick = tick + this.framelength\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/bloodrenderer.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 17) this.shoot = true\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent, canvas: HTMLCanvasElement) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageY < canvas.height * 0.5) {\r\n            this.shoot = true\r\n        } else {\r\n            if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n            else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n            else this.rotateright = true\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLCanvasElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e, canvas) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('hudcanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './helpers/mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import { ISettings } from './isettings';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { SpritesFactory, SpriteType } from \"./sprites/spritesfactory\"\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<ISprite>\r\n\r\n    constructor(size: number, randparam: number, loader: AssetLoader, settings: ISettings) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n        this.randomize(randparam)\r\n\r\n        let spritesfactory = new SpritesFactory(loader, size, settings)\r\n\r\n        this.sprites = new Array<ISprite>()\r\n        for (let i = 0; i < size * 10; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Static))\r\n        }\r\n        for (let i = 0; i < size * 30; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Zombie))\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                }\r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISprite } from \"./isprite\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { Zombie } from \"./zombie\";\r\n\r\nexport { SpritesFactory, SpriteType }\r\n\r\nclass SpritesFactory {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private mapsize: number,\r\n        private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public createsprite(type: SpriteType): ISprite {\r\n        switch (type) {\r\n            case SpriteType.Static: return new Sprite(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.loader.sprites[Math.floor(Math.random() * this.loader.sprites.length)],\r\n                this.settings\r\n            )\r\n            case SpriteType.Zombie: return new Zombie(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                Math.floor(Math.random() * 2),\r\n                this.loader,\r\n                this.settings\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nenum SpriteType {\r\n    Static = 1,\r\n    Zombie\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/spritesfactory.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Sprite implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.2\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    public targeted: boolean = false\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public move(delta:number) {\r\n\r\n    }\r\n\r\n    public settarget(left: number, width: number) {\r\n        \r\n    }\r\n\r\n    public ifshoot(fired: boolean, onshoot: () => void) {\r\n        \r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/sprite.ts","import { IPoint } from '../ipoint';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Zombie implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.35\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n    private frame: number = 0\r\n    private framemax: number = 9\r\n    private framelength: number = 100\r\n    private dead: boolean = false\r\n    private lasttick: number = 0\r\n    private lastvectorchangetick: number = 0\r\n    private vectorchangelength: number = 3000\r\n    private vector: IPoint\r\n    public targeted: boolean = false\r\n\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        private type: number,\r\n        private loader: AssetLoader,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n        this.vector = this.getnewvector()\r\n    }\r\n\r\n    private getnewvector() {\r\n        return {\r\n            x: Math.sin((Math.random() * 2) - 1),\r\n            y: Math.sin((Math.random() * 2) - 1)\r\n        }\r\n    }\r\n\r\n    private getimage() {\r\n        if (this.type == 0) {\r\n            return this.loader.zsprites[0 + this.frame + (this.dead ? 10 : 0)]\r\n        } else {\r\n            return this.loader.zsprites[20 + this.frame + (this.dead ? 10 : 0)]\r\n        }\r\n    }\r\n\r\n    private setvector() {\r\n        let tick = (new Date()).getTime()\r\n        if (tick > this.lastvectorchangetick) {\r\n            this.vector = this.getnewvector()\r\n            this.lastvectorchangetick = tick + this.vectorchangelength\r\n        }\r\n    }\r\n\r\n    private setframe() {\r\n        let tick = (new Date()).getTime()\r\n        if (tick > this.lasttick) {\r\n            if (this.frame < this.framemax) this.frame++\r\n            else if (!this.dead) this.frame = 0\r\n            this.lasttick = tick + this.framelength\r\n        }\r\n    }\r\n\r\n    public move(delta: number) {\r\n        if (!this.dead) {\r\n            this.x += this.vector.x * (delta / 5000)\r\n            this.y += this.vector.y * (delta / 5000)\r\n            this.setvector()\r\n        }\r\n    }\r\n\r\n    public settarget(left: number, width: number) {\r\n        if (width * 0.45 < left &&\r\n            width * 0.55 > left &&\r\n            this.distance < 5) {\r\n            this.targeted = true\r\n        }\r\n    }\r\n\r\n    public ifshoot(fired: boolean, onshoot: () => void) {\r\n        if (fired && this.targeted && !this.dead) {\r\n            this.dead = true\r\n            this.frame = 0\r\n            if(this.distance < 2) {\r\n                onshoot()\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        this.setframe()\r\n        let image = this.getimage()\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * image.width)\r\n        let texright = Math.floor(this.endtexture * image.width)\r\n        let height = Math.floor(wallheight * 0.8)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(image, texleft, 0, swidth, image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/zombie.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './helpers/mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { GunRenderer } from \"./renders/gunrenderer\";\r\n\r\nexport class Player implements IPoint {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n    public fired: boolean = false\r\n    public gunrenderer: GunRenderer\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public facing: Angle,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number, fov: number) {\r\n        var step = fov / columns\r\n        var angle = this.facing.angle + fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.fired = true\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n            this.gunrenderer.shoot()\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, newposition: IPoint) {\r\n        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n            newposition.x = this.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n            newposition.y = this.y\r\n        }\r\n        this.x = newposition.x\r\n        this.y = newposition.y\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        this.correctposition(map, {\r\n            x: this.x - this.facing.cos * delta / 500,\r\n            y: this.y - this.facing.sin * delta / 500\r\n        })\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n            this.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        var audio = new Audio(this.loader.soundssrcs[index]);\r\n        audio.play();\r\n        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n        //     let time = new Date()\r\n        //     let now = time.getTime()\r\n        //     console.log(this.loader.sounds[index].duration)\r\n        //     if (this.audiochannels[a].finish < now) {\r\n        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n        //         this.audiochannels[a].audioel.play()\r\n        //         break\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts"],"sourceRoot":""}