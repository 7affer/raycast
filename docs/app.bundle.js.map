{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap b6bcb34fe41159641246","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/helpers/mathconst.ts","webpack:///./src/scripts/helpers/distancecalc.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprites/spritesfactory.ts","webpack:///./src/scripts/sprites/sprite.ts","webpack:///./src/scripts/sprites/zombie.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts","webpack:///./src/scripts/renders/backgroundrenderer.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","width","window","innerWidth","gamesettins","height","Math","floor","height2","fov","PI","drawingdistance","floorcolor1","floorcolor2","wallheight","assetloader","AssetLoader","loadall","prog","innerHTML","ceil","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","innerText","toString","style","display","canvas","ctx","getContext","Map","Controls","Player","size","Angle","Scene","bindevents","initonmap","this","wallssrcs","spritessrcs","zspritessrcs","skylinesrcs","soundssrcs","sprites","Array","zsprites","walls","skyline","sounds","prototype","toload","length","loadimages","arrsrc","arrobj","onprogress","callback","_this","i","push","Image","onload","src","loadaudio","Audio","oncanplaythrough","mathconst_1","distancecalc_1","ray_1","backgroundrenderer_1","settings","assets","backgroundrenderer","BackgroundRenderer","renderwall","row","distance","image","textureposition","top","texleft","shadowdistance","drawImage","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","globalAlpha","min","stroke","drawwall","left","wall","modx","x","mody","y","abs","type","drawfloor","bottom","useback","newbottom","filterobjectsinrange","objectsinrange","DistanceCalc","mdistance","getobjectstodraw","rayangle","nearestwalldistance","objecttodraw","_i","sprites_1","object","sprite_player_angle","atan2","anglediff","PI2_0","diff","anglewidth","starttexture","endtexture","facing","angle","rays","getrays","r","drawfloorray","walldistance","cos","colisions","Ray","cast","colisions_1","colision","_a","objectsinrange_1","PI0_5","PI1_0","PI1_5","PI4_0","a","b","sqrt","colision_1","origin","nexth","nextv","maxdistance","h","nearesty","v","nearestx","distanceh","distancev","getvalue","dy","Colision","concat","dx","nexty","ctg","nextx","tg","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageY","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","normalizeangle","sin","spritesfactory_1","randparam","loader","Uint8Array","randomize","spritesfactory","SpritesFactory","createsprite","SpriteType","Static","Zombie","setvalue","value","pos","random","sprite_1","zombie_1","mapsize","Sprite","maxheight","texright","swidth","max","mixer_1","guncooldown","mixer","Mixer","columns","step","time","getTime","playsound","movement","correctposition","newposition","moveforward","position","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","audio","play","facingangle","sourceleft","sourcewidth","fillRect","console","log"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(16);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(8);\r\n\tvar angle_1 = __webpack_require__(9);\r\n\tvar map_1 = __webpack_require__(10);\r\n\tvar player_1 = __webpack_require__(14);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    height2: Math.floor(width / 1.8 / 2),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311',\r\n\t    wallheight: Math.floor(width / 1.8) * 0.8\r\n\t};\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () {\r\n\t    document.getElementById('loading-container').style.display = 'none';\r\n\t    var canvas = document.getElementById('gamecanvas');\r\n\t    var ctx = canvas.getContext('2d');\r\n\t    var map = new map_1.Map(150, 0.3, assetloader, gamesettins);\r\n\t    var controls = new controls_1.Controls();\r\n\t    var player = new player_1.Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new angle_1.Angle(0), assetloader);\r\n\t    var scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, canvas);\r\n\t    player.initonmap(map);\r\n\t    var lastrender = Date.now();\r\n\t    function render() {\r\n\t        var now = Date.now();\r\n\t        var delta = now - lastrender;\r\n\t        lastrender = now;\r\n\t        player.getcontrols(controls, map, delta);\r\n\t        scene.renderframe(delta, map, player, gamesettins.fov);\r\n\t        requestAnimationFrame(render);\r\n\t        fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    }\r\n\t    render();\r\n\t});\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.zspritessrcs = [\r\n\t            './assets/sprites/zombie1.png',\r\n\t            './assets/sprites/zombie2.png',\r\n\t            './assets/sprites/zombie3.png',\r\n\t            './assets/sprites/zombie4.png'\r\n\t        ];\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        this.zsprites = new Array();\r\n\t        this.walls = new Array();\r\n\t        this.skyline = new Array();\r\n\t        this.sounds = new Array();\r\n\t    }\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.zsprites.length +\r\n\t            this.skyline.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadimages = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Image());\r\n\t            arrobj[i].onload = function () {\r\n\t                onprogress(++_this.loaded / _this.toload());\r\n\t                if (_this.loaded >= _this.toload())\r\n\t                    callback();\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadaudio = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Audio());\r\n\t            arrobj[i].oncanplaythrough = function () {\r\n\t                //onprogress(++this.loaded / this.toload())\r\n\t                //if (this.loaded >= this.toload()) callback()\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        this.loadimages(this.wallssrcs, this.walls, onprogress, callback);\r\n\t        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback);\r\n\t        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback);\r\n\t        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback);\r\n\t        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback);\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar backgroundrenderer_1 = __webpack_require__(19);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.backgroundrenderer = new backgroundrenderer_1.BackgroundRenderer(assets, settings);\r\n\t    }\r\n\t    // private renderbackground(player: Player, fov: number) {\r\n\t    //     let image = this.assets.skyline[0]\r\n\t    //     let sleft = ((PI2_0 - (player.facing.angle + fov / 2)) / PI4_0) * image.width\r\n\t    //     sleft = Math.abs(sleft)\r\n\t    //     sleft = Math.floor(sleft)\r\n\t    //     let swidth = Math.floor((image.width * fov) / PI4_0)\r\n\t    //     let height = Math.floor(this.settings.height * 0.5)\r\n\t    //     this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height)\r\n\t    //     this.ctx.fillStyle = this.settings.floorcolor1\r\n\t    //     this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n\t    // }\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.x - Math.floor(wall.x);\r\n\t        var mody = wall.y - Math.floor(wall.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        if (distance < 3) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition);\r\n\t        }\r\n\t        else {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 3;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.filterobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (distancecalc_1.DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, rayangle, left, nearestwalldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x);\r\n\t            object.distance = distancecalc_1.DistanceCalc.distance(player, object);\r\n\t            if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n\t                if (object.distance < 0.20)\r\n\t                    object.distance = 0.20;\r\n\t                var anglediff = rayangle - sprite_player_angle;\r\n\t                if (anglediff < -Math.PI)\r\n\t                    anglediff += mathconst_1.PI2_0;\r\n\t                if (anglediff > Math.PI)\r\n\t                    anglediff -= mathconst_1.PI2_0;\r\n\t                var diff = anglediff / Math.atan2(object.anglewidth, object.distance);\r\n\t                if (Math.abs(diff) <= 1) {\r\n\t                    diff = Math.abs((diff - 1));\r\n\t                    if (object.left < 0) {\r\n\t                        object.left = left;\r\n\t                        object.starttexture = diff;\r\n\t                    }\r\n\t                    object.width += 5;\r\n\t                    object.endtexture = diff;\r\n\t                    objecttodraw.push(object);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, fov) {\r\n\t        this.backgroundrenderer.render(this.ctx, player.facing.angle);\r\n\t        var objectsinrange = this.filterobjectsinrange(player, map.sprites);\r\n\t        var rays = player.getrays(this.settings.width, this.settings.fov);\r\n\t        var drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.distance(player, colision) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            if (r % 5 == 0) {\r\n\t                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.left >= 0)\r\n\t                object.render(this.ctx);\r\n\t            object.left = -1;\r\n\t            object.width = 0;\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\texports.PI4_0 = 4 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.distance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    DistanceCalc.mdistance = function (a, b) {\r\n\t        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        var distanceh = distancecalc_1.DistanceCalc.mdistance(origin, h);\r\n\t        var distancev = distancecalc_1.DistanceCalc.mdistance(origin, v);\r\n\t        if (distanceh < distancev) {\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y\r\n\t        };\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(x, y, type) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 17)\r\n\t            this.shoot = true;\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e, canvas) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageY < canvas.height * 0.5) {\r\n\t            this.shoot = true;\r\n\t        }\r\n\t        else {\r\n\t            if (t.pageX < window.innerWidth * 0.333)\r\n\t                this.rotateleft = true;\r\n\t            else if (t.pageX < window.innerWidth * 0.666)\r\n\t                this.forward = true;\r\n\t            else\r\n\t                this.rotateright = true;\r\n\t        }\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e, canvas); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar spritesfactory_1 = __webpack_require__(11);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam, loader, settings) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        var spritesfactory = new spritesfactory_1.SpritesFactory(loader, size, settings);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 10; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Static));\r\n\t        }\r\n\t        for (var i = 0; i < size * 30; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Zombie));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(12);\r\n\tvar zombie_1 = __webpack_require__(13);\r\n\tvar SpritesFactory = (function () {\r\n\t    function SpritesFactory(assetloader, mapsize, settings) {\r\n\t        this.assetloader = assetloader;\r\n\t        this.mapsize = mapsize;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    SpritesFactory.prototype.createsprite = function (type) {\r\n\t        switch (type) {\r\n\t            case SpriteType.Static: return new sprite_1.Sprite(Math.random() * this.mapsize, Math.random() * this.mapsize, this.assetloader.sprites[Math.floor(Math.random() * this.assetloader.sprites.length)], this.settings);\r\n\t            case SpriteType.Zombie: return new zombie_1.Zombie(Math.random() * this.mapsize, Math.random() * this.mapsize, this.assetloader.zsprites[Math.floor(Math.random() * this.assetloader.zsprites.length)], this.settings);\r\n\t        }\r\n\t    };\r\n\t    return SpritesFactory;\r\n\t}());\r\n\texports.SpritesFactory = SpritesFactory;\r\n\tvar SpriteType;\r\n\t(function (SpriteType) {\r\n\t    SpriteType[SpriteType[\"Static\"] = 1] = \"Static\";\r\n\t    SpriteType[SpriteType[\"Zombie\"] = 2] = \"Zombie\";\r\n\t})(SpriteType || (SpriteType = {}));\r\n\texports.SpriteType = SpriteType;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.2;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Zombie = (function () {\r\n\t    function Zombie(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.35;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Zombie.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.8);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Zombie;\r\n\t}());\r\n\texports.Zombie = Zombie;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(15);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(9);\r\n\tvar Player = (function () {\r\n\t    function Player(x, y, facing, loader) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.facing = facing;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns, fov) {\r\n\t        var step = fov / columns;\r\n\t        var angle = this.facing.angle + fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, newposition) {\r\n\t        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n\t            newposition.x = this.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n\t            newposition.y = this.y;\r\n\t        }\r\n\t        this.x = newposition.x;\r\n\t        this.y = newposition.y;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        this.correctposition(map, {\r\n\t            x: this.x - this.facing.cos * delta / 500,\r\n\t            y: this.y - this.facing.sin * delta / 500\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n\t            this.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        var audio = new Audio(this.loader.soundssrcs[index]);\r\n\t        audio.play();\r\n\t        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n\t        //     let time = new Date()\r\n\t        //     let now = time.getTime()\r\n\t        //     console.log(this.loader.sounds[index].duration)\r\n\t        //     if (this.audiochannels[a].finish < now) {\r\n\t        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n\t        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n\t        //         this.audiochannels[a].audioel.play()\r\n\t        //         break\r\n\t        //     }\r\n\t        // }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 17 */,\n/* 18 */,\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar BackgroundRenderer = (function () {\r\n\t    function BackgroundRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    BackgroundRenderer.prototype.render = function (ctx, facingangle) {\r\n\t        var image = this.loader.skyline[0];\r\n\t        var sourceleft = Math.floor((image.width * (mathconst_1.PI2_0 - facingangle)) / mathconst_1.PI4_0);\r\n\t        var sourcewidth = Math.floor(image.width / 2);\r\n\t        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2);\r\n\t        ctx.fillStyle = this.settings.floorcolor1;\r\n\t        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height);\r\n\t        console.log(facingangle + \" \" + image.width / 2 + \" \" + sourceleft);\r\n\t    };\r\n\t    return BackgroundRenderer;\r\n\t}());\r\n\texports.BackgroundRenderer = BackgroundRenderer;\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6bcb34fe41159641246","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    height2: Math.floor(width / 1.8 / 2),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311',\r\n    wallheight: Math.floor(width / 1.8) * 0.8\r\n}\r\n\r\nlet assetloader = new AssetLoader()\r\n\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { \r\n        document.getElementById('loading-container').style.display = 'none'; \r\n        let canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let map = new Map(150, 0.3, assetloader, gamesettins)\r\n        let controls = new Controls()\r\n        let player = new Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new Angle(0), assetloader)\r\n        let scene = new Scene(ctx, gamesettins, assetloader)\r\n\r\n        canvas.width = gamesettins.width\r\n        canvas.height = gamesettins.height\r\n        canvas.style.width = `${gamesettins.width}px`\r\n        canvas.style.height = `${gamesettins.height}px`\r\n        controls.bindevents(document, canvas)\r\n        player.initonmap(map)\r\n\r\n\r\n        let lastrender: number = Date.now()\r\n        function render() {\r\n            let now = Date.now()\r\n            let delta = now - lastrender\r\n            lastrender = now\r\n            player.getcontrols(controls, map, delta)\r\n            scene.renderframe(delta, map, player, gamesettins.fov)\r\n            requestAnimationFrame(render)\r\n            fps.innerText = (Math.floor(1000 / delta)).toString()\r\n        }\r\n        render() \r\n    }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n        \r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n\r\n        this.zspritessrcs = [\r\n            './assets/sprites/zombie1.png',\r\n            './assets/sprites/zombie2.png',\r\n            './assets/sprites/zombie3.png',\r\n            './assets/sprites/zombie4.png'\r\n        ]\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        this.zsprites = new Array<HTMLImageElement>()\r\n        this.walls = new Array<HTMLImageElement>()\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private zspritessrcs: Array<string>\r\n    public zsprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    public soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private toload() {\r\n        return this.walls.length +\r\n            this.sprites.length +\r\n            this.zsprites.length +\r\n            this.skyline.length\r\n    }\r\n\r\n    private loadimages(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLImageElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Image())\r\n            arrobj[i].onload = () => {\r\n                onprogress(++this.loaded / this.toload())\r\n                if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    private loadaudio(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLAudioElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Audio())\r\n            arrobj[i].oncanplaythrough = () => {\r\n                //onprogress(++this.loaded / this.toload())\r\n                //if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        this.loadimages(this.wallssrcs, this.walls, onprogress, callback)\r\n        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback)\r\n        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback)\r\n        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback)\r\n        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0, PI4_0 } from './helpers/mathconst';\r\nimport { DistanceCalc } from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { BackgroundRenderer } from \"./renders/backgroundrenderer\";\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private backgroundrenderer: BackgroundRenderer\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.backgroundrenderer = new BackgroundRenderer(assets, settings)\r\n    }\r\n\r\n    // private renderbackground(player: Player, fov: number) {\r\n    //     let image = this.assets.skyline[0]\r\n    //     let sleft = ((PI2_0 - (player.facing.angle + fov / 2)) / PI4_0) * image.width\r\n    //     sleft = Math.abs(sleft)\r\n    //     sleft = Math.floor(sleft)\r\n    //     let swidth = Math.floor((image.width * fov) / PI4_0)\r\n    //     let height = Math.floor(this.settings.height * 0.5)\r\n    //     this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height)\r\n    //     this.ctx.fillStyle = this.settings.floorcolor1\r\n    //     this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    // }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.x - Math.floor(wall.x)\r\n        let mody = wall.y - Math.floor(wall.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        if (distance < 3) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n        } else if (distance < 8) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition)\r\n        } else {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition)\r\n        }\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 3\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    private filterobjectsinrange(player: Player, sprites: Array<ISprite>) {\r\n        let objectsinrange = new Array<ISprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<ISprite>, rayangle: number, left: number, nearestwalldistance: number) {\r\n        let objecttodraw = new Array<ISprite>()\r\n        for (let object of sprites) {\r\n            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x)\r\n\r\n            object.distance = DistanceCalc.distance(player, object)\r\n            if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n                if (object.distance < 0.20) object.distance = 0.20\r\n                \r\n                let anglediff = rayangle - sprite_player_angle\r\n                if(anglediff < -Math.PI) anglediff += PI2_0 \r\n                if(anglediff > Math.PI) anglediff -= PI2_0\r\n                              \r\n                let diff = anglediff / Math.atan2(object.anglewidth, object.distance)\r\n\r\n                if (Math.abs(diff) <= 1) {\r\n                    diff = Math.abs((diff - 1))\r\n                    if (object.left < 0) {\r\n                        object.left = left\r\n                        object.starttexture = diff\r\n                    }\r\n                    object.width += 5\r\n                    object.endtexture = diff\r\n                    objecttodraw.push(object)\r\n                }\r\n            }\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, fov: number) {\r\n        \r\n        this.backgroundrenderer.render(this.ctx, player.facing.angle)\r\n        let objectsinrange = this.filterobjectsinrange(player, map.sprites)\r\n        let rays = player.getrays(this.settings.width, this.settings.fov)\r\n        let drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.distance(player, colision) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            if(r % 5 == 0) {\r\n                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance)\r\n            }\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.left >= 0) object.render(this.ctx)\r\n            object.left = -1\r\n            object.width = 0\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\r\nexport const PI4_0: number = 4 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/mathconst.ts","import { IPoint } from '../ipoint';\r\nexport class DistanceCalc {\r\n    public static distance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n\r\n    public static mdistance(a:IPoint, b:IPoint) {\r\n        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/distancecalc.ts","import {DistanceCalc} from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './helpers/mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IPoint,\r\n        nextv: IPoint,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n        let distanceh = DistanceCalc.mdistance(origin, h)\r\n        let distancev = DistanceCalc.mdistance(origin, v)\r\n\r\n        if (distanceh < distancev) {\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h.x, h.y, type)]\r\n            } else {\r\n                return [new Colision(h.x, h.y, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh))\r\n            }\r\n        } else {\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v.x, v.y, type)]\r\n            } else {\r\n                return [new Colision(v.x, v.y, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev))\r\n            }\r\n        }\r\n    }\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IPoint {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IPoint {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision implements IPoint {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 17) this.shoot = true\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent, canvas: HTMLCanvasElement) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageY < canvas.height * 0.5) {\r\n            this.shoot = true\r\n        } else {\r\n            if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n            else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n            else this.rotateright = true\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLCanvasElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e, canvas) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './helpers/mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import { ISettings } from './isettings';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { SpritesFactory, SpriteType } from \"./sprites/spritesfactory\"\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<ISprite>\r\n\r\n    constructor(size: number, randparam: number, loader: AssetLoader, settings: ISettings) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n        this.randomize(randparam)\r\n\r\n        let spritesfactory = new SpritesFactory(loader, size, settings)\r\n\r\n        this.sprites = new Array<ISprite>()\r\n        for (let i = 0; i < size * 10; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Static))\r\n        }\r\n        for (let i = 0; i < size * 30; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Zombie))\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                }\r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISprite } from \"./isprite\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { Zombie } from \"./zombie\";\r\n\r\nexport { SpritesFactory, SpriteType }\r\n\r\nclass SpritesFactory {\r\n\r\n    public constructor(\r\n        private assetloader: AssetLoader,\r\n        private mapsize: number,\r\n        private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public createsprite(type: SpriteType):ISprite {\r\n        switch (type) {\r\n            case SpriteType.Static: return new Sprite(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.assetloader.sprites[Math.floor(Math.random() * this.assetloader.sprites.length)],\r\n                this.settings\r\n            )\r\n            case SpriteType.Zombie: return new Zombie(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.assetloader.zsprites[Math.floor(Math.random() * this.assetloader.zsprites.length)],\r\n                this.settings\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nenum SpriteType {\r\n    Static = 1,\r\n    Zombie\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/spritesfactory.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Sprite implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.2\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/sprite.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Zombie implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.35\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.8)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/zombie.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './helpers/mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player implements IPoint {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public facing: Angle,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number, fov: number) {\r\n        var step = fov / columns\r\n        var angle = this.facing.angle + fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, newposition: IPoint) {\r\n        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n            newposition.x = this.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n            newposition.y = this.y\r\n        }\r\n        this.x = newposition.x\r\n        this.y = newposition.y\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        this.correctposition(map, {\r\n            x: this.x - this.facing.cos * delta / 500,\r\n            y: this.y - this.facing.sin * delta / 500\r\n        })\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n            this.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        var audio = new Audio(this.loader.soundssrcs[index]);\r\n        audio.play();\r\n        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n        //     let time = new Date()\r\n        //     let now = time.getTime()\r\n        //     console.log(this.loader.sounds[index].duration)\r\n        //     if (this.audiochannels[a].finish < now) {\r\n        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n        //         this.audiochannels[a].audioel.play()\r\n        //         break\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts","import { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport {ISettings} from '../isettings';\r\nimport {AssetLoader} from '../assetloader';\r\nimport {Angle} from '../angle';\r\n\r\nexport class BackgroundRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n        \r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, facingangle: number) {\r\n        let image = this.loader.skyline[0]\r\n        let sourceleft = Math.floor((image.width * (PI2_0 - facingangle)) / PI4_0)\r\n        let sourcewidth = Math.floor(image.width / 2)\r\n        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2)\r\n        ctx.fillStyle = this.settings.floorcolor1\r\n        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height)\r\n\r\n        console.log(`${facingangle} ${image.width / 2} ${sourceleft}`)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/backgroundrenderer.ts"],"sourceRoot":""}