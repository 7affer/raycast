{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 6cb07d54e4ae058197a3","webpack:///./src/main.ts","webpack:///./src/scene.ts","webpack:///./src/ray.ts","webpack:///./src/colision.ts","webpack:///./src/distancecalc.ts","webpack:///./src/controls.ts","webpack:///./src/angle.ts","webpack:///./src/map.ts","webpack:///./src/player.ts","webpack:///./src/mathconst.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","initctx","canvas","width","gamesettins","height","style","controls","bindevents","document","scene_1","controls_1","angle_1","map_1","player_1","canvaselement","getElementById","fps","ctx","getContext","map","Map","randomize","fov","Math","PI","drawingdistance","sceneevents","renderfps","e","innerText","floor","toString","playerposition","x","size","y","getvalue","player","Player","Angle","Controls","scene","Scene","render","ray_1","distancecalc_1","settings","events","this","lastrender","Date","now","height2","wallheight","prototype","renderbackground","fillStyle","fillRect","renderwall","row","distancecorrected","ceil","color","colorhex","toLowerCase","top","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","_this","delta","getcontrols","rays","getrays","r","length","colisions","Ray","cast","position","type","distance","DistanceCalc","getdistance","point","cos","facing","angle","requestAnimationFrame","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","abs","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","pointerLockElement","removeEventListener","sin","Uint8Array","setvalue","value","pos","factor","i","random","mathconst_1","columns","step","Array","push","moveforward","movebackward","newfacing","PI0_5","PI1_0","PI1_5","PI2_0"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(11);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar scene_1 = __webpack_require__(2);\r\n\tvar controls_1 = __webpack_require__(6);\r\n\tvar angle_1 = __webpack_require__(7);\r\n\tvar map_1 = __webpack_require__(8);\r\n\tvar player_1 = __webpack_require__(9);\r\n\tvar canvaselement = document.getElementById('gamecanvas');\r\n\tvar fps = document.getElementById('fps');\r\n\tvar ctx = canvaselement.getContext('2d');\r\n\tvar map = new map_1.Map(100);\r\n\tmap.randomize(0.3);\r\n\tvar gamesettins = {\r\n\t    width: 800,\r\n\t    height: 600,\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 30\r\n\t};\r\n\tvar sceneevents = {\r\n\t    renderfps: function (e) { fps.innerText = (Math.floor(e)).toString(); }\r\n\t};\r\n\tvar playerposition = { x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 };\r\n\twhile (map.getvalue(Math.floor(playerposition.x), Math.floor(playerposition.y)) > 0)\r\n\t    playerposition.x += 1;\r\n\tvar player = new player_1.Player(playerposition, new angle_1.Angle(0), gamesettins.fov);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar scene = new scene_1.Scene(ctx, map, player, controls, gamesettins, sceneevents);\r\n\tfunction initctx(canvas) {\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, canvas);\r\n\t}\r\n\tinitctx(canvaselement);\r\n\tscene.render();\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ray_1 = __webpack_require__(3);\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, map, player, controls, settings, events) {\r\n\t        this.ctx = ctx;\r\n\t        this.map = map;\r\n\t        this.player = player;\r\n\t        this.controls = controls;\r\n\t        this.settings = settings;\r\n\t        this.events = events;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function () {\r\n\t        this.ctx.fillStyle = '#ffffff';\r\n\t        this.ctx.fillRect(0, 0, this.settings.width, this.settings.height);\r\n\t        this.ctx.fillStyle = '#000000';\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.height2);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distancecorrected) {\r\n\t        var height = Math.ceil(this.wallheight / distancecorrected);\r\n\t        var color = Math.floor(255 - distancecorrected * 10);\r\n\t        var colorhex = color.toString(16).toLowerCase();\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        this.ctx.beginPath();\r\n\t        this.ctx.moveTo(row, top);\r\n\t        this.ctx.lineTo(row, this.settings.height - top);\r\n\t        this.ctx.lineWidth = 2;\r\n\t        this.ctx.strokeStyle = \"#\" + colorhex + colorhex + colorhex;\r\n\t        this.ctx.stroke();\r\n\t    };\r\n\t    Scene.prototype.render = function () {\r\n\t        var _this = this;\r\n\t        var now = Date.now();\r\n\t        var delta = now - this.lastrender;\r\n\t        this.lastrender = now;\r\n\t        this.events.renderfps(Math.floor(1000 / delta));\r\n\t        this.renderbackground();\r\n\t        this.player.getcontrols(this.controls, this.map, delta);\r\n\t        var rays = this.player.getrays(this.settings.width);\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var colisions = ray_1.Ray.cast(this.map, this.player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var c = 0; c < colisions.length; c++) {\r\n\t                if (colisions[c].type > 0) {\r\n\t                    var distance = distancecalc_1.DistanceCalc.getdistance(this.player.position, colisions[c].point);\r\n\t                    var distancecorrected = distance * Math.cos(this.player.facing.angle - rays[r].angle);\r\n\t                    this.renderwall(r, distancecorrected);\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        requestAnimationFrame(function () { return _this.render(); });\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(4);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            return [new colision_1.Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n\t                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            return [new colision_1.Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n\t                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = false;\r\n\t        this.mouserotateright = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = true;\r\n\t            this.mouserotateright = false;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = false;\r\n\t            this.mouserotateright = true;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = false;\r\n\t        this.mouserotateright = false;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = angle;\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (factor) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            this.map[i] = Math.random() < factor ? 1 : 0;\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(10);\r\n\tvar angle_1 = __webpack_require__(7);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t        else if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) == 0) {\r\n\t            position.y = this.position.y;\r\n\t            this.position = position;\r\n\t        }\r\n\t        else if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) == 0) {\r\n\t            position.x = this.position.x;\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t        else if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) == 0) {\r\n\t            position.y = this.position.y;\r\n\t            this.position = position;\r\n\t        }\r\n\t        else if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) == 0) {\r\n\t            position.x = this.position.x;\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n\t            this.position = position;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft || controls.mouserotateleft)\r\n\t            this.rotateleft(delta);\r\n\t        if (controls.rotateright || controls.mouserotateright)\r\n\t            this.rotateright(delta);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6cb07d54e4ae058197a3","import { Scene } from './scene';\nimport { Controls } from './controls';\nimport { DistanceCalc } from './distancecalc';\nimport { Angle } from './angle';\nimport { Ray } from './ray';\nimport { PI2_0 } from './mathconst'\nimport { Map } from './map';\nimport { Player } from './player';\n\nlet canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\nlet fps = document.getElementById('fps')\nlet ctx = canvaselement.getContext('2d')\nlet map = new Map(100)\nmap.randomize(0.3)\n\nlet gamesettins = {\n    width: 800,\n    height: 600,\n    fov: 70 * Math.PI / 180,\n    drawingdistance: 30\n}\n\nlet sceneevents = {\n    renderfps: (e: number) => { fps.innerText = (Math.floor(e)).toString() }\n}\n\nlet playerposition = { x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }\nwhile (map.getvalue(Math.floor(playerposition.x), Math.floor(playerposition.y)) > 0) playerposition.x += 1\nlet player = new Player(playerposition, new Angle(0), gamesettins.fov)\nlet controls = new Controls()\nlet scene = new Scene(ctx, map, player, controls, gamesettins, sceneevents)\n\nfunction initctx(canvas: HTMLCanvasElement) {\n    canvas.width = gamesettins.width\n    canvas.height = gamesettins.height\n    canvas.style.width = `${gamesettins.width}px`\n    canvas.style.height = `${gamesettins.height}px`\n    controls.bindevents(document, canvas)\n}\n\ninitctx(canvaselement)\nscene.render()\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { ISceneEvents } from './isceneevents';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private map: Map,\r\n        private player: Player,\r\n        private controls: Controls,\r\n        private settings: ISettings,\r\n        private events: ISceneEvents\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground() {\r\n        this.ctx.fillStyle = '#ffffff'\r\n        this.ctx.fillRect(0, 0, this.settings.width, this.settings.height)\r\n        this.ctx.fillStyle = '#000000'\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.height2)\r\n    }\r\n\r\n    private renderwall(row: number, distancecorrected: number) {\r\n        let height = Math.ceil(this.wallheight / distancecorrected)\r\n        let color = Math.floor(255 - distancecorrected * 10)\r\n        let colorhex = color.toString(16).toLowerCase()\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(row, top)\r\n        this.ctx.lineTo(row, this.settings.height - top)\r\n        this.ctx.lineWidth = 2\r\n        this.ctx.strokeStyle = `#${colorhex}${colorhex}${colorhex}`\r\n        this.ctx.stroke()\r\n    }\r\n\r\n    public render() {\r\n        let now = Date.now()\r\n        let delta = now - this.lastrender\r\n        this.lastrender = now\r\n        this.events.renderfps(Math.floor(1000 / delta))\r\n        this.renderbackground()\r\n\r\n        this.player.getcontrols(this.controls, this.map, delta)\r\n\r\n        var rays = this.player.getrays(this.settings.width)\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let colisions = Ray.cast(this.map, this.player.position, null, null, rays[r], this.settings.drawingdistance)\r\n            for (let c = 0; c < colisions.length; c++) {\r\n                if (colisions[c].type > 0) {\r\n                    let distance = DistanceCalc.getdistance(this.player.position, colisions[c].point)\r\n                    let distancecorrected = distance * Math.cos(this.player.facing.angle - rays[r].angle)\r\n                    this.renderwall(r, distancecorrected)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => this.render())\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scene.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y+ facing.dy) \r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x+ facing.dx) \r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n\r\n            return [new Colision(h, map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1)))]\r\n                .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            return [new Colision(v, map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y)))]\r\n                .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: boolean = false\r\n    public mouserotateright: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = true\r\n            this.mouserotateright = false\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = false\r\n            this.mouserotateright = true\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = false\r\n        this.mouserotateright = false\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock\r\n            canvas.requestPointerLock()\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = angle\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/angle.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(factor:number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            this.map[i] = Math.random() < factor ? 1 : 0\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * delta / 1200)\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        } else if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) == 0) {\r\n            position.y = this.position.y\r\n            this.position = position\r\n        } else if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) == 0) {\r\n            position.x = this.position.x\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        } else if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) == 0) {\r\n            position.y = this.position.y\r\n            this.position = position\r\n        } else if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) == 0) {\r\n            position.x = this.position.x\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(position.y)) == 0) {\r\n            this.position = position\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft || controls.mouserotateleft) this.rotateleft(delta)\r\n        if (controls.rotateright || controls.mouserotateright) this.rotateright(delta)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/mathconst.ts"],"sourceRoot":""}