{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 44aeebaace7964291d6d","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/sprite.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/mathconst.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","now","Date","delta","lastrender","objectsinrange","Array","i","sprites","length","Math","abs","player","position","x","gamesettins","drawingdistance","y","angle","atan2","push","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","fps","innerText","floor","toString","sprite_1","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","document","getElementById","width","window","innerWidth","height","fov","PI","floorcolor1","floorcolor2","canvas","ctx","getContext","Map","Player","size","Angle","Controls","assetloader","AssetLoader","Scene","Sprite","random","style","bindevents","initonmap","loadall","type","this","wallssrcs","walls","item","Image","spritessrcs","prototype","isloaded","callback","_this","onload","src","ray_1","distancecalc_1","settings","assets","height2","wallheight","renderbackground","grdceiling","createLinearGradient","addColorStop","fillStyle","fillRect","renderwall","row","distance","image","textureposition","ceil","top","texleft","drawImage","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","stroke","drawwall","left","wall","modx","point","mody","drawfloor","bottom","useback","newbottom","objects","rays","getrays","r","drawfloorray","cos","facing","colisions","Ray","cast","DistanceCalc","getdistance","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","getvalue","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","canvaselement","pointerLockElement","removeEventListener","sin","randparam","Uint8Array","randomize","setvalue","value","pos","mathconst_1","columns","step","movement","correctposition","moveforward","movebackward","newfacing","PI0_5","PI1_0","PI1_5","PI2_0"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(13);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(2);\r\n\tvar assetloader_1 = __webpack_require__(3);\r\n\tvar scene_1 = __webpack_require__(4);\r\n\tvar controls_1 = __webpack_require__(8);\r\n\tvar angle_1 = __webpack_require__(9);\r\n\tvar map_1 = __webpack_require__(10);\r\n\tvar player_1 = __webpack_require__(11);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 25,\r\n\t    floorcolor1: '#000011',\r\n\t    floorcolor2: '#111122'\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(1000, 0.3);\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\tvar sprites = new Array();\r\n\tfor (var i = 0; i < 50; i++) {\r\n\t    sprites.push(new sprite_1.Sprite({ x: Math.random() * 100, y: Math.random() * 100 }, 0));\r\n\t}\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tvar objectsinrange = new Array();\r\n\tvar lastrender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastrender;\r\n\t    lastrender = now;\r\n\t    objectsinrange = new Array();\r\n\t    for (var i = 0; i < sprites.length; i++) {\r\n\t        if (Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n\t            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance) {\r\n\t            sprites[i].angle = Math.atan2(player.position.x - sprites[i].position.x, player.position.y - sprites[i].position.y);\r\n\t            objectsinrange.push(sprites[i]);\r\n\t        }\r\n\t    }\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    scene.renderframe(delta, map, player, objectsinrange);\r\n\t    requestAnimationFrame(render);\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t}\r\n\tassetloader.loadall(render);\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(position, type) {\r\n\t        this.position = position;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg'\r\n\t        ];\r\n\t        this.walls = new Array();\r\n\t        for (var item in this.wallssrcs)\r\n\t            this.walls.push(new Image());\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        for (var item in this.spritessrcs)\r\n\t            this.sprites.push(new Image());\r\n\t    }\r\n\t    AssetLoader.prototype.isloaded = function () {\r\n\t        return this.loaded ==\r\n\t            this.walls.length +\r\n\t                this.sprites.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t        for (var i in this.spritessrcs) {\r\n\t            this.sprites[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sprites[i].src = this.spritessrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ray_1 = __webpack_require__(5);\r\n\tvar distancecalc_1 = __webpack_require__(7);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function () {\r\n\t        var grdceiling = this.ctx.createLinearGradient(0, 0, 0, this.height2);\r\n\t        grdceiling.addColorStop(0, '#aaaaaa');\r\n\t        grdceiling.addColorStop(1, '#222222');\r\n\t        this.ctx.fillStyle = grdceiling;\r\n\t        this.ctx.fillRect(0, 0, this.settings.width, this.height2);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = distance / this.settings.drawingdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.point.x - Math.floor(wall.point.x);\r\n\t        var mody = wall.point.y - Math.floor(wall.point.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, objects) {\r\n\t        this.renderbackground();\r\n\t        var rays = player.getrays(this.settings.width);\r\n\t        var drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var wall = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var c = 0; c < colisions.length; c++) {\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colisions[c].point) * cos;\r\n\t                if (colisions[c].type > 0) {\r\n\t                    wall = colisions[c];\r\n\t                    this.drawwall(r, distance, wall, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(6);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageX < window.innerWidth * 0.333)\r\n\t            this.rotateleft = true;\r\n\t        else if (t.pageX < window.innerWidth * 0.666)\r\n\t            this.forward = true;\r\n\t        else\r\n\t            this.rotateright = true;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = angle;\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(12);\r\n\tvar angle_1 = __webpack_require__(9);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44aeebaace7964291d6d","import { Sprite } from './sprite';\r\nimport { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 25,\r\n    floorcolor1: '#000011',\r\n    floorcolor2: '#111122'\r\n}\r\n\r\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet ctx = canvas.getContext('2d')\r\nlet map = new Map(1000, 0.3)\r\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov)\r\nlet controls = new Controls()\r\nlet assetloader = new AssetLoader()\r\nlet scene = new Scene(ctx, gamesettins, assetloader)\r\nlet sprites = new Array<Sprite>()\r\nfor (let i = 0; i < 50; i++) {\r\n    sprites.push(\r\n        new Sprite({ x: Math.random() * 100, y: Math.random() * 100 }, 0)\r\n    )\r\n}\r\n\r\ncanvas.width = gamesettins.width\r\ncanvas.height = gamesettins.height\r\ncanvas.style.width = `${gamesettins.width}px`\r\ncanvas.style.height = `${gamesettins.height}px`\r\ncontrols.bindevents(document, canvas)\r\nplayer.initonmap(map)\r\n\r\nlet objectsinrange = new Array<Sprite>()\r\nlet lastrender: number = Date.now()\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastrender\r\n    lastrender = now\r\n\r\n    objectsinrange = new Array<Sprite>()\r\n    for (let i = 0; i < sprites.length; i++) {\r\n        if (\r\n            Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance\r\n        ) {\r\n            sprites[i].angle = Math.atan2(\r\n                player.position.x - sprites[i].position.x, \r\n                player.position.y - sprites[i].position.y\r\n            )\r\n            objectsinrange.push(sprites[i])\r\n        }\r\n    }\r\n\r\n    player.getcontrols(controls, map, delta)\r\n    scene.renderframe(delta, map, player, objectsinrange)\r\n    requestAnimationFrame(render)\r\n\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n}\r\nassetloader.loadall(render)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","import { Angle } from './angle';\r\nimport { IPoint } from './ipoint';\r\nexport class Sprite {\r\n\r\n    public angle: number\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprite.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg'\r\n        ]\r\n        this.walls = new Array<HTMLImageElement>()\r\n        for (let item in this.wallssrcs) this.walls.push(new Image())\r\n\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        for (let item in this.spritessrcs) this.sprites.push(new Image())\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n\r\n    private isloaded() {\r\n        return this.loaded ==\r\n            this.walls.length +\r\n            this.sprites.length\r\n    }\r\n\r\n    public loadall(callback: () => void) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loaded += 1\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n\r\n        for (let i in this.spritessrcs) {\r\n            this.sprites[i].onload = () => {\r\n                this.loaded += 1\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sprites[i].src = this.spritessrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { Sprite } from './sprite';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground() {\r\n        var grdceiling = this.ctx.createLinearGradient(0, 0, 0, this.height2);\r\n        grdceiling.addColorStop(0, '#aaaaaa');\r\n        grdceiling.addColorStop(1, '#222222');\r\n        this.ctx.fillStyle = grdceiling;\r\n        this.ctx.fillRect(0, 0, this.settings.width, this.height2)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = distance / this.settings.drawingdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.point.x - Math.floor(wall.point.x)\r\n        let mody = wall.point.y - Math.floor(wall.point.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, objects: Array<Sprite>) {\r\n        this.renderbackground()            \r\n        let rays = player.getrays(this.settings.width)\r\n        let drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let wall: Colision\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance)\r\n            for (let c = 0; c < colisions.length; c++) {\r\n                let distance = DistanceCalc.getdistance(player.position, colisions[c].point) * cos\r\n                if (colisions[c].type > 0) {\r\n                    wall = colisions[c]\r\n                    this.drawwall(r, distance, wall, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h, type)]\r\n            } else {\r\n                return [new Colision(h, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n            }\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v, type)]\r\n            } else {\r\n                return [new Colision(v, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n        else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n        else this.rotateright = true\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock\r\n            canvas.requestPointerLock()\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = angle\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        } \r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts"],"sourceRoot":""}