{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 52658ccacb6d6594e231","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/mathconst.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","fps","innerText","Math","floor","toString","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","document","getElementById","width","window","innerWidth","gamesettins","height","fov","PI","drawingdistance","floorcolor1","floorcolor2","canvas","ctx","getContext","Map","Player","x","size","y","Angle","Controls","assetloader","AssetLoader","Scene","style","bindevents","initonmap","loadall","this","wallssrcs","walls","Array","item","push","Image","spritessrcs","sprites","prototype","isloaded","length","callback","_this","i","onload","src","ray_1","distancecalc_1","settings","assets","height2","wallheight","renderbackground","grdceiling","createLinearGradient","addColorStop","fillStyle","fillRect","renderwall","row","distance","image","textureposition","ceil","top","texleft","drawImage","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","stroke","drawwall","left","wall","modx","point","mody","abs","type","drawfloor","bottom","useback","newbottom","rays","getrays","position","r","drawfloorray","cos","facing","angle","colisions","Ray","cast","DistanceCalc","getdistance","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","getvalue","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","canvaselement","pointerLockElement","removeEventListener","sin","randparam","Uint8Array","randomize","setvalue","value","pos","random","mathconst_1","columns","step","movement","correctposition","moveforward","movebackward","newfacing","PI0_5","PI1_0","PI1_5","PI2_0"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(12);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(7);\r\n\tvar angle_1 = __webpack_require__(8);\r\n\tvar map_1 = __webpack_require__(9);\r\n\tvar player_1 = __webpack_require__(10);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 25,\r\n\t    floorcolor1: '#000011',\r\n\t    floorcolor2: '#111122'\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(1000, 0.3);\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tvar lastrender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastrender;\r\n\t    lastrender = now;\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    scene.renderframe(delta, map, player);\r\n\t    requestAnimationFrame(render);\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t}\r\n\tassetloader.loadall(render);\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg'\r\n\t        ];\r\n\t        this.walls = new Array();\r\n\t        for (var item in this.wallssrcs)\r\n\t            this.walls.push(new Image());\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        for (var item in this.spritessrcs)\r\n\t            this.sprites.push(new Image());\r\n\t    }\r\n\t    AssetLoader.prototype.isloaded = function () {\r\n\t        return this.loaded ==\r\n\t            this.walls.length +\r\n\t                this.sprites.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t        for (var i in this.spritessrcs) {\r\n\t            this.sprites[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sprites[i].src = this.spritessrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ray_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(6);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function () {\r\n\t        var grdceiling = this.ctx.createLinearGradient(0, 0, 0, this.height2);\r\n\t        grdceiling.addColorStop(0, '#aaaaaa');\r\n\t        grdceiling.addColorStop(1, '#222222');\r\n\t        this.ctx.fillStyle = grdceiling;\r\n\t        this.ctx.fillRect(0, 0, this.settings.width, this.height2);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 2 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 2;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = distance / this.settings.drawingdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.point.x - Math.floor(wall.point.x);\r\n\t        var mody = wall.point.y - Math.floor(wall.point.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 2 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 2;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player) {\r\n\t        this.renderbackground();\r\n\t        var rays = player.getrays(this.settings.width);\r\n\t        var drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var wall = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var c = 0; c < colisions.length; c++) {\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colisions[c].point) * cos;\r\n\t                if (colisions[c].type > 0) {\r\n\t                    wall = colisions[c];\r\n\t                    this.drawwall(r, distance, wall, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(5);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageX < window.innerWidth * 0.333)\r\n\t            this.rotateleft = true;\r\n\t        else if (t.pageX < window.innerWidth * 0.666)\r\n\t            this.forward = true;\r\n\t        else\r\n\t            this.rotateright = true;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('touchstart', function (e) { _this.touchstart(e); }, false);\r\n\t        doc.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = angle;\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(11);\r\n\tvar angle_1 = __webpack_require__(8);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 52658ccacb6d6594e231","import { Sprite } from './sprite';\nimport { AssetLoader } from './assetloader';\nimport { Scene } from './scene';\nimport { Controls } from './controls';\nimport { Angle } from './angle';\nimport { Map } from './map';\nimport { Player } from './player';\n\n\nlet fps = document.getElementById('fps')\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\nlet gamesettins = {\n    width: width,\n    height: Math.floor(width / 1.8),\n    fov: 70 * Math.PI / 180,\n    drawingdistance: 25,\n    floorcolor1: '#000011',\n    floorcolor2: '#111122'\n}\n\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\nlet ctx = canvas.getContext('2d')\nlet map = new Map(1000, 0.3)\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov)\nlet controls = new Controls()\nlet assetloader = new AssetLoader()\nlet scene = new Scene(ctx, gamesettins, assetloader)\n\ncanvas.width = gamesettins.width\ncanvas.height = gamesettins.height\ncanvas.style.width = `${gamesettins.width}px`\ncanvas.style.height = `${gamesettins.height}px`\ncontrols.bindevents(document, canvas)\nplayer.initonmap(map)\n\nlet lastrender: number = Date.now()\nfunction render() {\n    let now = Date.now()\n    let delta = now - lastrender\n    lastrender = now\n\n    player.getcontrols(controls, map, delta)\n    scene.renderframe(delta, map, player)\n    requestAnimationFrame(render)\n\n    fps.innerText = (Math.floor(1000 / delta)).toString()\n}\nassetloader.loadall(render)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg'\r\n        ]\r\n        this.walls = new Array<HTMLImageElement>()\r\n        for (let item in this.wallssrcs) this.walls.push(new Image())\r\n\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        for (let item in this.spritessrcs) this.sprites.push(new Image())\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n\r\n    private isloaded() {\r\n        return this.loaded ==\r\n            this.walls.length +\r\n            this.sprites.length\r\n    }\r\n\r\n    public loadall(callback: () => void) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loaded += 1\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n\r\n        for (let i in this.spritessrcs) {\r\n            this.sprites[i].onload = () => {\r\n                this.loaded += 1\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sprites[i].src = this.spritessrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground() {\r\n        var grdceiling = this.ctx.createLinearGradient(0, 0, 0, this.height2);\r\n        grdceiling.addColorStop(0, '#aaaaaa');\r\n        grdceiling.addColorStop(1, '#222222');\r\n        this.ctx.fillStyle = grdceiling;\r\n        this.ctx.fillRect(0, 0, this.settings.width, this.height2)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 2 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 2\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = distance / this.settings.drawingdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.point.x - Math.floor(wall.point.x)\r\n        let mody = wall.point.y - Math.floor(wall.point.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 2 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 2\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player) {\r\n        this.renderbackground()\r\n        let rays = player.getrays(this.settings.width)\r\n        let drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let wall: Colision\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance)\r\n            for (let c = 0; c < colisions.length; c++) {\r\n                let distance = DistanceCalc.getdistance(player.position, colisions[c].point) * cos\r\n                if (colisions[c].type > 0) {\r\n                    wall = colisions[c]\r\n                    this.drawwall(r, distance, wall, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h, type)]\r\n            } else {\r\n                return [new Colision(h, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n            }\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v, type)]\r\n            } else {\r\n                return [new Colision(v, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n        else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n        else this.rotateright = true\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('touchstart', (e) => { this.touchstart(e) }, false)\r\n        doc.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock\r\n            canvas.requestPointerLock()\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = angle\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        } \r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts"],"sourceRoot":""}