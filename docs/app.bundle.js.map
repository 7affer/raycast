{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 95f229dc8483a43ab2e0","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/sprite.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/mathconst.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/player.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","now","Date","delta","lastrender","objectsinrange","Array","i","sprites","length","Math","abs","player","position","x","gamesettins","drawingdistance","y","angle","angle_1","Angle","normalizeangle","atan2","push","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","fps","innerText","floor","toString","sprite_1","assetloader_1","scene_1","controls_1","map_1","player_1","document","getElementById","width","window","innerWidth","height","fov","PI","floorcolor1","floorcolor2","canvas","ctx","getContext","Map","Player","size","Controls","assetloader","AssetLoader","Scene","Sprite","random","style","bindevents","initonmap","loadall","prog","innerHTML","ceil","display","type","this","start","wallssrcs","walls","item","Image","spritessrcs","skylinesrcs","skyline","prototype","isloaded","toload","onprogress","callback","_this","onload","src","mathconst_1","ray_1","distancecalc_1","settings","assets","height2","wallheight","renderbackground","image","PI4","sleft","PI2_0","facing","swidth","drawImage","fillStyle","fillRect","renderwall","row","distance","textureposition","top","texleft","shadowdistance","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","min","stroke","drawwall","left","wall","modx","point","mody","drawobject","object","bottom","starttexture","texright","endtexture","max","end","drawfloor","useback","newbottom","objects","rays","getrays","r","drawfloorray","walldistance","cos","colisions","Ray","cast","_i","colisions_1","colision","DistanceCalc","getdistance","_a","objects_1","PI1_5","diff","_b","objects_2","PI0_5","PI1_0","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","getvalue","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","sin","randparam","Uint8Array","randomize","setvalue","value","pos","columns","step","movement","correctposition","moveforward","movebackward","newfacing"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(13);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(2);\r\n\tvar assetloader_1 = __webpack_require__(3);\r\n\tvar scene_1 = __webpack_require__(4);\r\n\tvar controls_1 = __webpack_require__(9);\r\n\tvar angle_1 = __webpack_require__(10);\r\n\tvar map_1 = __webpack_require__(11);\r\n\tvar player_1 = __webpack_require__(12);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311'\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(150, 0.3);\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\tvar sprites = new Array();\r\n\tfor (var i = 0; i < map.size * 25; i++) {\r\n\t    sprites.push(new sprite_1.Sprite({\r\n\t        x: Math.random() * map.size,\r\n\t        y: Math.random() * map.size\r\n\t    }, Math.floor(Math.random() * 5)));\r\n\t}\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tvar objectsinrange = new Array();\r\n\tvar lastrender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastrender;\r\n\t    lastrender = now;\r\n\t    objectsinrange = new Array();\r\n\t    for (var i = 0; i < sprites.length; i++) {\r\n\t        if (Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n\t            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance) {\r\n\t            sprites[i].angle = angle_1.Angle.normalizeangle(Math.atan2(sprites[i].position.y - player.position.y, sprites[i].position.x - player.position.x));\r\n\t            objectsinrange.push(sprites[i]);\r\n\t        }\r\n\t    }\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    scene.renderframe(delta, map, player, objectsinrange);\r\n\t    requestAnimationFrame(render);\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t}\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () { document.getElementById('loading-container').style.display = 'none'; render(); });\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(position, type) {\r\n\t        this.position = position;\r\n\t        this.type = type;\r\n\t        this.start = -1;\r\n\t    }\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.walls = new Array();\r\n\t        for (var item in this.wallssrcs)\r\n\t            this.walls.push(new Image());\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        for (var item in this.spritessrcs)\r\n\t            this.sprites.push(new Image());\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.skyline = new Array();\r\n\t        for (var item in this.skylinesrcs)\r\n\t            this.skyline.push(new Image());\r\n\t    }\r\n\t    AssetLoader.prototype.isloaded = function () {\r\n\t        return this.loaded == this.toload();\r\n\t    };\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length + this.sprites.length + this.skyline.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t        for (var i in this.spritessrcs) {\r\n\t            this.sprites[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sprites[i].src = this.spritessrcs[i];\r\n\t        }\r\n\t        for (var i in this.skylinesrcs) {\r\n\t            this.skyline[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                onprogress(_this.loaded / _this.toload());\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.skyline[i].src = this.skylinesrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar distancecalc_1 = __webpack_require__(8);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function (player) {\r\n\t        var image = this.assets.skyline[0];\r\n\t        var PI4 = 4 * Math.PI;\r\n\t        var sleft = ((mathconst_1.PI2_0 - (player.facing.angle + player.fov / 2)) / PI4) * image.width;\r\n\t        sleft = Math.abs(sleft);\r\n\t        sleft = Math.floor(sleft);\r\n\t        var swidth = Math.floor((image.width * player.fov) / PI4);\r\n\t        var height = Math.floor(this.settings.height * 0.5);\r\n\t        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.point.x - Math.floor(wall.point.x);\r\n\t        var mody = wall.point.y - Math.floor(wall.point.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        if (distance < 3) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition);\r\n\t        }\r\n\t        else {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawobject = function (object) {\r\n\t        var wallheight = Math.ceil(this.wallheight / object.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var image = this.assets.sprites[object.type];\r\n\t        var texleft = Math.floor(object.starttexture * image.width);\r\n\t        var texright = Math.floor(object.endtexture * image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        var width = Math.max(1, object.end - object.start);\r\n\t        this.ctx.drawImage(image, texleft, 0, swidth, image.height, object.start, top, width, height);\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 3;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, objects) {\r\n\t        this.renderbackground(player);\r\n\t        var rays = player.getrays(this.settings.width);\r\n\t        var drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colision.point) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\r\n\t                var object = objects_1[_a];\r\n\t                object.distance = distancecalc_1.DistanceCalc.getdistance(player.position, object.position);\r\n\t                if (object.distance < this.settings.drawingdistance && object.distance < walldistance) {\r\n\t                    if (object.distance < 0.25)\r\n\t                        object.distance = 0.25;\r\n\t                    if (rays[r].angle > mathconst_1.PI1_5)\r\n\t                        rays[r].angle -= mathconst_1.PI2_0;\r\n\t                    if (object.angle > mathconst_1.PI1_5)\r\n\t                        object.angle -= mathconst_1.PI2_0;\r\n\t                    var diff = (rays[r].angle - object.angle) / (2 * Math.atan2(0.05, object.distance));\r\n\t                    if (Math.abs(diff) <= 1) {\r\n\t                        diff = Math.abs((diff - 1) * 0.5);\r\n\t                        if (object.start < 0) {\r\n\t                            object.start = r;\r\n\t                            object.starttexture = diff;\r\n\t                        }\r\n\t                        object.end = r;\r\n\t                        object.endtexture = diff;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        for (var _b = 0, objects_2 = objects; _b < objects_2.length; _b++) {\r\n\t            var object = objects_2[_b];\r\n\t            if (object.start >= 0)\r\n\t                this.drawobject(object);\r\n\t            object.start = -1;\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageX < window.innerWidth * 0.333)\r\n\t            this.rotateleft = true;\r\n\t        else if (t.pageX < window.innerWidth * 0.666)\r\n\t            this.forward = true;\r\n\t        else\r\n\t            this.rotateright = true;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(5);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(5);\r\n\tvar angle_1 = __webpack_require__(10);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 95f229dc8483a43ab2e0","import { Sprite } from './sprite';\r\nimport { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311'\r\n}\r\n\r\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet ctx = canvas.getContext('2d')\r\nlet map = new Map(150, 0.3)\r\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov)\r\nlet controls = new Controls()\r\nlet assetloader = new AssetLoader()\r\nlet scene = new Scene(ctx, gamesettins, assetloader)\r\nlet sprites = new Array<Sprite>()\r\nfor (let i = 0; i < map.size * 25; i++) {\r\n    sprites.push(\r\n        new Sprite({\r\n            x: Math.random() * map.size,\r\n            y: Math.random() * map.size\r\n        },\r\n            Math.floor(Math.random() * 5)\r\n        )\r\n    )\r\n}\r\n\r\ncanvas.width = gamesettins.width\r\ncanvas.height = gamesettins.height\r\ncanvas.style.width = `${gamesettins.width}px`\r\ncanvas.style.height = `${gamesettins.height}px`\r\ncontrols.bindevents(document, canvas)\r\nplayer.initonmap(map)\r\n\r\nlet objectsinrange = new Array<Sprite>()\r\nlet lastrender: number = Date.now()\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastrender\r\n    lastrender = now\r\n\r\n    objectsinrange = new Array<Sprite>()\r\n    for (let i = 0; i < sprites.length; i++) {\r\n        if (\r\n            Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance\r\n        ) {\r\n            sprites[i].angle = Angle.normalizeangle(Math.atan2(\r\n                sprites[i].position.y - player.position.y,\r\n                sprites[i].position.x - player.position.x\r\n            ))\r\n            objectsinrange.push(sprites[i])\r\n        }\r\n    }\r\n\r\n    player.getcontrols(controls, map, delta)\r\n    scene.renderframe(delta, map, player, objectsinrange)\r\n    requestAnimationFrame(render)\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n}\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { document.getElementById('loading-container').style.display = 'none'; render() }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","import { Angle } from './angle';\r\nimport { IPoint } from './ipoint';\r\nexport class Sprite {\r\n\r\n    public angle: number\r\n    public start: number = -1\r\n    public starttexture: number\r\n    public end: number\r\n    public endtexture: number\r\n    public distance: number\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprite.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n        this.walls = new Array<HTMLImageElement>()\r\n        for (let item in this.wallssrcs) this.walls.push(new Image())\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        for (let item in this.spritessrcs) this.sprites.push(new Image())\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        for (let item in this.skylinesrcs) this.skyline.push(new Image())\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n\r\n    private isloaded() {\r\n        return this.loaded == this.toload()\r\n    }\r\n\r\n    private toload() {\r\n        return this.walls.length + this.sprites.length + this.skyline.length\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog:number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n\r\n        for (let i in this.spritessrcs) {\r\n            this.sprites[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sprites[i].src = this.spritessrcs[i]\r\n        }\r\n\r\n        for (let i in this.skylinesrcs) {\r\n            this.skyline[i].onload = () => {\r\n                this.loaded += 1\r\n                onprogress(this.loaded / this.toload())\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.skyline[i].src = this.skylinesrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0 } from './mathconst';\r\nimport { Sprite } from './sprite';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground(player: Player) {\r\n        let image = this.assets.skyline[0]\r\n        let PI4 = 4 * Math.PI\r\n        let sleft = ((PI2_0 - (player.facing.angle + player.fov / 2)) / PI4) * image.width\r\n        sleft = Math.abs(sleft)\r\n        sleft = Math.floor(sleft)\r\n        let swidth = Math.floor((image.width * player.fov) / PI4)\r\n        let height = Math.floor(this.settings.height * 0.5)\r\n        this.ctx.drawImage(image, sleft, 0, swidth, image.height, 0, 0, this.settings.width, height)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = Math.min(distance,shadowdistance) / shadowdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.point.x - Math.floor(wall.point.x)\r\n        let mody = wall.point.y - Math.floor(wall.point.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        if (distance < 3) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n        } else if (distance < 8) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition)\r\n        } else {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition)\r\n        }\r\n    }\r\n\r\n    private drawobject(object: Sprite) {\r\n        let wallheight = Math.ceil(this.wallheight / object.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let image = this.assets.sprites[object.type]\r\n        let texleft = Math.floor(object.starttexture * image.width)\r\n        let texright = Math.floor(object.endtexture * image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        let width = Math.max(1, object.end - object.start)\r\n        this.ctx.drawImage(image, texleft, 0, swidth, image.height, object.start, top, width, height)\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 3\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, objects: Array<Sprite>) {\r\n        this.renderbackground(player)\r\n        let rays = player.getrays(this.settings.width)\r\n        let drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.getdistance(player.position, colision.point) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            for (let object of objects) {\r\n                object.distance = DistanceCalc.getdistance(player.position, object.position)\r\n                if (object.distance < this.settings.drawingdistance && object.distance < walldistance) {\r\n                    if (object.distance < 0.25) object.distance = 0.25\r\n                    if (rays[r].angle > PI1_5) rays[r].angle -= PI2_0\r\n                    if (object.angle > PI1_5) object.angle -= PI2_0\r\n                    let diff = (rays[r].angle - object.angle) / (2 * Math.atan2(0.05, object.distance))\r\n                    if (Math.abs(diff) <= 1) {\r\n                        diff = Math.abs((diff - 1) * 0.5)\r\n                        if (object.start < 0) {\r\n                            object.start = r\r\n                            object.starttexture = diff\r\n                        }\r\n                        object.end = r\r\n                        object.endtexture = diff\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let object of objects) {\r\n            if (object.start >= 0) this.drawobject(object)\r\n            object.start = -1\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h, type)]\r\n            } else {\r\n                return [new Colision(h, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n            }\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v, type)]\r\n            } else {\r\n                return [new Colision(v, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n        else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n        else this.rotateright = true\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        } \r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts"],"sourceRoot":""}