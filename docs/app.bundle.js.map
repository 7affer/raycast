{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap cd9137cdbb8ab7c638a7","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/helpers/mathconst.ts","webpack:///./src/scripts/helpers/distancecalc.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/renders/backgroundrenderer.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/sprites/spritesfactory.ts","webpack:///./src/scripts/sprites/sprite.ts","webpack:///./src/scripts/sprites/zombie.ts","webpack:///./src/scripts/player.ts","webpack:///./src/scripts/sounds/mixer.ts","webpack:///./src/scripts/helpers/quicksort.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","assetloader_1","scene_1","controls_1","angle_1","map_1","player_1","fps","document","getElementById","width","window","innerWidth","gamesettins","height","Math","floor","height2","fov","PI","drawingdistance","floorcolor1","floorcolor2","wallheight","assetloader","AssetLoader","loadall","prog","innerHTML","ceil","render","now","Date","delta","lastrender","player","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","innerText","toString","style","display","canvas","ctx","getContext","Map","Controls","Player","size","Angle","Scene","bindevents","initonmap","this","wallssrcs","spritessrcs","zspritessrcs","skylinesrcs","soundssrcs","sprites","Array","zsprites","walls","skyline","sounds","prototype","toload","length","loadimages","arrsrc","arrobj","onprogress","callback","_this","i","push","Image","onload","src","loadaudio","Audio","oncanplaythrough","mathconst_1","distancecalc_1","ray_1","backgroundrenderer_1","quicksort_1","settings","assets","skipobjectdetectionrays","backgroundrenderer","BackgroundRenderer","renderwall","row","distance","image","textureposition","top","texleft","shadowdistance","drawImage","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","globalAlpha","min","stroke","drawwall","left","wall","modx","x","mody","y","abs","type","drawfloor","bottom","useback","newbottom","filterobjectsinrange","objectsinrange","DistanceCalc","mdistance","getobjectstodraw","rayangle","nearestwalldistance","objecttodraw","_i","sprites_1","object","sprite_player_angle","atan2","anglediff","PI2_0","diff","anglewidth","starttexture","endtexture","facing","angle","Sort","quickSort","a","b","rays","getrays","r","drawfloorray","walldistance","cos","colisions","Ray","cast","colisions_1","colision","_a","objectsinrange_1","PI0_5","PI1_0","PI1_5","PI4_0","sqrt","colision_1","origin","nexth","nextv","maxdistance","h","nearesty","v","nearestx","distanceh","distancev","getvalue","dy","Colision","concat","dx","nexty","ctg","nextx","tg","loader","facingangle","sourceleft","sourcewidth","fillRect","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","shoot","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageY","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","mozRequestPointerLock","canvaselement","pointerLockElement","mozPointerLockElement","removeEventListener","normalizeangle","sin","spritesfactory_1","randparam","Uint8Array","randomize","spritesfactory","SpritesFactory","createsprite","SpriteType","Static","Zombie","setvalue","value","pos","random","sprite_1","zombie_1","mapsize","Sprite","maxheight","texright","swidth","max","mixer_1","guncooldown","mixer","Mixer","columns","step","time","getTime","playsound","movement","correctposition","newposition","moveforward","position","movebackward","newfacing","$loader","maxchannels","audiochannels","Sound","audioel","finish","index","audio","play","arr","right","compare","pivot","partitionIndex","partition","swap","j","temp"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(17);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetloader_1 = __webpack_require__(2);\r\n\tvar scene_1 = __webpack_require__(3);\r\n\tvar controls_1 = __webpack_require__(9);\r\n\tvar angle_1 = __webpack_require__(10);\r\n\tvar map_1 = __webpack_require__(11);\r\n\tvar player_1 = __webpack_require__(15);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    height2: Math.floor(width / 1.8 / 2),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 20,\r\n\t    floorcolor1: '#3D2F2D',\r\n\t    floorcolor2: '#261311',\r\n\t    wallheight: Math.floor(width / 1.8) * 0.8\r\n\t};\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tassetloader.loadall(function (prog) { return document.getElementById('loading').innerHTML = \"Loading: \" + Math.ceil(prog * 100) + \"%\"; }, function () {\r\n\t    document.getElementById('loading-container').style.display = 'none';\r\n\t    var canvas = document.getElementById('gamecanvas');\r\n\t    var ctx = canvas.getContext('2d');\r\n\t    var map = new map_1.Map(150, 0.3, assetloader, gamesettins);\r\n\t    var controls = new controls_1.Controls();\r\n\t    var player = new player_1.Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new angle_1.Angle(0), assetloader);\r\n\t    var scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\t    canvas.width = gamesettins.width;\r\n\t    canvas.height = gamesettins.height;\r\n\t    canvas.style.width = gamesettins.width + \"px\";\r\n\t    canvas.style.height = gamesettins.height + \"px\";\r\n\t    controls.bindevents(document, canvas);\r\n\t    player.initonmap(map);\r\n\t    var lastrender = Date.now();\r\n\t    function render() {\r\n\t        var now = Date.now();\r\n\t        var delta = now - lastrender;\r\n\t        lastrender = now;\r\n\t        player.getcontrols(controls, map, delta);\r\n\t        scene.renderframe(delta, map, player, gamesettins.fov);\r\n\t        requestAnimationFrame(render);\r\n\t        fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t    }\r\n\t    render();\r\n\t});\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg',\r\n\t            './assets/walls/wall1b.jpg',\r\n\t            './assets/walls/wall2b.jpg',\r\n\t            './assets/walls/wall3b.jpg',\r\n\t            './assets/walls/wall4b.jpg',\r\n\t            './assets/walls/wall5b.jpg',\r\n\t            './assets/walls/wall1c.jpg',\r\n\t            './assets/walls/wall2c.jpg',\r\n\t            './assets/walls/wall3c.jpg',\r\n\t            './assets/walls/wall4c.jpg',\r\n\t            './assets/walls/wall5c.jpg'\r\n\t        ];\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.zspritessrcs = [\r\n\t            './assets/sprites/zombie1.png',\r\n\t            './assets/sprites/zombie2.png',\r\n\t            './assets/sprites/zombie3.png',\r\n\t            './assets/sprites/zombie4.png'\r\n\t        ];\r\n\t        this.skylinesrcs = [\r\n\t            './assets/sprites/skyline.jpg'\r\n\t        ];\r\n\t        this.soundssrcs = [\r\n\t            './assets/sounds/gun.mp3'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        this.zsprites = new Array();\r\n\t        this.walls = new Array();\r\n\t        this.skyline = new Array();\r\n\t        this.sounds = new Array();\r\n\t    }\r\n\t    AssetLoader.prototype.toload = function () {\r\n\t        return this.walls.length +\r\n\t            this.sprites.length +\r\n\t            this.zsprites.length +\r\n\t            this.skyline.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadimages = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        var _this = this;\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Image());\r\n\t            arrobj[i].onload = function () {\r\n\t                onprogress(++_this.loaded / _this.toload());\r\n\t                if (_this.loaded >= _this.toload())\r\n\t                    callback();\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadaudio = function (arrsrc, arrobj, onprogress, callback) {\r\n\t        for (var i in arrsrc) {\r\n\t            arrobj.push(new Audio());\r\n\t            arrobj[i].oncanplaythrough = function () {\r\n\t                //onprogress(++this.loaded / this.toload())\r\n\t                //if (this.loaded >= this.toload()) callback()\r\n\t            };\r\n\t            arrobj[i].src = arrsrc[i];\r\n\t        }\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (onprogress, callback) {\r\n\t        this.loadimages(this.wallssrcs, this.walls, onprogress, callback);\r\n\t        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback);\r\n\t        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback);\r\n\t        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback);\r\n\t        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback);\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar ray_1 = __webpack_require__(6);\r\n\tvar backgroundrenderer_1 = __webpack_require__(8);\r\n\tvar quicksort_1 = __webpack_require__(19);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.skipobjectdetectionrays = 4;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.backgroundrenderer = new backgroundrenderer_1.BackgroundRenderer(assets, settings);\r\n\t    }\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var shadowdistance = this.settings.drawingdistance * 0.7;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.x - Math.floor(wall.x);\r\n\t        var mody = wall.y - Math.floor(wall.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        if (distance < 3) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t        }\r\n\t        else if (distance < 8) {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition);\r\n\t        }\r\n\t        else {\r\n\t            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.settings.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 3;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.stroke();\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.filterobjectsinrange = function (player, sprites) {\r\n\t        var objectsinrange = new Array();\r\n\t        for (var i = 0; i < sprites.length; i++) {\r\n\t            if (distancecalc_1.DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n\t                objectsinrange.push(sprites[i]);\r\n\t            }\r\n\t        }\r\n\t        return objectsinrange;\r\n\t    };\r\n\t    Scene.prototype.getobjectstodraw = function (player, sprites, rayangle, left, nearestwalldistance) {\r\n\t        var objecttodraw = new Array();\r\n\t        for (var _i = 0, sprites_1 = sprites; _i < sprites_1.length; _i++) {\r\n\t            var object = sprites_1[_i];\r\n\t            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x);\r\n\t            var anglediff = rayangle - sprite_player_angle;\r\n\t            if (anglediff < -Math.PI)\r\n\t                anglediff += mathconst_1.PI2_0;\r\n\t            if (anglediff > Math.PI)\r\n\t                anglediff -= mathconst_1.PI2_0;\r\n\t            if (anglediff < this.settings.fov) {\r\n\t                object.distance = distancecalc_1.DistanceCalc.distance(player, object);\r\n\t                if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n\t                    if (object.distance < 0.20)\r\n\t                        object.distance = 0.20;\r\n\t                    var diff = anglediff / Math.atan2(object.anglewidth, object.distance);\r\n\t                    if (Math.abs(diff) <= 1) {\r\n\t                        diff = Math.abs((diff - 1));\r\n\t                        if (object.left < 0) {\r\n\t                            object.left = left;\r\n\t                            object.starttexture = diff;\r\n\t                        }\r\n\t                        object.width += this.skipobjectdetectionrays;\r\n\t                        object.endtexture = diff;\r\n\t                        objecttodraw.push(object);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return objecttodraw;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, fov) {\r\n\t        this.backgroundrenderer.render(this.ctx, player.facing.angle, this.settings.fov);\r\n\t        var objectsinrange = this.filterobjectsinrange(player, map.sprites);\r\n\t        quicksort_1.Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, function (a, b) { return a.distance > b.distance; });\r\n\t        var rays = player.getrays(this.settings.width, this.settings.fov);\r\n\t        var drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.distance(player, colision) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            if (r % this.skipobjectdetectionrays == 0) {\r\n\t                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, objectsinrange_1 = objectsinrange; _a < objectsinrange_1.length; _a++) {\r\n\t            var object = objectsinrange_1[_a];\r\n\t            if (object.left >= 0)\r\n\t                object.render(this.ctx);\r\n\t            object.left = -1;\r\n\t            object.width = 0;\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\texports.PI4_0 = 4 * Math.PI;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.distance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    DistanceCalc.mdistance = function (a, b) {\r\n\t        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar distancecalc_1 = __webpack_require__(5);\r\n\tvar colision_1 = __webpack_require__(7);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        var distanceh = distancecalc_1.DistanceCalc.mdistance(origin, h);\r\n\t        var distancev = distancecalc_1.DistanceCalc.mdistance(origin, v);\r\n\t        if (distanceh < distancev) {\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h.x, h.y, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v.x, v.y, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y\r\n\t        };\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(x, y, type) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar BackgroundRenderer = (function () {\r\n\t    function BackgroundRenderer(loader, settings) {\r\n\t        this.loader = loader;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    BackgroundRenderer.prototype.render = function (ctx, facingangle, fov) {\r\n\t        var image = this.loader.skyline[0];\r\n\t        var sourceleft = Math.floor((image.width * (mathconst_1.PI2_0 - facingangle)) / mathconst_1.PI4_0);\r\n\t        var sourcewidth = Math.floor(image.width * 0.5 * (fov / mathconst_1.PI2_0));\r\n\t        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2);\r\n\t        ctx.fillStyle = this.settings.floorcolor1;\r\n\t        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    return BackgroundRenderer;\r\n\t}());\r\n\texports.BackgroundRenderer = BackgroundRenderer;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.shoot = false;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 17)\r\n\t            this.shoot = true;\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e, canvas) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageY < canvas.height * 0.5) {\r\n\t            this.shoot = true;\r\n\t        }\r\n\t        else {\r\n\t            if (t.pageX < window.innerWidth * 0.333)\r\n\t                this.rotateleft = true;\r\n\t            else if (t.pageX < window.innerWidth * 0.666)\r\n\t                this.forward = true;\r\n\t            else\r\n\t                this.rotateright = true;\r\n\t        }\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        doc.addEventListener('mozpointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e, canvas); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t            _this.shoot = true;\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement || document.mozPointerLockElement === canvas) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar spritesfactory_1 = __webpack_require__(12);\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam, loader, settings) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t        var spritesfactory = new spritesfactory_1.SpritesFactory(loader, size, settings);\r\n\t        this.sprites = new Array();\r\n\t        for (var i = 0; i < size * 10; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Static));\r\n\t        }\r\n\t        for (var i = 0; i < size * 30; i++) {\r\n\t            this.sprites.push(spritesfactory.createsprite(spritesfactory_1.SpriteType.Zombie));\r\n\t        }\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(13);\r\n\tvar zombie_1 = __webpack_require__(14);\r\n\tvar SpritesFactory = (function () {\r\n\t    function SpritesFactory(assetloader, mapsize, settings) {\r\n\t        this.assetloader = assetloader;\r\n\t        this.mapsize = mapsize;\r\n\t        this.settings = settings;\r\n\t    }\r\n\t    SpritesFactory.prototype.createsprite = function (type) {\r\n\t        switch (type) {\r\n\t            case SpriteType.Static: return new sprite_1.Sprite(Math.random() * this.mapsize, Math.random() * this.mapsize, this.assetloader.sprites[Math.floor(Math.random() * this.assetloader.sprites.length)], this.settings);\r\n\t            case SpriteType.Zombie: return new zombie_1.Zombie(Math.random() * this.mapsize, Math.random() * this.mapsize, this.assetloader.zsprites[Math.floor(Math.random() * this.assetloader.zsprites.length)], this.settings);\r\n\t        }\r\n\t    };\r\n\t    return SpritesFactory;\r\n\t}());\r\n\texports.SpritesFactory = SpritesFactory;\r\n\tvar SpriteType;\r\n\t(function (SpriteType) {\r\n\t    SpriteType[SpriteType[\"Static\"] = 1] = \"Static\";\r\n\t    SpriteType[SpriteType[\"Zombie\"] = 2] = \"Zombie\";\r\n\t})(SpriteType || (SpriteType = {}));\r\n\texports.SpriteType = SpriteType;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.2;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.4);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Zombie = (function () {\r\n\t    function Zombie(x, y, image, settings) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.image = image;\r\n\t        this.left = -1;\r\n\t        this.width = 0;\r\n\t        this.anglewidth = 0.35;\r\n\t        if (settings != null) {\r\n\t            this.height2 = Math.floor(settings.height / 2);\r\n\t            this.maxheight = settings.wallheight;\r\n\t        }\r\n\t    }\r\n\t    Zombie.prototype.render = function (ctx) {\r\n\t        var wallheight = Math.ceil(this.maxheight / this.distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var texleft = Math.floor(this.starttexture * this.image.width);\r\n\t        var texright = Math.floor(this.endtexture * this.image.width);\r\n\t        var height = Math.floor(wallheight * 0.8);\r\n\t        var swidth = Math.max(1, texright - texleft);\r\n\t        var top = bottom - height;\r\n\t        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height);\r\n\t    };\r\n\t    return Zombie;\r\n\t}());\r\n\texports.Zombie = Zombie;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mixer_1 = __webpack_require__(16);\r\n\tvar mathconst_1 = __webpack_require__(4);\r\n\tvar angle_1 = __webpack_require__(10);\r\n\tvar Player = (function () {\r\n\t    function Player(x, y, facing, loader) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.facing = facing;\r\n\t        this.loader = loader;\r\n\t        this.guncooldown = 0;\r\n\t        if (loader != null)\r\n\t            this.mixer = new mixer_1.Mixer(loader);\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns, fov) {\r\n\t        var step = fov / columns;\r\n\t        var angle = this.facing.angle + fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.shoot = function () {\r\n\t        var time = (new Date()).getTime();\r\n\t        if (this.guncooldown < time) {\r\n\t            this.mixer.playsound(0);\r\n\t            this.guncooldown = time + 750;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, newposition) {\r\n\t        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n\t            newposition.x = this.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n\t            newposition.y = this.y;\r\n\t        }\r\n\t        this.x = newposition.x;\r\n\t        this.y = newposition.y;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        this.correctposition(map, {\r\n\t            x: this.x - this.facing.cos * delta / 500,\r\n\t            y: this.y - this.facing.sin * delta / 500\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        this.correctposition(map, {\r\n\t            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        });\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n\t            this.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        if (controls.shoot) {\r\n\t            this.shoot();\r\n\t            controls.shoot = false;\r\n\t        }\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Mixer = (function () {\r\n\t    function Mixer($loader) {\r\n\t        this.maxchannels = 32;\r\n\t        this.loader = $loader;\r\n\t        this.audiochannels = new Array();\r\n\t        for (var a = 0; a < this.maxchannels; a++) {\r\n\t            this.audiochannels[a] = new Sound();\r\n\t            this.audiochannels[a].audioel = new Audio();\r\n\t            this.audiochannels[a].finish = -1;\r\n\t        }\r\n\t    }\r\n\t    Mixer.prototype.playsound = function (index) {\r\n\t        var audio = new Audio(this.loader.soundssrcs[index]);\r\n\t        audio.play();\r\n\t        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n\t        //     let time = new Date()\r\n\t        //     let now = time.getTime()\r\n\t        //     console.log(this.loader.sounds[index].duration)\r\n\t        //     if (this.audiochannels[a].finish < now) {\r\n\t        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n\t        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n\t        //         this.audiochannels[a].audioel.play()\r\n\t        //         break\r\n\t        //     }\r\n\t        // }\r\n\t    };\r\n\t    return Mixer;\r\n\t}());\r\n\texports.Mixer = Mixer;\r\n\tvar Sound = (function () {\r\n\t    function Sound() {\r\n\t    }\r\n\t    return Sound;\r\n\t}());\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 18 */,\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sort = (function () {\r\n\t    function Sort() {\r\n\t    }\r\n\t    Sort.quickSort = function (arr, left, right, compare) {\r\n\t        var len = arr.length, pivot, partitionIndex;\r\n\t        if (left < right) {\r\n\t            pivot = right;\r\n\t            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\t            //sort left and right\r\n\t            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n\t            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n\t        }\r\n\t        return arr;\r\n\t    };\r\n\t    Sort.partition = function (arr, pivot, left, right, compare) {\r\n\t        var partitionIndex = left;\r\n\t        for (var i = left; i < right; i++) {\r\n\t            if (compare(arr[i], arr[pivot])) {\r\n\t                this.swap(arr, i, partitionIndex);\r\n\t                partitionIndex++;\r\n\t            }\r\n\t        }\r\n\t        this.swap(arr, right, partitionIndex);\r\n\t        return partitionIndex;\r\n\t    };\r\n\t    Sort.swap = function (arr, i, j) {\r\n\t        var temp = arr[i];\r\n\t        arr[i] = arr[j];\r\n\t        arr[j] = temp;\r\n\t    };\r\n\t    return Sort;\r\n\t}());\r\n\texports.Sort = Sort;\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd9137cdbb8ab7c638a7","import { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    height2: Math.floor(width / 1.8 / 2),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 20,\r\n    floorcolor1: '#3D2F2D',\r\n    floorcolor2: '#261311',\r\n    wallheight: Math.floor(width / 1.8) * 0.8\r\n}\r\n\r\nlet assetloader = new AssetLoader()\r\n\r\nassetloader.loadall(\r\n    (prog) => document.getElementById('loading').innerHTML = `Loading: ${Math.ceil(prog * 100)}%` ,\r\n    () => { \r\n        document.getElementById('loading-container').style.display = 'none'; \r\n        let canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let map = new Map(150, 0.3, assetloader, gamesettins)\r\n        let controls = new Controls()\r\n        let player = new Player(map.size / 2 + 0.25, map.size / 2 + 0.25, new Angle(0), assetloader)\r\n        let scene = new Scene(ctx, gamesettins, assetloader)\r\n\r\n        canvas.width = gamesettins.width\r\n        canvas.height = gamesettins.height\r\n        canvas.style.width = `${gamesettins.width}px`\r\n        canvas.style.height = `${gamesettins.height}px`\r\n        controls.bindevents(document, canvas)\r\n        player.initonmap(map)\r\n\r\n\r\n        let lastrender: number = Date.now()\r\n        function render() {\r\n            let now = Date.now()\r\n            let delta = now - lastrender\r\n            lastrender = now\r\n            player.getcontrols(controls, map, delta)\r\n            scene.renderframe(delta, map, player, gamesettins.fov)\r\n            requestAnimationFrame(render)\r\n            fps.innerText = (Math.floor(1000 / delta)).toString()\r\n        }\r\n        render() \r\n    }\r\n)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg',\r\n            './assets/walls/wall1b.jpg',\r\n            './assets/walls/wall2b.jpg',\r\n            './assets/walls/wall3b.jpg',\r\n            './assets/walls/wall4b.jpg',\r\n            './assets/walls/wall5b.jpg',\r\n            './assets/walls/wall1c.jpg',\r\n            './assets/walls/wall2c.jpg',\r\n            './assets/walls/wall3c.jpg',\r\n            './assets/walls/wall4c.jpg',\r\n            './assets/walls/wall5c.jpg'\r\n        ]\r\n        \r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n\r\n        this.zspritessrcs = [\r\n            './assets/sprites/zombie1.png',\r\n            './assets/sprites/zombie2.png',\r\n            './assets/sprites/zombie3.png',\r\n            './assets/sprites/zombie4.png'\r\n        ]\r\n\r\n        this.skylinesrcs = [\r\n            './assets/sprites/skyline.jpg'\r\n        ]\r\n\r\n        this.soundssrcs = [\r\n            './assets/sounds/gun.mp3'\r\n        ]\r\n\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        this.zsprites = new Array<HTMLImageElement>()\r\n        this.walls = new Array<HTMLImageElement>()\r\n        this.skyline = new Array<HTMLImageElement>()\r\n        this.sounds = new Array<HTMLAudioElement>()\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n    private zspritessrcs: Array<string>\r\n    public zsprites: Array<HTMLImageElement>\r\n    private skylinesrcs: Array<string>\r\n    public skyline: Array<HTMLImageElement>\r\n    public soundssrcs: Array<string>\r\n    public sounds: Array<HTMLAudioElement>\r\n\r\n    private toload() {\r\n        return this.walls.length +\r\n            this.sprites.length +\r\n            this.zsprites.length +\r\n            this.skyline.length\r\n    }\r\n\r\n    private loadimages(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLImageElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Image())\r\n            arrobj[i].onload = () => {\r\n                onprogress(++this.loaded / this.toload())\r\n                if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    private loadaudio(\r\n        arrsrc: Array<string>,\r\n        arrobj: Array<HTMLAudioElement>,\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        for (let i in arrsrc) {\r\n            arrobj.push(new Audio())\r\n            arrobj[i].oncanplaythrough = () => {\r\n                //onprogress(++this.loaded / this.toload())\r\n                //if (this.loaded >= this.toload()) callback()\r\n            }\r\n            arrobj[i].src = arrsrc[i]\r\n        }\r\n    }\r\n\r\n    public loadall(\r\n        onprogress: (prog: number) => void,\r\n        callback: () => void\r\n    ) {\r\n        this.loadimages(this.wallssrcs, this.walls, onprogress, callback)\r\n        this.loadimages(this.spritessrcs, this.sprites, onprogress, callback)\r\n        this.loadimages(this.zspritessrcs, this.zsprites, onprogress, callback)\r\n        this.loadimages(this.skylinesrcs, this.skyline, onprogress, callback)\r\n        this.loadaudio(this.soundssrcs, this.sounds, onprogress, callback)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { PI0_5, PI1_5, PI2_0, PI4_0 } from './helpers/mathconst';\r\nimport { DistanceCalc } from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { BackgroundRenderer } from \"./renders/backgroundrenderer\";\r\nimport { Sort } from \"./helpers/quicksort\";\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private backgroundrenderer: BackgroundRenderer\r\n    private skipobjectdetectionrays: number = 4\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.backgroundrenderer = new BackgroundRenderer(assets, settings)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let shadowdistance = this.settings.drawingdistance * 0.7\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = Math.min(distance, shadowdistance) / shadowdistance\r\n            this.ctx.stroke()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.x - Math.floor(wall.x)\r\n        let mody = wall.y - Math.floor(wall.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        if (distance < 3) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n        } else if (distance < 8) {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 5], textureposition)\r\n        } else {\r\n            this.renderwall(left, distance, this.assets.walls[wall.type - 1 + 10], textureposition)\r\n        }\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.settings.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 3\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.stroke()\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    private filterobjectsinrange(player: Player, sprites: Array<ISprite>) {\r\n        let objectsinrange = new Array<ISprite>()\r\n        for (let i = 0; i < sprites.length; i++) {\r\n            if (DistanceCalc.mdistance(player, sprites[i]) < this.settings.drawingdistance) {\r\n                objectsinrange.push(sprites[i])\r\n            }\r\n        }\r\n        return objectsinrange\r\n    }\r\n\r\n    private getobjectstodraw(player: Player, sprites: Array<ISprite>, rayangle: number, left: number, nearestwalldistance: number) {\r\n        let objecttodraw = new Array<ISprite>()\r\n        for (let object of sprites) {\r\n            var sprite_player_angle = Math.atan2(object.y - player.y, object.x - player.x)\r\n\r\n            let anglediff = rayangle - sprite_player_angle\r\n            if(anglediff < -Math.PI) anglediff += PI2_0 \r\n            if(anglediff > Math.PI) anglediff -= PI2_0\r\n\r\n            if(anglediff < this.settings.fov){\r\n                object.distance = DistanceCalc.distance(player, object)\r\n                if (object.distance < this.settings.drawingdistance && object.distance < nearestwalldistance) {\r\n                    if (object.distance < 0.20) object.distance = 0.20\r\n                    let diff = anglediff / Math.atan2(object.anglewidth, object.distance)\r\n                    if (Math.abs(diff) <= 1) {\r\n                        diff = Math.abs((diff - 1))\r\n                        if (object.left < 0) {\r\n                            object.left = left\r\n                            object.starttexture = diff\r\n                        }\r\n                        object.width += this.skipobjectdetectionrays\r\n                        object.endtexture = diff\r\n                        objecttodraw.push(object)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return objecttodraw\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, fov: number) {\r\n        \r\n        this.backgroundrenderer.render(this.ctx, player.facing.angle, this.settings.fov)\r\n        let objectsinrange = this.filterobjectsinrange(player, map.sprites)\r\n        Sort.quickSort(objectsinrange, 0, objectsinrange.length - 1, (a,b) => a.distance > b.distance)\r\n        let rays = player.getrays(this.settings.width, this.settings.fov)\r\n        let drawfloor = (Math.floor(player.x) + Math.floor(player.y)) % 2 == 0\r\n\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player, null, null, rays[r], this.settings.drawingdistance)\r\n\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.distance(player, colision) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n\r\n            if(r % this.skipobjectdetectionrays == 0) {\r\n                this.getobjectstodraw(player, objectsinrange, rays[r].angle, r, walldistance)\r\n            }\r\n        }\r\n\r\n        for (let object of objectsinrange) {\r\n            if (object.left >= 0) object.render(this.ctx)\r\n            object.left = -1\r\n            object.width = 0\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\r\nexport const PI4_0: number = 4 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/mathconst.ts","import { IPoint } from '../ipoint';\r\nexport class DistanceCalc {\r\n    public static distance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n\r\n    public static mdistance(a:IPoint, b:IPoint) {\r\n        return Math.abs(a.x - b.x) + Math.abs(a.y - b.y)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/distancecalc.ts","import {DistanceCalc} from './helpers/distancecalc';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './helpers/mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IPoint,\r\n        nextv: IPoint,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n        let distanceh = DistanceCalc.mdistance(origin, h)\r\n        let distancev = DistanceCalc.mdistance(origin, v)\r\n\r\n        if (distanceh < distancev) {\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h.x, h.y, type)]\r\n            } else {\r\n                return [new Colision(h.x, h.y, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - distanceh))\r\n            }\r\n        } else {\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v.x, v.y, type)]\r\n            } else {\r\n                return [new Colision(v.x, v.y, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - distancev))\r\n            }\r\n        }\r\n    }\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IPoint {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IPoint {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision implements IPoint {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { PI2_0, PI4_0 } from '../helpers/mathconst';\r\nimport { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { Angle } from '../angle';\r\n\r\nexport class BackgroundRenderer {\r\n\r\n    public constructor(\r\n        private loader: AssetLoader,\r\n        private settings: ISettings\r\n    ) {\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D, facingangle: number, fov: number) {\r\n        let image = this.loader.skyline[0]\r\n        let sourceleft = Math.floor((image.width * (PI2_0 - facingangle)) / PI4_0)\r\n        let sourcewidth = Math.floor(image.width * 0.5 * (fov / PI2_0))\r\n        ctx.drawImage(image, sourceleft, 0, sourcewidth, image.height, 0, 0, this.settings.width, this.settings.height2)\r\n        ctx.fillStyle = this.settings.floorcolor1\r\n        ctx.fillRect(0, this.settings.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/renders/backgroundrenderer.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n    public shoot: boolean = false\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 17) this.shoot = true\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent, canvas: HTMLCanvasElement) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageY < canvas.height * 0.5) {\r\n            this.shoot = true\r\n        } else {\r\n            if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n            else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n            else this.rotateright = true\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLCanvasElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        doc.addEventListener('mozpointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e, canvas) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock || (<any>canvas).mozRequestPointerLock\r\n            canvas.requestPointerLock()\r\n            this.shoot = true\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement || (<any>document).mozPointerLockElement === canvas) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './helpers/mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","import { ISettings } from './isettings';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISprite } from \"./sprites/isprite\";\r\nimport { SpritesFactory, SpriteType } from \"./sprites/spritesfactory\"\r\n\r\nexport class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n    public sprites: Array<ISprite>\r\n\r\n    constructor(size: number, randparam: number, loader: AssetLoader, settings: ISettings) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n        this.randomize(randparam)\r\n\r\n        let spritesfactory = new SpritesFactory(loader, size, settings)\r\n\r\n        this.sprites = new Array<ISprite>()\r\n        for (let i = 0; i < size * 10; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Static))\r\n        }\r\n        for (let i = 0; i < size * 30; i++) {\r\n            this.sprites.push(spritesfactory.createsprite(SpriteType.Zombie))\r\n        }\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                }\r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { ISettings } from '../isettings';\r\nimport { AssetLoader } from '../assetloader';\r\nimport { ISprite } from \"./isprite\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { Zombie } from \"./zombie\";\r\n\r\nexport { SpritesFactory, SpriteType }\r\n\r\nclass SpritesFactory {\r\n\r\n    public constructor(\r\n        private assetloader: AssetLoader,\r\n        private mapsize: number,\r\n        private settings: ISettings) {\r\n\r\n    }\r\n\r\n    public createsprite(type: SpriteType):ISprite {\r\n        switch (type) {\r\n            case SpriteType.Static: return new Sprite(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.assetloader.sprites[Math.floor(Math.random() * this.assetloader.sprites.length)],\r\n                this.settings\r\n            )\r\n            case SpriteType.Zombie: return new Zombie(\r\n                Math.random() * this.mapsize,\r\n                Math.random() * this.mapsize,\r\n                this.assetloader.zsprites[Math.floor(Math.random() * this.assetloader.zsprites.length)],\r\n                this.settings\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nenum SpriteType {\r\n    Static = 1,\r\n    Zombie\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/spritesfactory.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Sprite implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.2\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.4)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/sprite.ts","import { ISettings } from '../isettings';\r\nimport { Angle } from '../angle';\r\nimport { ISprite } from './isprite';\r\n\r\nexport class Zombie implements ISprite {\r\n\r\n    public left: number = -1\r\n    public width: number = 0\r\n    public anglewidth: number = 0.35\r\n    public starttexture: number\r\n    public endtexture: number\r\n    public distance: number\r\n    private height2: number\r\n    private maxheight: number\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public image: HTMLImageElement,\r\n        settings: ISettings\r\n    ) {\r\n        if (settings != null) {\r\n            this.height2 = Math.floor(settings.height / 2)\r\n            this.maxheight = settings.wallheight\r\n        }\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        let wallheight = Math.ceil(this.maxheight / this.distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let texleft = Math.floor(this.starttexture * this.image.width)\r\n        let texright = Math.floor(this.endtexture * this.image.width)\r\n        let height = Math.floor(wallheight * 0.8)\r\n        let swidth = Math.max(1, texright - texleft)\r\n        let top = bottom - height\r\n        ctx.drawImage(this.image, texleft, 0, swidth, this.image.height, this.left, top, this.width, height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprites/zombie.ts","import { AssetLoader } from './assetloader';\r\nimport { Mixer } from './sounds/mixer';\r\nimport { PI0_5 } from './helpers/mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player implements IPoint {\r\n\r\n    private mixer: Mixer\r\n    private guncooldown = 0\r\n\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public facing: Angle,\r\n        private loader: AssetLoader\r\n    ) {\r\n        if (loader != null) this.mixer = new Mixer(loader)\r\n    }\r\n\r\n    public getrays(columns: number, fov: number) {\r\n        var step = fov / columns\r\n        var angle = this.facing.angle + fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public shoot() {\r\n        let time = (new Date()).getTime()\r\n        if (this.guncooldown < time) {\r\n            this.mixer.playsound(0)\r\n            this.guncooldown = time + 750\r\n        }\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, newposition: IPoint) {\r\n        if (map.getvalue(Math.floor(newposition.x), Math.floor(this.y)) > 0) {\r\n            newposition.x = this.x\r\n        }\r\n        if (map.getvalue(Math.floor(this.x), Math.floor(newposition.y)) > 0) {\r\n            newposition.y = this.y\r\n        }\r\n        this.x = newposition.x\r\n        this.y = newposition.y\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        this.correctposition(map, {\r\n            x: this.x - this.facing.cos * delta / 500,\r\n            y: this.y - this.facing.sin * delta / 500\r\n        })\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        this.correctposition(map, {\r\n            x: this.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        })\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.x), Math.floor(this.y)) > 0) {\r\n            this.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        if (controls.shoot) {\r\n            this.shoot()\r\n            controls.shoot = false\r\n        }\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts","import { AssetLoader } from '../assetloader';\r\n\r\nexport class Mixer {\r\n    \r\n\tconstructor($loader: AssetLoader ) {\r\n\t\tthis.loader = $loader\r\n        this.audiochannels = new Array<Sound>()\r\n        for (let a = 0; a < this.maxchannels; a++) {\r\n            this.audiochannels[a] = new Sound()\r\n            this.audiochannels[a].audioel = new Audio();\r\n            this.audiochannels[a].finish = -1\r\n        }\r\n\t}\r\n    \r\n    private loader: AssetLoader\r\n    private maxchannels: number = 32\r\n    private audiochannels: Array<Sound>\r\n\r\n    public playsound(index: number) {\r\n        var audio = new Audio(this.loader.soundssrcs[index]);\r\n        audio.play();\r\n        // for (let a = 0; a < this.audiochannels.length; a++) {\r\n        //     let time = new Date()\r\n        //     let now = time.getTime()\r\n        //     console.log(this.loader.sounds[index].duration)\r\n        //     if (this.audiochannels[a].finish < now) {\r\n        //         this.audiochannels[a].finish = now + this.loader.sounds[index].duration * 1000\r\n        //         this.audiochannels[a].audioel.src = this.loader.sounds[index].src\r\n        //         this.audiochannels[a].audioel.play()\r\n        //         break\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\nclass Sound {\r\n    public finish: number\r\n    public audioel: HTMLAudioElement\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sounds/mixer.ts","import { IComparable } from \"./icomparable\";\r\n\r\nexport class Sort {\r\n\r\n    public static quickSort<T>(arr: Array<T>, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n        var len = arr.length,\r\n            pivot,\r\n            partitionIndex;\r\n\r\n        if (left < right) {\r\n            pivot = right;\r\n            partitionIndex = this.partition(arr, pivot, left, right, compare);\r\n\r\n            //sort left and right\r\n            this.quickSort(arr, left, partitionIndex - 1, compare);\r\n            this.quickSort(arr, partitionIndex + 1, right, compare);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    private static partition<T>(arr: Array<T>, pivot: number, left: number, right: number, compare: (a: T, b: T) => boolean) {\r\n\r\n        let partitionIndex = left;\r\n        for (var i = left; i < right; i++) {\r\n            if (compare(arr[i], arr[pivot])) {\r\n                this.swap(arr, i, partitionIndex);\r\n                partitionIndex++;\r\n            }\r\n        }\r\n        this.swap(arr, right, partitionIndex);\r\n        return partitionIndex;\r\n    }\r\n\r\n    private static swap<T>(arr: Array<T>, i: number, j: number) {\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/quicksort.ts"],"sourceRoot":""}