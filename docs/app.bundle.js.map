{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 2cebb667c2b79a5891e3","webpack:///./src/scripts/main.ts","webpack:///./src/scripts/sprite.ts","webpack:///./src/scripts/assetloader.ts","webpack:///./src/scripts/scene.ts","webpack:///./src/scripts/ray.ts","webpack:///./src/scripts/colision.ts","webpack:///./src/scripts/distancecalc.ts","webpack:///./src/scripts/controls.ts","webpack:///./src/scripts/angle.ts","webpack:///./src/scripts/mathconst.ts","webpack:///./src/scripts/map.ts","webpack:///./src/scripts/player.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","render","now","Date","delta","lastrender","objectsinrange","Array","i","sprites","length","Math","abs","player","position","x","gamesettins","drawingdistance","y","angle","angle_1","Angle","normalizeangle","atan2","push","getcontrols","controls","map","scene","renderframe","requestAnimationFrame","fps","innerText","floor","toString","sprite_1","assetloader_1","scene_1","controls_1","map_1","player_1","document","getElementById","width","window","innerWidth","height","fov","PI","floorcolor1","floorcolor2","canvas","ctx","getContext","Map","Player","size","Controls","assetloader","AssetLoader","Scene","Sprite","random","style","bindevents","initonmap","loadall","type","this","wallssrcs","walls","item","Image","spritessrcs","prototype","isloaded","callback","_this","onload","src","ray_1","distancecalc_1","settings","assets","height2","wallheight","renderbackground","grdceiling","createLinearGradient","addColorStop","fillStyle","fillRect","renderwall","row","distance","image","textureposition","ceil","top","texleft","drawImage","beginPath","moveTo","lineTo","lineWidth","strokeStyle","globalAlpha","stroke","closePath","drawwall","left","wall","modx","point","mody","drawobject","object","bottom","drawfloor","useback","newbottom","objects","rays","getrays","r","drawfloorray","walldistance","cos","facing","colisions","Ray","cast","_i","colisions_1","colision","DistanceCalc","getdistance","_a","objects_1","mdiff","diff","colision_1","nearesty","origin","nexty","dy","dx","ctg","manhattandistance","nearestx","nextx","tg","nexth","nextv","maxdistance","h","v","getvalue","Colision","concat","a","b","sqrt","rotateleft","rotateright","forward","backward","run","strafeleft","straferight","mouserotateleft","mouserotateright","mousemovefunction","e","mousemove","movementX","resetmouserotate","keydown","keyCode","shiftKey","touchstart","t","touches","touchend","pageX","preventDefault","stopPropagation","keyup","doc","addEventListener","lockChangeAlert","requestPointerLock","canvaselement","pointerLockElement","removeEventListener","mathconst_1","sin","PI2_0","PI0_5","PI1_0","PI1_5","randparam","Uint8Array","randomize","setvalue","value","pos","columns","step","movement","correctposition","moveforward","movebackward","newfacing"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/BA,EAAoB,GACpBI,EAAOD,QAAUH,EAAoB,KAKhC,SAASI,EAAQD,EAASH,GAE/B,YEND,SAAAW,KACI,GAAIC,GAAMC,KAAKD,MACXE,EAAQF,EAAMG,CAClBA,GAAaH,EAEbI,EAAiB,GAAIC,MACrB,KAAK,GAAIC,GAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAE5BG,KAAKC,IAAIC,EAAOC,SAASC,EAAIN,EAAQD,GAAGM,SAASC,GAAKC,EAAYC,iBAClEN,KAAKC,IAAIC,EAAOC,SAASI,EAAIT,EAAQD,GAAGM,SAASI,GAAKF,EAAYC,kBAElER,EAAQD,GAAGW,MAASC,EAAAC,MAAMC,eAAeX,KAAKY,MAC1Cd,EAAQD,GAAGM,SAASI,EAAIL,EAAOC,SAASI,EACxCT,EAAQD,GAAGM,SAASC,EAAIF,EAAOC,SAASC,IAE5CT,EAAekB,KAAKf,EAAQD,IAIpCK,GAAOY,YAAYC,EAAUC,EAAKvB,GAClCwB,EAAMC,YAAYzB,EAAOuB,EAAKd,EAAQP,GACtCwB,sBAAsB7B,GACtB8B,EAAIC,UAAarB,KAAKsB,MAAM,IAAO7B,GAAQ8B,WA1C/C,IAAK,GA5BLC,GAAA7C,EAAuB,GACvB8C,EAAA9C,EAA4B,GAC5B+C,EAAA/C,EAAsB,GACtBgD,EAAAhD,EAAyB,GACzB8B,EAAA9B,EAAsB,GACtBiD,EAAAjD,EAAoB,IACpBkD,EAAAlD,EAAuB,IAGnByC,EAAMU,SAASC,eAAe,OAC9BC,EAAQC,OAAOC,WAAa,KAAOD,OAAOC,WAAa,KACvD7B,GACA2B,MAAOA,EACPG,OAAQnC,KAAKsB,MAAMU,EAAQ,KAC3BI,IAAK,GAAKpC,KAAKqC,GAAK,IACpB/B,gBAAiB,GACjBgC,YAAa,UACbC,YAAa,WAGbC,EAA4BV,SAASC,eAAe,cACpDU,EAAMD,EAAOE,WAAW,MACxB1B,EAAM,GAAIY,GAAAe,IAAI,IAAK,IACnBzC,EAAS,GAAI2B,GAAAe,QAASxC,EAAGY,EAAI6B,KAAO,EAAI,IAAMtC,EAAGS,EAAI6B,KAAO,EAAI,KAAQ,GAAIpC,GAAAC,MAAM,GAAIL,EAAY+B,KAClGrB,EAAW,GAAIY,GAAAmB,SACfC,EAAc,GAAItB,GAAAuB,YAClB/B,EAAQ,GAAIS,GAAAuB,MAAMR,EAAKpC,EAAa0C,GACpCjD,EAAU,GAAIF,OACTC,EAAI,EAAGA,EAAe,GAAXmB,EAAI6B,KAAWhD,IAC/BC,EAAQe,KACJ,GAAIW,GAAA0B,QACI9C,EAAGJ,KAAKmD,SAAWnC,EAAI6B,KACvBtC,EAAGP,KAAKmD,SAAWnC,EAAI6B,MAE3B7C,KAAKsB,MAAsB,EAAhBtB,KAAKmD,WAK5BX,GAAOR,MAAQ3B,EAAY2B,MAC3BQ,EAAOL,OAAS9B,EAAY8B,OAC5BK,EAAOY,MAAMpB,MAAW3B,EAAY2B,MAAK,KACzCQ,EAAOY,MAAMjB,OAAY9B,EAAY8B,OAAM,KAC3CpB,EAASsC,WAAWvB,SAAUU,GAC9BtC,EAAOoD,UAAUtC,EAEjB,IAAIrB,GAAiB,GAAIC,OACrBF,EAAqBF,KAAKD,KAyB9BwD,GAAYQ,QAAQjE,IF4Cd,SAASP,EAAQD,GAEtB,YGpHD,IAAAoE,GAAA,WAII,QAAAA,GACW/C,EACAqD,GADAC,KAAAtD,WACAsD,KAAAD,OAGf,MAAAN,KATapE,GAAAoE,OAAMA,GHiIb,SAASnE,EAAQD,GAEtB,YIrID,IAAAkE,GAAA,WAEI,QAAAA,KAuBQS,KAAAxE,OAAS,EAtBbwE,KAAKC,WACD,2BACA,2BACA,2BACA,2BACA,4BAEJD,KAAKE,MAAQ,GAAI/D,MACjB,KAAK,GAAIgE,KAAQH,MAAKC,UAAWD,KAAKE,MAAM9C,KAAK,GAAIgD,OAGrDJ,MAAKK,aACD,+BACA,+BACA,+BACA,+BACA,gCAEJL,KAAK3D,QAAU,GAAIF,MACnB,KAAK,GAAIgE,KAAQH,MAAKK,YAAaL,KAAK3D,QAAQe,KAAK,GAAIgD,QAgCjE,MAvBYb,GAAAe,UAAAC,SAAR,WACI,MAAOP,MAAKxE,QACRwE,KAAKE,MAAM5D,OACX0D,KAAK3D,QAAQC,QAGdiD,EAAAe,UAAAR,QAAP,SAAeU,GAAf,GAAAC,GAAAT,IACI,KAAK,GAAI5D,KAAK4D,MAAKC,UACfD,KAAKE,MAAM9D,GAAGsE,OAAS,WACnBD,EAAKjF,QAAU,EACXiF,EAAKF,YAAYC,KAEzBR,KAAKE,MAAM9D,GAAGuE,IAAMX,KAAKC,UAAU7D,EAGvC,KAAK,GAAIA,KAAK4D,MAAKK,YACfL,KAAK3D,QAAQD,GAAGsE,OAAS,WACrBD,EAAKjF,QAAU,EACXiF,EAAKF,YAAYC,KAEzBR,KAAK3D,QAAQD,GAAGuE,IAAMX,KAAKK,YAAYjE,IAGnDmD,IAtDalE,GAAAkE,YAAWA,GJ6LlB,SAASjE,EAAQD,EAASH,GAE/B,YKtLD,IAAA0F,GAAA1F,EAAoB,GACpB2F,EAAA3F,EAA6B,GAE7BsE,EAAA,WAMI,QAAAA,GACYR,EACA8B,EACAC,GAFAf,KAAAhB,MACAgB,KAAAc,WACAd,KAAAe,SAERf,KAAK/D,WAAaF,KAAKD,MACvBkE,KAAKgB,QAAUzE,KAAKsB,MAAMiD,EAASpC,OAAS,GAC5CsB,KAAKiB,WAAa1E,KAAKsB,MAAwB,GAAlBiD,EAASpC,QAuG9C,MApGYc,GAAAc,UAAAY,iBAAR,WACI,GAAIC,GAAanB,KAAKhB,IAAIoC,qBAAqB,EAAG,EAAG,EAAGpB,KAAKgB,QAC7DG,GAAWE,aAAa,EAAG,WAC3BF,EAAWE,aAAa,EAAG,WAC3BrB,KAAKhB,IAAIsC,UAAYH,EACrBnB,KAAKhB,IAAIuC,SAAS,EAAG,EAAGvB,KAAKc,SAASvC,MAAOyB,KAAKgB,SAClDhB,KAAKhB,IAAIsC,UAAYtB,KAAKc,SAASjC,YACnCmB,KAAKhB,IAAIuC,SAAS,EAAGvB,KAAKgB,QAAShB,KAAKc,SAASvC,MAAOyB,KAAKc,SAASpC,SAGlEc,EAAAc,UAAAkB,WAAR,SACIC,EACAC,EACAC,EACAC,GAEA,GAAIlD,GAASnC,KAAKsF,KAAK7B,KAAKiB,WAAaS,GACrCI,EAAMvF,KAAKsB,MAAMmC,KAAKgB,QAAUtC,EAAS,GACzCqD,EAAUxF,KAAKsB,MAAM+D,EAAkBD,EAAMpD,MACjDyB,MAAKhB,IAAIgD,UAAUL,EAAOI,EAAS,EAAG,EAAGJ,EAAMjD,OAAQ+C,EAAKK,EAAK,EAAGpD,GAChE+C,EAAM,GAAK,IACXzB,KAAKhB,IAAIiD,YACTjC,KAAKhB,IAAIkD,OAAOT,EAAKK,GACrB9B,KAAKhB,IAAImD,OAAOV,EAAKzB,KAAKc,SAASpC,OAASoD,GAC5C9B,KAAKhB,IAAIoD,UAAY,EACrBpC,KAAKhB,IAAIqD,YAAc,UACvBrC,KAAKhB,IAAIsC,UAAY,UACrBtB,KAAKhB,IAAIsD,YAAeZ,EAAW1B,KAAKc,SAASjE,gBAAmB,GACpEmD,KAAKhB,IAAIuD,SACTvC,KAAKhB,IAAIwD,YACTxC,KAAKhB,IAAIsD,YAAc,IAIvB9C,EAAAc,UAAAmC,SAAR,SAAiBC,EAAchB,EAAkBiB,EAAgBlG,GAC7D,GAAImG,GAAOD,EAAKE,MAAMlG,EAAIJ,KAAKsB,MAAM8E,EAAKE,MAAMlG,GAC5CmG,EAAOH,EAAKE,MAAM/F,EAAIP,KAAKsB,MAAM8E,EAAKE,MAAM/F,GAC5C8E,EAAkBrF,KAAKC,IAAIoG,EAAOE,EAAOF,EAAOE,EACpD9C,MAAKwB,WAAWkB,EAAMhB,EAAU1B,KAAKe,OAAOb,MAAMyC,EAAK5C,KAAO,GAAI6B,IAG9DpC,EAAAc,UAAAyC,WAAR,SAAmBL,EAAchB,EAAkBsB,EAAgBpB,GAC/D,GAAIX,GAAa1E,KAAKsF,KAAK7B,KAAKiB,WAAaS,GACzCuB,EAAS1G,KAAKsB,MAAMmC,KAAKgB,QAAUC,EAAa,GAChDU,EAAQ3B,KAAKe,OAAO1E,QAAQ2G,EAAOjD,MACnCgC,EAAUxF,KAAKsB,MAAM+D,EAAkBD,EAAMpD,OAC7CG,EAAsB,GAAbuC,CACbjB,MAAKhB,IAAIgD,UAAUL,EAAOI,EAAS,EAAG,EAAGJ,EAAMjD,OAAQgE,EAAMO,EAASvE,EAAQ,EAAGA,IAG7Ec,EAAAc,UAAA4C,UAAR,SAAkBR,EAAchB,EAAkBuB,EAAgBE,GAC9D,GAAIzE,GAASnC,KAAKsF,KAAK7B,KAAKiB,WAAaS,GACrC0B,EAAY7G,KAAKsB,MAAMmC,KAAKc,SAASpC,QAAUsB,KAAKgB,QAAUtC,EAAS,GAa3E,OAZIyE,IAAWT,EAAO,GAAK,IACvB1C,KAAKhB,IAAIiD,YACTjC,KAAKhB,IAAIkD,OAAOQ,EAAMO,GACtBjD,KAAKhB,IAAImD,OAAOO,EAAMU,GACtBpD,KAAKhB,IAAIoD,UAAY,EACrBpC,KAAKhB,IAAIqD,YAAcrC,KAAKc,SAAShC,YACrCkB,KAAKhB,IAAIqD,YAAc,OACvBrC,KAAKhB,IAAIsD,YAAc,GACvBtC,KAAKhB,IAAIuD,SACTvC,KAAKhB,IAAIwD,YACTxC,KAAKhB,IAAIsD,YAAc,GAEpBc,GAGJ5D,EAAAc,UAAA7C,YAAP,SAAmBzB,EAAeuB,EAAUd,EAAgB4G,GACxDrD,KAAKkB,kBAGL,KAAK,GAFDoC,GAAO7G,EAAO8G,QAAQvD,KAAKc,SAASvC,OACpC2E,GAAa3G,KAAKsB,MAAMpB,EAAOC,SAASC,GAAKJ,KAAKsB,MAAMpB,EAAOC,SAASI,IAAM,GAAK,EAC9E0G,EAAI,EAAGA,EAAIF,EAAKhH,OAAQkH,IAAK,CAMlC,IAAqB,GALjBP,GAASjD,KAAKc,SAASpC,OACvB+E,EAAeP,EACfQ,EAAY,OACZC,EAAMpH,KAAKoH,IAAIlH,EAAOmH,OAAO7G,MAAQuG,EAAKE,GAAGzG,OAC7C8G,EAAYjD,EAAAkD,IAAIC,KAAKxG,EAAKd,EAAOC,SAAU,KAAM,KAAM4G,EAAKE,GAAIxD,KAAKc,SAASjE,iBAC7DmH,EAAA,EAAAC,EAAAJ,EAAAG,EAAAC,EAAA3H,OAAA0H,IAAU,CAA1B,GAAIE,GAAQD,EAAAD,GACTtC,EAAWb,EAAAsD,aAAaC,YAAY3H,EAAOC,SAAUwH,EAASrB,OAASc,CACvEO,GAASnE,KAAO,IAChB2D,EAAehC,EACf1B,KAAKyC,SAASe,EAAG9B,EAAUwC,EAAUzH,IAEzCwG,EAASjD,KAAKkD,UAAUM,EAAG9B,EAAUuB,EAAQQ,GAC7CA,GAAgBA,EAEpB,IAAmB,GAAAY,GAAA,EAAAC,EAAAjB,EAAAgB,EAAAC,EAAAhI,OAAA+H,IAAQ,CAAtB,GAAIrB,GAAMsB,EAAAD,GACP3C,EAAWb,EAAAsD,aAAaC,YAAY3H,EAAOC,SAAUsG,EAAOtG,SAChE,IAAIgF,EAAW1B,KAAKc,SAASjE,gBAAiB,CACtC6E,EAAW,MAAMA,EAAW,IAChC,IAAI6C,GAAQhI,KAAKY,MAAM,GAAKuE,GACxB8C,GAAQlB,EAAKE,GAAGzG,MAAQiG,EAAOjG,QAAU,EAAIwH,GAAS,EACtD7C,GAAWgC,GAAgBc,GAAQ,GACnCxE,KAAK+C,WAAWS,EAAG9B,EAAUsB,EAAQwB,OAM7DhF,IApHanE,GAAAmE,MAAKA,GLmSZ,SAASlE,EAAQD,EAASH,GAE/B,YM/SD,IAAAuJ,GAAAvJ,EAAyB,GAKzB4I,EAAA,mBAAAA,MA4DA,MA1DkBA,GAAAY,SAAd,SAAuBC,EAAgBf,GACnC,GAAIgB,GAAQrI,KAAKsB,MAAM8G,EAAO7H,EAAI8G,EAAOiB,GACrCD,IAASD,EAAO7H,IAAG8H,GAAS,EAChC,IAAIC,GAAKD,EAAQD,EAAO7H,EACpBgI,EAAKlB,EAAOmB,IAAMF,CACtB,QACIlI,EAAGmI,EAAKH,EAAOhI,EACfG,EAAG8H,EACHI,kBAAmBzI,KAAKC,IAAIsI,GAAMvI,KAAKC,IAAIqI,KAIrCf,EAAAmB,SAAd,SAAuBN,EAAgBf,GACnC,GAAIsB,GAAQ3I,KAAKsB,MAAM8G,EAAOhI,EAAIiH,EAAOkB,GACrCI,IAASP,EAAOhI,IAAGuI,GAAS,EAChC,IAAIJ,GAAKI,EAAQP,EAAOhI,EACpBkI,EAAKjB,EAAOuB,GAAKL,CACrB,QACInI,EAAGuI,EACHpI,EAAG+H,EAAKF,EAAO7H,EACfkI,kBAAmBzI,KAAKC,IAAIsI,GAAMvI,KAAKC,IAAIqI,KAIrCf,EAAAC,KAAd,SACIxG,EACAoH,EACAS,EACAC,EACAzB,EACA0B,GAGA,GAAIA,EAAc,EAAG,QAErB,IAAIC,GAAIH,GAAStB,EAAIY,SAASC,EAAQf,GAClC4B,EAAIH,GAASvB,EAAImB,SAASN,EAAQf,EAEtC,IAAI2B,EAAEP,kBAAoBQ,EAAER,kBAAmB,CAC3CQ,EAAER,mBAAqBO,EAAEP,iBACzB,IAAIjF,GAAOxC,EAAIkI,SAASlJ,KAAKsB,MAAM0H,EAAE5I,GAAI4I,EAAEzI,GAAK8G,EAAOiB,GAAK,EAAI,EAAI,GACpE,OAAI9E,GAAO,GACC,GAAI0E,GAAAiB,SAASH,EAAGxF,KAEhB,GAAI0E,GAAAiB,SAASH,EAAGxF,IACnB4F,OAAO7B,EAAIC,KAAKxG,EAAKgI,EAAG,KAAMC,EAAG5B,EAAQ0B,EAAcC,EAAEP,oBAGlEO,EAAEP,mBAAqBQ,EAAER,iBACzB,IAAIjF,GAAOxC,EAAIkI,SAASD,EAAE7I,GAAKiH,EAAOkB,GAAK,EAAI,EAAI,GAAIvI,KAAKsB,MAAM2H,EAAE1I,GACpE,OAAIiD,GAAO,GACC,GAAI0E,GAAAiB,SAASF,EAAGzF,KAEhB,GAAI0E,GAAAiB,SAASF,EAAGzF,IACnB4F,OAAO7B,EAAIC,KAAKxG,EAAKiI,EAAGD,EAAG,KAAM3B,EAAQ0B,EAAcE,EAAER,qBAI9ElB,IA5DazI,GAAAyI,IAAGA,GN0WV,SAASxI,EAAQD,GAEtB,YOlXD,IAAAqK,GAAA,WACI,QAAAA,GACW7C,EACA9C,GADAC,KAAA6C,QACA7C,KAAAD,OAGf,MAAA2F,KANarK,GAAAqK,SAAQA,GP+Xf,SAASpK,EAAQD,GAEtB,YQjYD,IAAA8I,GAAA,mBAAAA,MAOA,MANkBA,GAAAC,YAAd,SAA0BwB,EAAWC,GACjC,MAAOtJ,MAAKuJ,MACPF,EAAEjJ,EAAIkJ,EAAElJ,IAAMiJ,EAAEjJ,EAAIkJ,EAAElJ,IACtBiJ,EAAE9I,EAAI+I,EAAE/I,IAAM8I,EAAE9I,EAAI+I,EAAE/I,KAGnCqH,IAPa9I,GAAA8I,aAAYA,GRgZnB,SAAS7I,EAAQD,GAEtB,YSnZD,IAAAgE,GAAA,mBAAAA,KAAA,GAAAoB,GAAAT,IACWA,MAAA+F,YAAsB,EACtB/F,KAAAgG,aAAuB,EACvBhG,KAAAiG,SAAmB,EACnBjG,KAAAkG,UAAoB,EACpBlG,KAAAmG,KAAe,EACfnG,KAAAoG,YAAsB,EACtBpG,KAAAqG,aAAuB,EACvBrG,KAAAsG,gBAA0B,EAC1BtG,KAAAuG,iBAA2B,EAmE1BvG,KAAAwG,kBAAoB,SAACC,GAAkB,MAAAhG,GAAKiG,UAAUD,IASlE,MA1EWpH,GAAAiB,UAAAoG,UAAP,SAAiBD,GACTA,EAAEE,UAAY,GACd3G,KAAKsG,iBAAmBG,EAAEE,UAAY,EACtC3G,KAAKuG,iBAAmB,GACjBE,EAAEE,UAAY,IACrB3G,KAAKsG,gBAAkB,EACvBtG,KAAKuG,iBAAmBE,EAAEE,UAAY,IAIvCtH,EAAAiB,UAAAsG,iBAAP,WACI5G,KAAKsG,gBAAkB,EACvBtG,KAAKuG,iBAAmB,GAGrBlH,EAAAiB,UAAAuG,QAAP,SAAeJ,GACM,IAAbA,EAAEK,UAAe9G,KAAK+F,YAAa,GACtB,IAAbU,EAAEK,UAAe9G,KAAKoG,YAAa,GACtB,IAAbK,EAAEK,UAAe9G,KAAKgG,aAAc,GACvB,IAAbS,EAAEK,UAAe9G,KAAKqG,aAAc,GACvB,IAAbI,EAAEK,SAA8B,IAAbL,EAAEK,UAAe9G,KAAKiG,SAAU,GACtC,IAAbQ,EAAEK,SAA8B,IAAbL,EAAEK,UAAe9G,KAAKkG,UAAW,GACxDlG,KAAKmG,IAAMM,EAAEM,UAGV1H,EAAAiB,UAAA0G,WAAP,SAAkBP,GACd,GAAIQ,GAAIR,EAAES,QAAQ,EAClBlH,MAAKmH,SAASV,GACVQ,EAAEG,MAA4B,KAApB5I,OAAOC,WAAoBuB,KAAK+F,YAAa,EAClDkB,EAAEG,MAA4B,KAApB5I,OAAOC,WAAoBuB,KAAKiG,SAAU,EACxDjG,KAAKgG,aAAc,EACxBS,EAAEY,iBACFZ,EAAEa,mBAGCjI,EAAAiB,UAAA6G,SAAP,SAAgBV,GACZzG,KAAK+F,YAAa,EAClB/F,KAAKgG,aAAc,EACnBhG,KAAKiG,SAAU,EACfQ,EAAEY,iBACFZ,EAAEa,mBAGCjI,EAAAiB,UAAAiH,MAAP,SAAad,GACQ,IAAbA,EAAEK,UAAe9G,KAAK+F,YAAa,GACtB,IAAbU,EAAEK,UAAe9G,KAAKoG,YAAa,GACtB,IAAbK,EAAEK,UAAe9G,KAAKgG,aAAc,GACvB,IAAbS,EAAEK,UAAe9G,KAAKqG,aAAc,GACvB,IAAbI,EAAEK,SAA8B,IAAbL,EAAEK,UAAe9G,KAAKiG,SAAU,GACtC,IAAbQ,EAAEK,SAA8B,IAAbL,EAAEK,UAAe9G,KAAKkG,UAAW,GACxDlG,KAAKmG,IAAMM,EAAEM,UAGV1H,EAAAiB,UAAAV,WAAP,SAAkB4H,EAAmBzI,GAArC,GAAA0B,GAAAT,IACIwH,GAAIC,iBAAiB,UAAW,SAAChB,GAAM,MAAAhG,GAAKoG,QAAQJ,KAAI,GACxDe,EAAIC,iBAAiB,QAAS,SAAChB,GAAM,MAAAhG,GAAK8G,MAAMd,KAAI,GACpDe,EAAIC,iBAAiB,oBAAqB,SAAChB,GAAQhG,EAAKiH,gBAAgBF,EAAKzI,KAAW,GACxFA,EAAO0I,iBAAiB,aAAc,SAAChB,GAAQhG,EAAKuG,WAAWP,KAAM,GACrE1H,EAAO0I,iBAAiB,WAAY,SAAChB,GAAQhG,EAAK0G,SAASV,KAAM,GACjE1H,EAAO0I,iBAAiB,QAAS,SAAChB,GAC9B1H,EAAO4I,mBAAqB5I,EAAO4I,mBACnC5I,EAAO4I,uBACR,IAICtI,EAAAiB,UAAAoH,gBAAR,SAAwBF,EAAmBzI,GACvC,GAAI6I,GAAmCvJ,SAASC,eAAe,aAC3DkJ,GAAIK,qBAAuBD,EAC3BJ,EAAIC,iBAAiB,YAAazH,KAAKwG,mBAAmB,GAE1DgB,EAAIM,oBAAoB,YAAa9H,KAAKwG,mBAAmB,IAGzEnH,IArFahE,GAAAgE,SAAQA,GT6ff,SAAS/D,EAAQD,EAASH,GAE/B,YU/fD,IAAA6M,GAAA7M,EAAsB,IAEtB+B,EAAA,WASI,QAAAA,GAAYF,GACRiD,KAAKjD,MAAQE,EAAMC,eAAeH,GAClCiD,KAAKgI,IAAMzL,KAAKyL,IAAIjL,GACpBiD,KAAK2D,IAAMpH,KAAKoH,IAAI5G,GACpBiD,KAAKmF,GAAKnF,KAAKgI,IAAMhI,KAAK2D,IAC1B3D,KAAK+E,IAAM/E,KAAK2D,IAAM3D,KAAKgI,IAC3BhI,KAAK8E,GAAK9E,KAAK2D,IAAM,EAAI,EAAI,EAC7B3D,KAAK6E,GAAK7E,KAAKgI,IAAM,EAAI,EAAI,EAQrC,MALkB/K,GAAAC,eAAd,SAA6BH,GAGzB,MAFGA,GAAQ,IAAGA,GAASgL,EAAAE,OACpBlL,EAAQgL,EAAAE,QAAOlL,GAASgL,EAAAE,OACpBlL,GAEfE,IAxBa5B,GAAA4B,MAAKA,GVuhBZ,SAAS3B,EAAQD,GAEtB,YW3hBYA,GAAA6M,MAAgB3L,KAAKqC,GAAK,EAC1BvD,EAAA8M,MAAgB5L,KAAKqC,GACrBvD,EAAA+M,MAAgB,EAAI7L,KAAKqC,GAAK,EAC9BvD,EAAA4M,MAAgB,EAAI1L,KAAKqC,IXiiBhC,SAAStD,EAAQD,GAEtB,YYtiBD,IAAA6D,GAAA,WAII,QAAAA,GAAYE,EAAciJ,GACtBrI,KAAKzC,IAAM,GAAI+K,YAAWlJ,EAAOA,GACjCY,KAAKZ,KAAOA,EAEZY,KAAKuI,UAAUF,GAqCvB,MAlCWnJ,GAAAoB,UAAAkI,SAAP,SAAgB7L,EAAWG,EAAW2L,GAClC,GAAIC,GAAM1I,KAAKZ,KAAOtC,EAAIH,CACtB+L,GAAM1I,KAAKzC,IAAIjB,QAAUoM,GAAO,IAChC1I,KAAKzC,IAAIyC,KAAKZ,KAAOtC,EAAIH,GAAK8L,IAI/BvJ,EAAAoB,UAAAmF,SAAP,SAAgB9I,EAAWG,GACvB,GAAIH,GAAK,GAAKG,GAAK,GAAKH,EAAIqD,KAAKZ,MAAQtC,EAAIkD,KAAKZ,KAAM,CACpD,GAAIsJ,GAAM1I,KAAKZ,KAAOtC,EAAIH,CAC1B,OAAOqD,MAAKzC,IAAImL,GAEpB,MAAO,IAGJxJ,EAAAoB,UAAAiI,UAAP,SAAiBF,GACb,IAAK,GAAIjM,GAAI,EAAGA,EAAI4D,KAAKzC,IAAIjB,OAAQF,IAC7BG,KAAKmD,SAAW2I,EACZ9L,KAAKmD,SAAW,GAChBM,KAAKzC,IAAInB,GAAK,EACPG,KAAKmD,SAAW,GACvBM,KAAKzC,IAAInB,GAAK,EACPG,KAAKmD,SAAW,GACvBM,KAAKzC,IAAInB,GAAK,EACPG,KAAKmD,SAAW,GACvBM,KAAKzC,IAAInB,GAAK,EAEd4D,KAAKzC,IAAInB,GAAK,EAGlB4D,KAAKzC,IAAInB,GAAK,GAI9B8C,IA7Ca7D,GAAA6D,IAAGA,GZylBV,SAAS5D,EAAQD,EAASH,GAE/B,Ya3lBD,IAAA6M,GAAA7M,EAAsB,IAItB8B,EAAA9B,EAAsB,GAEtBiE,EAAA,WAEI,QAAAA,GACWzC,EACAkH,EACAjF,GAFAqB,KAAAtD,WACAsD,KAAA4D,SACA5D,KAAArB,MAmFf,MAhFWQ,GAAAmB,UAAAiD,QAAP,SAAeoF,GAIX,IAAK,GAHDC,GAAO5I,KAAKrB,IAAMgK,EAClB5L,EAAQiD,KAAK4D,OAAO7G,MAAQiD,KAAKrB,IAAM,EACvC2E,EAAO,GAAInH,OACNC,EAAI,EAAGA,EAAIuM,EAASvM,IACzBkH,EAAKlG,KAAK,GAAIJ,GAAAC,MAAMF,IACpBA,GAAS6L,CAEb,OAAOtF,IAGJnE,EAAAmB,UAAAyF,WAAP,SAAkB/J,EAAe6M,GAC7B7I,KAAK4D,OAAS,GAAI5G,GAAAC,MAAM+C,KAAK4D,OAAO7G,MAAQR,KAAKqC,GAAKiK,EAAW7M,EAAQ,OAGtEmD,EAAAmB,UAAA0F,YAAP,SAAmBhK,EAAe6M,GAC9B7I,KAAK4D,OAAS,GAAI5G,GAAAC,MAAM+C,KAAK4D,OAAO7G,MAAQR,KAAKqC,GAAKiK,EAAW7M,EAAQ,OAGrEmD,EAAAmB,UAAAwI,gBAAR,SAAwBvL,EAAUb,GAO9B,MANIa,GAAIkI,SAASlJ,KAAKsB,MAAMnB,EAASC,GAAIJ,KAAKsB,MAAMmC,KAAKtD,SAASI,IAAM,IACpEJ,EAASC,EAAIqD,KAAKtD,SAASC,GAE3BY,EAAIkI,SAASlJ,KAAKsB,MAAMmC,KAAKtD,SAASC,GAAIJ,KAAKsB,MAAMnB,EAASI,IAAM,IACpEJ,EAASI,EAAIkD,KAAKtD,SAASI,GAExBJ,GAGJyC,EAAAmB,UAAAyI,YAAP,SAAmB/M,EAAeuB,EAAU4I,GACxC,GAAIzJ,IACAC,EAAGqD,KAAKtD,SAASC,EAAIqD,KAAK4D,OAAOD,IAAM3H,GAASmK,EAAM,IAAM,KAC5DrJ,EAAGkD,KAAKtD,SAASI,EAAIkD,KAAK4D,OAAOoE,IAAMhM,GAASmK,EAAM,IAAM,KAEhEnG,MAAKtD,SAAWsD,KAAK8I,gBAAgBvL,EAAKb,IAGvCyC,EAAAmB,UAAA0I,aAAP,SAAoBhN,EAAeuB,GAC/B,GAAIb,IACAC,EAAGqD,KAAKtD,SAASC,EAAIqD,KAAK4D,OAAOD,IAAM3H,EAAQ,IAC/Cc,EAAGkD,KAAKtD,SAASI,EAAIkD,KAAK4D,OAAOoE,IAAMhM,EAAQ,IAEnDgE,MAAKtD,SAAWsD,KAAK8I,gBAAgBvL,EAAKb,IAGvCyC,EAAAmB,UAAA8F,WAAP,SAAkBpK,EAAeuB,EAAU4I,GACvC,GAAI8C,GAAY,GAAIjM,GAAAC,MAAM+C,KAAK4D,OAAO7G,MAAQgL,EAAAG,OAC1CxL,GACAC,EAAGqD,KAAKtD,SAASC,EAAIsM,EAAUtF,IAAM3H,GAASmK,EAAM,IAAM,KAC1DrJ,EAAGkD,KAAKtD,SAASI,EAAImM,EAAUjB,IAAMhM,GAASmK,EAAM,IAAM,KAE9DnG,MAAKtD,SAAWsD,KAAK8I,gBAAgBvL,EAAKb,IAGvCyC,EAAAmB,UAAA+F,YAAP,SAAmBrK,EAAeuB,EAAU4I,GACxC,GAAI8C,GAAY,GAAIjM,GAAAC,MAAM+C,KAAK4D,OAAO7G,MAAQgL,EAAAG,OAC1CxL,GACAC,EAAGqD,KAAKtD,SAASC,EAAIsM,EAAUtF,IAAM3H,GAASmK,EAAM,IAAM,KAC1DrJ,EAAGkD,KAAKtD,SAASI,EAAImM,EAAUjB,IAAMhM,GAASmK,EAAM,IAAM,KAE9DnG,MAAKtD,SAAWsD,KAAK8I,gBAAgBvL,EAAKb,IAGvCyC,EAAAmB,UAAAT,UAAP,SAAiBtC,GACb,KAAOA,EAAIkI,SAASlJ,KAAKsB,MAAMmC,KAAKtD,SAASC,GAAIJ,KAAKsB,MAAMmC,KAAKtD,SAASI,IAAM,GAC5EkD,KAAKtD,SAASC,GAAK,GAIpBwC,EAAAmB,UAAAjD,YAAP,SAAmBC,EAAoBC,EAAUvB,GACzCsB,EAAS2I,SAASjG,KAAK+I,YAAY/M,EAAOuB,EAAKD,EAAS6I,KACxD7I,EAAS4I,UAAUlG,KAAKgJ,aAAahN,EAAOuB,GAC5CD,EAASyI,YAAY/F,KAAK+F,WAAW/J,EAAO,GAC5CsB,EAAS0I,aAAahG,KAAKgG,YAAYhK,EAAO,GAC9CsB,EAASgJ,iBAAiBtG,KAAK+F,WAAW/J,EAAOsB,EAASgJ,iBAC1DhJ,EAASiJ,kBAAkBvG,KAAKgG,YAAYhK,EAAOsB,EAASiJ,kBAC5DjJ,EAAS8I,YAAYpG,KAAKoG,WAAWpK,EAAOuB,EAAKD,EAAS6I,KAC1D7I,EAAS+I,aAAarG,KAAKqG,YAAYrK,EAAOuB,EAAKD,EAAS6I,KAChE7I,EAASsJ,oBAEjBzH,IAxFa9D,GAAA8D,OAAMA,GborBb,SAAS7D,EAAQD","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(13);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sprite_1 = __webpack_require__(2);\r\n\tvar assetloader_1 = __webpack_require__(3);\r\n\tvar scene_1 = __webpack_require__(4);\r\n\tvar controls_1 = __webpack_require__(8);\r\n\tvar angle_1 = __webpack_require__(9);\r\n\tvar map_1 = __webpack_require__(11);\r\n\tvar player_1 = __webpack_require__(12);\r\n\tvar fps = document.getElementById('fps');\r\n\tvar width = window.innerWidth < 1024 ? window.innerWidth : 1024;\r\n\tvar gamesettins = {\r\n\t    width: width,\r\n\t    height: Math.floor(width / 1.8),\r\n\t    fov: 70 * Math.PI / 180,\r\n\t    drawingdistance: 25,\r\n\t    floorcolor1: '#000011',\r\n\t    floorcolor2: '#111122'\r\n\t};\r\n\tvar canvas = document.getElementById('gamecanvas');\r\n\tvar ctx = canvas.getContext('2d');\r\n\tvar map = new map_1.Map(250, 0.3);\r\n\tvar player = new player_1.Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new angle_1.Angle(0), gamesettins.fov);\r\n\tvar controls = new controls_1.Controls();\r\n\tvar assetloader = new assetloader_1.AssetLoader();\r\n\tvar scene = new scene_1.Scene(ctx, gamesettins, assetloader);\r\n\tvar sprites = new Array();\r\n\tfor (var i = 0; i < map.size * 10; i++) {\r\n\t    sprites.push(new sprite_1.Sprite({\r\n\t        x: Math.random() * map.size,\r\n\t        y: Math.random() * map.size\r\n\t    }, Math.floor(Math.random() * 5)));\r\n\t}\r\n\tcanvas.width = gamesettins.width;\r\n\tcanvas.height = gamesettins.height;\r\n\tcanvas.style.width = gamesettins.width + \"px\";\r\n\tcanvas.style.height = gamesettins.height + \"px\";\r\n\tcontrols.bindevents(document, canvas);\r\n\tplayer.initonmap(map);\r\n\tvar objectsinrange = new Array();\r\n\tvar lastrender = Date.now();\r\n\tfunction render() {\r\n\t    var now = Date.now();\r\n\t    var delta = now - lastrender;\r\n\t    lastrender = now;\r\n\t    objectsinrange = new Array();\r\n\t    for (var i = 0; i < sprites.length; i++) {\r\n\t        if (Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n\t            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance) {\r\n\t            sprites[i].angle = angle_1.Angle.normalizeangle(Math.atan2(sprites[i].position.y - player.position.y, sprites[i].position.x - player.position.x));\r\n\t            objectsinrange.push(sprites[i]);\r\n\t        }\r\n\t    }\r\n\t    player.getcontrols(controls, map, delta);\r\n\t    scene.renderframe(delta, map, player, objectsinrange);\r\n\t    requestAnimationFrame(render);\r\n\t    fps.innerText = (Math.floor(1000 / delta)).toString();\r\n\t}\r\n\tassetloader.loadall(render);\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(position, type) {\r\n\t        this.position = position;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssetLoader = (function () {\r\n\t    function AssetLoader() {\r\n\t        this.loaded = 0;\r\n\t        this.wallssrcs = [\r\n\t            './assets/walls/wall1.jpg',\r\n\t            './assets/walls/wall2.jpg',\r\n\t            './assets/walls/wall3.jpg',\r\n\t            './assets/walls/wall4.jpg',\r\n\t            './assets/walls/wall5.jpg'\r\n\t        ];\r\n\t        this.walls = new Array();\r\n\t        for (var item in this.wallssrcs)\r\n\t            this.walls.push(new Image());\r\n\t        this.spritessrcs = [\r\n\t            './assets/sprites/sprite1.png',\r\n\t            './assets/sprites/sprite2.png',\r\n\t            './assets/sprites/sprite3.png',\r\n\t            './assets/sprites/sprite4.png',\r\n\t            './assets/sprites/sprite5.png'\r\n\t        ];\r\n\t        this.sprites = new Array();\r\n\t        for (var item in this.spritessrcs)\r\n\t            this.sprites.push(new Image());\r\n\t    }\r\n\t    AssetLoader.prototype.isloaded = function () {\r\n\t        return this.loaded ==\r\n\t            this.walls.length +\r\n\t                this.sprites.length;\r\n\t    };\r\n\t    AssetLoader.prototype.loadall = function (callback) {\r\n\t        var _this = this;\r\n\t        for (var i in this.wallssrcs) {\r\n\t            this.walls[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.walls[i].src = this.wallssrcs[i];\r\n\t        }\r\n\t        for (var i in this.spritessrcs) {\r\n\t            this.sprites[i].onload = function () {\r\n\t                _this.loaded += 1;\r\n\t                if (_this.isloaded())\r\n\t                    callback();\r\n\t            };\r\n\t            this.sprites[i].src = this.spritessrcs[i];\r\n\t        }\r\n\t    };\r\n\t    return AssetLoader;\r\n\t}());\r\n\texports.AssetLoader = AssetLoader;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ray_1 = __webpack_require__(5);\r\n\tvar distancecalc_1 = __webpack_require__(7);\r\n\tvar Scene = (function () {\r\n\t    function Scene(ctx, settings, assets) {\r\n\t        this.ctx = ctx;\r\n\t        this.settings = settings;\r\n\t        this.assets = assets;\r\n\t        this.lastrender = Date.now();\r\n\t        this.height2 = Math.floor(settings.height / 2);\r\n\t        this.wallheight = Math.floor(settings.height * 0.8);\r\n\t    }\r\n\t    Scene.prototype.renderbackground = function () {\r\n\t        var grdceiling = this.ctx.createLinearGradient(0, 0, 0, this.height2);\r\n\t        grdceiling.addColorStop(0, '#aaaaaa');\r\n\t        grdceiling.addColorStop(1, '#222222');\r\n\t        this.ctx.fillStyle = grdceiling;\r\n\t        this.ctx.fillRect(0, 0, this.settings.width, this.height2);\r\n\t        this.ctx.fillStyle = this.settings.floorcolor1;\r\n\t        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height);\r\n\t    };\r\n\t    Scene.prototype.renderwall = function (row, distance, image, textureposition) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var top = Math.floor(this.height2 - height / 2);\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height);\r\n\t        if (row % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(row, top);\r\n\t            this.ctx.lineTo(row, this.settings.height - top);\r\n\t            this.ctx.lineWidth = 4;\r\n\t            this.ctx.strokeStyle = '#000000';\r\n\t            this.ctx.fillStyle = '#000000';\r\n\t            this.ctx.globalAlpha = (distance / this.settings.drawingdistance) * 0.8;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.closePath();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.drawwall = function (left, distance, wall, player) {\r\n\t        var modx = wall.point.x - Math.floor(wall.point.x);\r\n\t        var mody = wall.point.y - Math.floor(wall.point.y);\r\n\t        var textureposition = Math.abs(modx > mody ? modx : mody);\r\n\t        this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition);\r\n\t    };\r\n\t    Scene.prototype.drawobject = function (left, distance, object, textureposition) {\r\n\t        var wallheight = Math.ceil(this.wallheight / distance);\r\n\t        var bottom = Math.floor(this.height2 + wallheight / 2);\r\n\t        var image = this.assets.sprites[object.type];\r\n\t        var texleft = Math.floor(textureposition * image.width);\r\n\t        var height = wallheight * 0.4;\r\n\t        this.ctx.drawImage(image, texleft, 0, 1, image.height, left, bottom - height, 1, height);\r\n\t    };\r\n\t    Scene.prototype.drawfloor = function (left, distance, bottom, useback) {\r\n\t        var height = Math.ceil(this.wallheight / distance);\r\n\t        var newbottom = Math.floor(this.settings.height - (this.height2 - height / 2));\r\n\t        if (useback && left % 3 == 0) {\r\n\t            this.ctx.beginPath();\r\n\t            this.ctx.moveTo(left, bottom);\r\n\t            this.ctx.lineTo(left, newbottom);\r\n\t            this.ctx.lineWidth = 1;\r\n\t            this.ctx.strokeStyle = this.settings.floorcolor2;\r\n\t            this.ctx.strokeStyle = '#fff';\r\n\t            this.ctx.globalAlpha = 0.2;\r\n\t            this.ctx.stroke();\r\n\t            this.ctx.closePath();\r\n\t            this.ctx.globalAlpha = 1;\r\n\t        }\r\n\t        return newbottom;\r\n\t    };\r\n\t    Scene.prototype.renderframe = function (delta, map, player, objects) {\r\n\t        this.renderbackground();\r\n\t        var rays = player.getrays(this.settings.width);\r\n\t        var drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0;\r\n\t        for (var r = 0; r < rays.length; r++) {\r\n\t            var bottom = this.settings.height;\r\n\t            var drawfloorray = drawfloor;\r\n\t            var walldistance = void 0;\r\n\t            var cos = Math.cos(player.facing.angle - rays[r].angle);\r\n\t            var colisions = ray_1.Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance);\r\n\t            for (var _i = 0, colisions_1 = colisions; _i < colisions_1.length; _i++) {\r\n\t                var colision = colisions_1[_i];\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, colision.point) * cos;\r\n\t                if (colision.type > 0) {\r\n\t                    walldistance = distance;\r\n\t                    this.drawwall(r, distance, colision, player);\r\n\t                }\r\n\t                bottom = this.drawfloor(r, distance, bottom, drawfloorray);\r\n\t                drawfloorray = !drawfloorray;\r\n\t            }\r\n\t            for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\r\n\t                var object = objects_1[_a];\r\n\t                var distance = distancecalc_1.DistanceCalc.getdistance(player.position, object.position);\r\n\t                if (distance < this.settings.drawingdistance) {\r\n\t                    if (distance < 0.25)\r\n\t                        distance = 0.25;\r\n\t                    var mdiff = Math.atan2(0.1, distance);\r\n\t                    var diff = (rays[r].angle - object.angle) / (2 * mdiff) + 0.5;\r\n\t                    if (distance < walldistance && diff <= 1) {\r\n\t                        this.drawobject(r, distance, object, diff);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar colision_1 = __webpack_require__(6);\r\n\tvar Ray = (function () {\r\n\t    function Ray() {\r\n\t    }\r\n\t    Ray.nearesty = function (origin, facing) {\r\n\t        var nexty = Math.floor(origin.y + facing.dy);\r\n\t        if (nexty == origin.y)\r\n\t            nexty -= 1;\r\n\t        var dy = nexty - origin.y;\r\n\t        var dx = facing.ctg * dy;\r\n\t        return {\r\n\t            x: dx + origin.x,\r\n\t            y: nexty,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.nearestx = function (origin, facing) {\r\n\t        var nextx = Math.floor(origin.x + facing.dx);\r\n\t        if (nextx == origin.x)\r\n\t            nextx -= 1;\r\n\t        var dx = nextx - origin.x;\r\n\t        var dy = facing.tg * dx;\r\n\t        return {\r\n\t            x: nextx,\r\n\t            y: dy + origin.y,\r\n\t            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n\t        };\r\n\t    };\r\n\t    Ray.cast = function (map, origin, nexth, nextv, facing, maxdistance) {\r\n\t        if (maxdistance < 1)\r\n\t            return [];\r\n\t        var h = nexth || Ray.nearesty(origin, facing);\r\n\t        var v = nextv || Ray.nearestx(origin, facing);\r\n\t        if (h.manhattandistance < v.manhattandistance) {\r\n\t            v.manhattandistance -= h.manhattandistance;\r\n\t            var type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(h, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(h, type)]\r\n\t                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            h.manhattandistance -= v.manhattandistance;\r\n\t            var type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y));\r\n\t            if (type > 0) {\r\n\t                return [new colision_1.Colision(v, type)];\r\n\t            }\r\n\t            else {\r\n\t                return [new colision_1.Colision(v, type)]\r\n\t                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Ray;\r\n\t}());\r\n\texports.Ray = Ray;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Colision = (function () {\r\n\t    function Colision(point, type) {\r\n\t        this.point = point;\r\n\t        this.type = type;\r\n\t    }\r\n\t    return Colision;\r\n\t}());\r\n\texports.Colision = Colision;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DistanceCalc = (function () {\r\n\t    function DistanceCalc() {\r\n\t    }\r\n\t    DistanceCalc.getdistance = function (a, b) {\r\n\t        return Math.sqrt((a.x - b.x) * (a.x - b.x) +\r\n\t            (a.y - b.y) * (a.y - b.y));\r\n\t    };\r\n\t    return DistanceCalc;\r\n\t}());\r\n\texports.DistanceCalc = DistanceCalc;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controls = (function () {\r\n\t    function Controls() {\r\n\t        var _this = this;\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        this.backward = false;\r\n\t        this.run = false;\r\n\t        this.strafeleft = false;\r\n\t        this.straferight = false;\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t        this.mousemovefunction = function (e) { return _this.mousemove(e); };\r\n\t    }\r\n\t    Controls.prototype.mousemove = function (e) {\r\n\t        if (e.movementX < 0) {\r\n\t            this.mouserotateleft = -e.movementX / 5;\r\n\t            this.mouserotateright = 0;\r\n\t        }\r\n\t        else if (e.movementX > 0) {\r\n\t            this.mouserotateleft = 0;\r\n\t            this.mouserotateright = e.movementX / 5;\r\n\t        }\r\n\t    };\r\n\t    Controls.prototype.resetmouserotate = function () {\r\n\t        this.mouserotateleft = 0;\r\n\t        this.mouserotateright = 0;\r\n\t    };\r\n\t    Controls.prototype.keydown = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = true;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = true;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = true;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = true;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = true;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = true;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.touchstart = function (e) {\r\n\t        var t = e.touches[0];\r\n\t        this.touchend(e);\r\n\t        if (t.pageX < window.innerWidth * 0.333)\r\n\t            this.rotateleft = true;\r\n\t        else if (t.pageX < window.innerWidth * 0.666)\r\n\t            this.forward = true;\r\n\t        else\r\n\t            this.rotateright = true;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.touchend = function (e) {\r\n\t        this.rotateleft = false;\r\n\t        this.rotateright = false;\r\n\t        this.forward = false;\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t    };\r\n\t    Controls.prototype.keyup = function (e) {\r\n\t        if (e.keyCode == 37)\r\n\t            this.rotateleft = false;\r\n\t        if (e.keyCode == 68)\r\n\t            this.strafeleft = false;\r\n\t        if (e.keyCode == 39)\r\n\t            this.rotateright = false;\r\n\t        if (e.keyCode == 65)\r\n\t            this.straferight = false;\r\n\t        if (e.keyCode == 38 || e.keyCode == 87)\r\n\t            this.forward = false;\r\n\t        if (e.keyCode == 40 || e.keyCode == 83)\r\n\t            this.backward = false;\r\n\t        this.run = e.shiftKey;\r\n\t    };\r\n\t    Controls.prototype.bindevents = function (doc, canvas) {\r\n\t        var _this = this;\r\n\t        doc.addEventListener('keydown', function (e) { return _this.keydown(e); }, false);\r\n\t        doc.addEventListener('keyup', function (e) { return _this.keyup(e); }, false);\r\n\t        doc.addEventListener('pointerlockchange', function (e) { _this.lockChangeAlert(doc, canvas); }, false);\r\n\t        canvas.addEventListener('touchstart', function (e) { _this.touchstart(e); }, false);\r\n\t        canvas.addEventListener('touchend', function (e) { _this.touchend(e); }, false);\r\n\t        canvas.addEventListener('click', function (e) {\r\n\t            canvas.requestPointerLock = canvas.requestPointerLock;\r\n\t            canvas.requestPointerLock();\r\n\t        }, false);\r\n\t    };\r\n\t    Controls.prototype.lockChangeAlert = function (doc, canvas) {\r\n\t        var canvaselement = document.getElementById('gamecanvas');\r\n\t        if (doc.pointerLockElement === canvaselement) {\r\n\t            doc.addEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t        else {\r\n\t            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false);\r\n\t        }\r\n\t    };\r\n\t    return Controls;\r\n\t}());\r\n\texports.Controls = Controls;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(10);\r\n\tvar Angle = (function () {\r\n\t    function Angle(angle) {\r\n\t        this.angle = Angle.normalizeangle(angle);\r\n\t        this.sin = Math.sin(angle);\r\n\t        this.cos = Math.cos(angle);\r\n\t        this.tg = this.sin / this.cos;\r\n\t        this.ctg = this.cos / this.sin;\r\n\t        this.dx = this.cos > 0 ? 1 : 0;\r\n\t        this.dy = this.sin > 0 ? 1 : 0;\r\n\t    }\r\n\t    Angle.normalizeangle = function (angle) {\r\n\t        if (angle < 0)\r\n\t            angle += mathconst_1.PI2_0;\r\n\t        if (angle > mathconst_1.PI2_0)\r\n\t            angle -= mathconst_1.PI2_0;\r\n\t        return angle;\r\n\t    };\r\n\t    return Angle;\r\n\t}());\r\n\texports.Angle = Angle;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI0_5 = Math.PI / 2;\r\n\texports.PI1_0 = Math.PI;\r\n\texports.PI1_5 = 3 * Math.PI / 2;\r\n\texports.PI2_0 = 2 * Math.PI;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Map = (function () {\r\n\t    function Map(size, randparam) {\r\n\t        this.map = new Uint8Array(size * size);\r\n\t        this.size = size;\r\n\t        this.randomize(randparam);\r\n\t    }\r\n\t    Map.prototype.setvalue = function (x, y, value) {\r\n\t        var pos = this.size * y + x;\r\n\t        if (pos < this.map.length && pos >= 0) {\r\n\t            this.map[this.size * y + x] = value;\r\n\t        }\r\n\t    };\r\n\t    Map.prototype.getvalue = function (x, y) {\r\n\t        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n\t            var pos = this.size * y + x;\r\n\t            return this.map[pos];\r\n\t        }\r\n\t        return 0;\r\n\t    };\r\n\t    Map.prototype.randomize = function (randparam) {\r\n\t        for (var i = 0; i < this.map.length; i++) {\r\n\t            if (Math.random() < randparam) {\r\n\t                if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 5;\r\n\t                }\r\n\t                else if (Math.random() < 0.1) {\r\n\t                    this.map[i] = 4;\r\n\t                }\r\n\t                else if (Math.random() < 0.3) {\r\n\t                    this.map[i] = 3;\r\n\t                }\r\n\t                else if (Math.random() < 0.5) {\r\n\t                    this.map[i] = 2;\r\n\t                }\r\n\t                else {\r\n\t                    this.map[i] = 1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.map[i] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Map;\r\n\t}());\r\n\texports.Map = Map;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mathconst_1 = __webpack_require__(10);\r\n\tvar angle_1 = __webpack_require__(9);\r\n\tvar Player = (function () {\r\n\t    function Player(position, facing, fov) {\r\n\t        this.position = position;\r\n\t        this.facing = facing;\r\n\t        this.fov = fov;\r\n\t    }\r\n\t    Player.prototype.getrays = function (columns) {\r\n\t        var step = this.fov / columns;\r\n\t        var angle = this.facing.angle + this.fov / 2;\r\n\t        var rays = new Array();\r\n\t        for (var i = 0; i < columns; i++) {\r\n\t            rays.push(new angle_1.Angle(angle));\r\n\t            angle -= step;\r\n\t        }\r\n\t        return rays;\r\n\t    };\r\n\t    Player.prototype.rotateleft = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle + Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.rotateright = function (delta, movement) {\r\n\t        this.facing = new angle_1.Angle(this.facing.angle - Math.PI * movement * delta / 1200);\r\n\t    };\r\n\t    Player.prototype.correctposition = function (map, position) {\r\n\t        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n\t            position.x = this.position.x;\r\n\t        }\r\n\t        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n\t            position.y = this.position.y;\r\n\t        }\r\n\t        return position;\r\n\t    };\r\n\t    Player.prototype.moveforward = function (delta, map, run) {\r\n\t        var position = {\r\n\t            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.movebackward = function (delta, map) {\r\n\t        var position = {\r\n\t            x: this.position.x - this.facing.cos * delta / 500,\r\n\t            y: this.position.y - this.facing.sin * delta / 500\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.strafeleft = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle - mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.straferight = function (delta, map, run) {\r\n\t        var newfacing = new angle_1.Angle(this.facing.angle + mathconst_1.PI0_5);\r\n\t        var position = {\r\n\t            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n\t            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n\t        };\r\n\t        this.position = this.correctposition(map, position);\r\n\t    };\r\n\t    Player.prototype.initonmap = function (map) {\r\n\t        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n\t            this.position.x += 1;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getcontrols = function (controls, map, delta) {\r\n\t        if (controls.forward)\r\n\t            this.moveforward(delta, map, controls.run);\r\n\t        if (controls.backward)\r\n\t            this.movebackward(delta, map);\r\n\t        if (controls.rotateleft)\r\n\t            this.rotateleft(delta, 1);\r\n\t        if (controls.rotateright)\r\n\t            this.rotateright(delta, 1);\r\n\t        if (controls.mouserotateleft)\r\n\t            this.rotateleft(delta, controls.mouserotateleft);\r\n\t        if (controls.mouserotateright)\r\n\t            this.rotateright(delta, controls.mouserotateright);\r\n\t        if (controls.strafeleft)\r\n\t            this.strafeleft(delta, map, controls.run);\r\n\t        if (controls.straferight)\r\n\t            this.straferight(delta, map, controls.run);\r\n\t        controls.resetmouserotate();\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2cebb667c2b79a5891e3","import { Sprite } from './sprite';\r\nimport { AssetLoader } from './assetloader';\r\nimport { Scene } from './scene';\r\nimport { Controls } from './controls';\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\n\r\n\r\nlet fps = document.getElementById('fps')\r\nlet width = window.innerWidth < 1024 ? window.innerWidth : 1024\r\nlet gamesettins = {\r\n    width: width,\r\n    height: Math.floor(width / 1.8),\r\n    fov: 70 * Math.PI / 180,\r\n    drawingdistance: 25,\r\n    floorcolor1: '#000011',\r\n    floorcolor2: '#111122'\r\n}\r\n\r\nlet canvas = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\nlet ctx = canvas.getContext('2d')\r\nlet map = new Map(250, 0.3)\r\nlet player = new Player({ x: map.size / 2 + 0.25, y: map.size / 2 + 0.25 }, new Angle(0), gamesettins.fov)\r\nlet controls = new Controls()\r\nlet assetloader = new AssetLoader()\r\nlet scene = new Scene(ctx, gamesettins, assetloader)\r\nlet sprites = new Array<Sprite>()\r\nfor (let i = 0; i < map.size * 10; i++) {\r\n    sprites.push(\r\n        new Sprite({ \r\n                x: Math.random() * map.size, \r\n                y: Math.random() * map.size \r\n            }, \r\n            Math.floor(Math.random() * 5)\r\n        )\r\n    )\r\n}\r\n\r\ncanvas.width = gamesettins.width\r\ncanvas.height = gamesettins.height\r\ncanvas.style.width = `${gamesettins.width}px`\r\ncanvas.style.height = `${gamesettins.height}px`\r\ncontrols.bindevents(document, canvas)\r\nplayer.initonmap(map)\r\n\r\nlet objectsinrange = new Array<Sprite>()\r\nlet lastrender: number = Date.now()\r\nfunction render() {\r\n    let now = Date.now()\r\n    let delta = now - lastrender\r\n    lastrender = now\r\n\r\n    objectsinrange = new Array<Sprite>()\r\n    for (let i = 0; i < sprites.length; i++) {\r\n        if (\r\n            Math.abs(player.position.x - sprites[i].position.x) < gamesettins.drawingdistance &&\r\n            Math.abs(player.position.y - sprites[i].position.y) < gamesettins.drawingdistance\r\n        ) {\r\n            sprites[i].angle =  Angle.normalizeangle(Math.atan2(\r\n                sprites[i].position.y - player.position.y,\r\n                sprites[i].position.x - player.position.x\r\n            ))\r\n            objectsinrange.push(sprites[i])\r\n        }\r\n    }\r\n\r\n    player.getcontrols(controls, map, delta)\r\n    scene.renderframe(delta, map, player, objectsinrange)\r\n    requestAnimationFrame(render)\r\n    fps.innerText = (Math.floor(1000 / delta)).toString()\r\n}\r\nassetloader.loadall(render)\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.ts","import { Angle } from './angle';\r\nimport { IPoint } from './ipoint';\r\nexport class Sprite {\r\n\r\n    public angle: number\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/sprite.ts","export class AssetLoader {\r\n\r\n    constructor() {\r\n        this.wallssrcs = [\r\n            './assets/walls/wall1.jpg',\r\n            './assets/walls/wall2.jpg',\r\n            './assets/walls/wall3.jpg',\r\n            './assets/walls/wall4.jpg',\r\n            './assets/walls/wall5.jpg'\r\n        ]\r\n        this.walls = new Array<HTMLImageElement>()\r\n        for (let item in this.wallssrcs) this.walls.push(new Image())\r\n\r\n\r\n        this.spritessrcs = [\r\n            './assets/sprites/sprite1.png',\r\n            './assets/sprites/sprite2.png',\r\n            './assets/sprites/sprite3.png',\r\n            './assets/sprites/sprite4.png',\r\n            './assets/sprites/sprite5.png'\r\n        ]\r\n        this.sprites = new Array<HTMLImageElement>()\r\n        for (let item in this.spritessrcs) this.sprites.push(new Image())\r\n    }\r\n\r\n    private loaded = 0\r\n    private wallssrcs: Array<string>\r\n    public walls: Array<HTMLImageElement>\r\n    private spritessrcs: Array<string>\r\n    public sprites: Array<HTMLImageElement>\r\n\r\n    private isloaded() {\r\n        return this.loaded ==\r\n            this.walls.length +\r\n            this.sprites.length\r\n    }\r\n\r\n    public loadall(callback: () => void) {\r\n        for (let i in this.wallssrcs) {\r\n            this.walls[i].onload = () => {\r\n                this.loaded += 1\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.walls[i].src = this.wallssrcs[i]\r\n        }\r\n\r\n        for (let i in this.spritessrcs) {\r\n            this.sprites[i].onload = () => {\r\n                this.loaded += 1\r\n                if (this.isloaded()) callback()\r\n            }\r\n            this.sprites[i].src = this.spritessrcs[i]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/assetloader.ts","import { Sprite } from './sprite';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\nimport { Colision } from './colision';\r\nimport { AssetLoader } from './assetloader';\r\nimport { ISettings } from './isettings';\r\nimport { Map } from './map';\r\nimport { Player } from './player';\r\nimport { Controls } from './controls';\r\nimport { Ray } from './ray';\r\nimport { DistanceCalc } from './distancecalc';\r\n\r\nexport class Scene {\r\n\r\n    private lastrender: number\r\n    private height2: number\r\n    private wallheight: number\r\n\r\n    constructor(\r\n        private ctx: CanvasRenderingContext2D,\r\n        private settings: ISettings,\r\n        private assets: AssetLoader\r\n    ) {\r\n        this.lastrender = Date.now()\r\n        this.height2 = Math.floor(settings.height / 2)\r\n        this.wallheight = Math.floor(settings.height * 0.8)\r\n    }\r\n\r\n    private renderbackground() {\r\n        var grdceiling = this.ctx.createLinearGradient(0, 0, 0, this.height2);\r\n        grdceiling.addColorStop(0, '#aaaaaa');\r\n        grdceiling.addColorStop(1, '#222222');\r\n        this.ctx.fillStyle = grdceiling;\r\n        this.ctx.fillRect(0, 0, this.settings.width, this.height2)\r\n        this.ctx.fillStyle = this.settings.floorcolor1\r\n        this.ctx.fillRect(0, this.height2, this.settings.width, this.settings.height)\r\n    }\r\n\r\n    private renderwall(\r\n        row: number,\r\n        distance: number,\r\n        image: HTMLImageElement,\r\n        textureposition: number\r\n    ) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let top = Math.floor(this.height2 - height / 2)\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, row, top, 1, height)\r\n        if (row % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(row, top)\r\n            this.ctx.lineTo(row, this.settings.height - top)\r\n            this.ctx.lineWidth = 4\r\n            this.ctx.strokeStyle = '#000000'\r\n            this.ctx.fillStyle = '#000000'\r\n            this.ctx.globalAlpha = (distance / this.settings.drawingdistance) * 0.8\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n    }\r\n\r\n    private drawwall(left: number, distance: number, wall: Colision, player: Player) {\r\n        let modx = wall.point.x - Math.floor(wall.point.x)\r\n        let mody = wall.point.y - Math.floor(wall.point.y)\r\n        let textureposition = Math.abs(modx > mody ? modx : mody)\r\n        this.renderwall(left, distance, this.assets.walls[wall.type - 1], textureposition)\r\n    }\r\n\r\n    private drawobject(left: number, distance: number, object: Sprite, textureposition: number) {\r\n        let wallheight = Math.ceil(this.wallheight / distance)\r\n        let bottom = Math.floor(this.height2 + wallheight / 2)\r\n        let image = this.assets.sprites[object.type]\r\n        let texleft = Math.floor(textureposition * image.width)\r\n        let height = wallheight * 0.4\r\n        this.ctx.drawImage(image, texleft, 0, 1, image.height, left, bottom - height, 1, height)\r\n    }\r\n\r\n    private drawfloor(left: number, distance: number, bottom: number, useback: boolean) {\r\n        let height = Math.ceil(this.wallheight / distance)\r\n        let newbottom = Math.floor(this.settings.height - (this.height2 - height / 2))\r\n        if (useback && left % 3 == 0) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(left, bottom)\r\n            this.ctx.lineTo(left, newbottom)\r\n            this.ctx.lineWidth = 1\r\n            this.ctx.strokeStyle = this.settings.floorcolor2\r\n            this.ctx.strokeStyle = '#fff'\r\n            this.ctx.globalAlpha = 0.2\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n            this.ctx.globalAlpha = 1\r\n        }\r\n        return newbottom\r\n    }\r\n\r\n    public renderframe(delta: number, map: Map, player: Player, objects: Array<Sprite>) {\r\n        this.renderbackground()\r\n        let rays = player.getrays(this.settings.width)\r\n        let drawfloor = (Math.floor(player.position.x) + Math.floor(player.position.y)) % 2 == 0\r\n        for (let r = 0; r < rays.length; r++) {\r\n            let bottom = this.settings.height\r\n            let drawfloorray = drawfloor\r\n            let walldistance: number\r\n            let cos = Math.cos(player.facing.angle - rays[r].angle)\r\n            let colisions = Ray.cast(map, player.position, null, null, rays[r], this.settings.drawingdistance)\r\n            for (let colision of colisions) {\r\n                let distance = DistanceCalc.getdistance(player.position, colision.point) * cos\r\n                if (colision.type > 0) {\r\n                    walldistance = distance\r\n                    this.drawwall(r, distance, colision, player)\r\n                }\r\n                bottom = this.drawfloor(r, distance, bottom, drawfloorray)\r\n                drawfloorray = !drawfloorray\r\n            }\r\n            for (let object of objects) {\r\n                let distance = DistanceCalc.getdistance(player.position, object.position)\r\n                if (distance < this.settings.drawingdistance) {\r\n                    if (distance < 0.25) distance = 0.25\r\n                    let mdiff = Math.atan2(0.1, distance)\r\n                    let diff = (rays[r].angle - object.angle) / (2 * mdiff) + 0.5\r\n                    if (distance < walldistance && diff <= 1) {\r\n                        this.drawobject(r, distance, object, diff)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/scene.ts","import { IManhattanDist } from './imanhattandist';\r\nimport { IPoint } from './ipoint';\r\nimport { Colision } from './colision';\r\nimport { PI0_5, PI1_0, PI1_5 } from './mathconst'\r\nimport { Angle } from './angle';\r\nimport { Map } from './map';\r\n\r\nexport class Ray {\r\n\r\n    public static nearesty(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nexty = Math.floor(origin.y + facing.dy)\r\n        if (nexty == origin.y) nexty -= 1\r\n        let dy = nexty - origin.y\r\n        let dx = facing.ctg * dy\r\n        return {\r\n            x: dx + origin.x,\r\n            y: nexty,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static nearestx(origin: IPoint, facing: Angle): IManhattanDist {\r\n        let nextx = Math.floor(origin.x + facing.dx)\r\n        if (nextx == origin.x) nextx -= 1\r\n        let dx = nextx - origin.x\r\n        let dy = facing.tg * dx\r\n        return {\r\n            x: nextx,\r\n            y: dy + origin.y,\r\n            manhattandistance: Math.abs(dx) + Math.abs(dy)\r\n        }\r\n    }\r\n\r\n    public static cast(\r\n        map: Map,\r\n        origin: IPoint,\r\n        nexth: IManhattanDist,\r\n        nextv: IManhattanDist,\r\n        facing: Angle,\r\n        maxdistance: number\r\n    ): Colision[] {\r\n\r\n        if (maxdistance < 1) return []\r\n\r\n        let h = nexth || Ray.nearesty(origin, facing)\r\n        let v = nextv || Ray.nearestx(origin, facing)\r\n\r\n        if (h.manhattandistance < v.manhattandistance) {\r\n            v.manhattandistance -= h.manhattandistance\r\n            let type = map.getvalue(Math.floor(h.x), h.y - (facing.dy > 0 ? 0 : 1))\r\n            if (type > 0) {\r\n                return [new Colision(h, type)]\r\n            } else {\r\n                return [new Colision(h, type)]\r\n                    .concat(Ray.cast(map, h, null, v, facing, maxdistance - h.manhattandistance))\r\n            }\r\n        } else {\r\n            h.manhattandistance -= v.manhattandistance\r\n            let type = map.getvalue(v.x - (facing.dx > 0 ? 0 : 1), Math.floor(v.y))\r\n            if (type > 0) {\r\n                return [new Colision(v, type)]\r\n            } else {\r\n                return [new Colision(v, type)]\r\n                    .concat(Ray.cast(map, v, h, null, facing, maxdistance - v.manhattandistance))\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/ray.ts","import {IPoint} from './ipoint';\r\nexport class Colision {\r\n    constructor(\r\n        public point: IPoint,\r\n        public type: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/colision.ts","import { IPoint } from './ipoint';\r\nexport class DistanceCalc {\r\n    public static getdistance(a: IPoint, b: IPoint) {\r\n        return Math.sqrt(\r\n            (a.x - b.x) * (a.x - b.x) +\r\n            (a.y - b.y) * (a.y - b.y)\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/distancecalc.ts","export class Controls {\r\n    public rotateleft: boolean = false\r\n    public rotateright: boolean = false\r\n    public forward: boolean = false\r\n    public backward: boolean = false\r\n    public run: boolean = false\r\n    public strafeleft: boolean = false\r\n    public straferight: boolean = false\r\n    public mouserotateleft: number = 0\r\n    public mouserotateright: number = 0\r\n\r\n    public mousemove(e: MouseEvent) {\r\n        if (e.movementX < 0) {\r\n            this.mouserotateleft = -e.movementX / 5\r\n            this.mouserotateright = 0\r\n        } else if (e.movementX > 0) {\r\n            this.mouserotateleft = 0\r\n            this.mouserotateright = e.movementX / 5\r\n        }\r\n    }\r\n\r\n    public resetmouserotate() {\r\n        this.mouserotateleft = 0\r\n        this.mouserotateright = 0\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = true\r\n        if (e.keyCode == 68) this.strafeleft = true\r\n        if (e.keyCode == 39) this.rotateright = true\r\n        if (e.keyCode == 65) this.straferight = true\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = true\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = true\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public touchstart(e: TouchEvent) {\r\n        var t = e.touches[0];\r\n        this.touchend(e);\r\n        if (t.pageX < window.innerWidth * 0.333) this.rotateleft = true\r\n        else if (t.pageX < window.innerWidth * 0.666) this.forward = true\r\n        else this.rotateright = true\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public touchend(e: TouchEvent) {\r\n        this.rotateleft = false\r\n        this.rotateright = false\r\n        this.forward = false\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public keyup(e: KeyboardEvent) {\r\n        if (e.keyCode == 37) this.rotateleft = false\r\n        if (e.keyCode == 68) this.strafeleft = false\r\n        if (e.keyCode == 39) this.rotateright = false\r\n        if (e.keyCode == 65) this.straferight = false\r\n        if (e.keyCode == 38 || e.keyCode == 87) this.forward = false\r\n        if (e.keyCode == 40 || e.keyCode == 83) this.backward = false\r\n        this.run = e.shiftKey\r\n    }\r\n\r\n    public bindevents(doc: HTMLDocument, canvas: HTMLElement) {\r\n        doc.addEventListener('keydown', (e) => this.keydown(e), false)\r\n        doc.addEventListener('keyup', (e) => this.keyup(e), false)\r\n        doc.addEventListener('pointerlockchange', (e) => { this.lockChangeAlert(doc, canvas) }, false)\r\n        canvas.addEventListener('touchstart', (e) => { this.touchstart(e) }, false)\r\n        canvas.addEventListener('touchend', (e) => { this.touchend(e) }, false)\r\n        canvas.addEventListener('click', (e) => {\r\n            canvas.requestPointerLock = canvas.requestPointerLock\r\n            canvas.requestPointerLock()\r\n        }, false)\r\n    }\r\n\r\n    private mousemovefunction = (e: MouseEvent) => this.mousemove(e)\r\n    private lockChangeAlert(doc: HTMLDocument, canvas: HTMLElement) {\r\n        let canvaselement = <HTMLCanvasElement>document.getElementById('gamecanvas')\r\n        if (doc.pointerLockElement === canvaselement) {\r\n            doc.addEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        } else {\r\n            doc.removeEventListener(\"mousemove\", this.mousemovefunction, false)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/controls.ts","import { PI2_0 } from './mathconst';\r\n\r\nexport class Angle {\r\n    public angle: number\r\n    public sin: number\r\n    public cos: number\r\n    public tg: number\r\n    public ctg: number\r\n    public dx: number\r\n    public dy: number\r\n\r\n    constructor(angle: number) {\r\n        this.angle = Angle.normalizeangle(angle)\r\n        this.sin = Math.sin(angle)\r\n        this.cos = Math.cos(angle)\r\n        this.tg = this.sin / this.cos\r\n        this.ctg = this.cos / this.sin\r\n        this.dx = this.cos > 0 ? 1 : 0\r\n        this.dy = this.sin > 0 ? 1 : 0\r\n    }\r\n\r\n    public static normalizeangle(angle: number) {\r\n        if(angle < 0) angle += PI2_0\r\n        if(angle > PI2_0) angle -= PI2_0\r\n        return angle\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/angle.ts","export const PI0_5: number = Math.PI / 2\r\nexport const PI1_0: number = Math.PI    \r\nexport const PI1_5: number = 3 * Math.PI / 2 \r\nexport const PI2_0: number = 2 * Math.PI\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mathconst.ts","export class Map {\r\n    public map: Uint8Array\r\n    public size: number\r\n\r\n    constructor(size: number, randparam: number) {\r\n        this.map = new Uint8Array(size * size)\r\n        this.size = size\r\n\r\n        this.randomize(randparam)\r\n    }\r\n\r\n    public setvalue(x: number, y: number, value: number) {\r\n        let pos = this.size * y + x\r\n        if (pos < this.map.length && pos >= 0) {\r\n            this.map[this.size * y + x] = value\r\n        }\r\n    }\r\n\r\n    public getvalue(x: number, y: number) {\r\n        if (x >= 0 && y >= 0 && x < this.size && y < this.size) {\r\n            let pos = this.size * y + x\r\n            return this.map[pos]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    public randomize(randparam: number) {\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (Math.random() < randparam) {\r\n                if (Math.random() < 0.1) {\r\n                    this.map[i] = 5\r\n                } else if (Math.random() < 0.1) {\r\n                    this.map[i] = 4\r\n                } else if (Math.random() < 0.3) {\r\n                    this.map[i] = 3\r\n                } else if (Math.random() < 0.5) {\r\n                    this.map[i] = 2\r\n                } else {\r\n                    this.map[i] = 1\r\n                } \r\n            } else {\r\n                this.map[i] = 0\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/map.ts","import { PI0_5 } from './mathconst';\r\nimport { Map } from './map';\r\nimport { Controls } from './controls';\r\nimport { IPoint } from './ipoint';\r\nimport { Angle } from './angle';\r\n\r\nexport class Player {\r\n\r\n    constructor(\r\n        public position: IPoint,\r\n        public facing: Angle,\r\n        public fov: number) {\r\n    }\r\n\r\n    public getrays(columns: number) {\r\n        var step = this.fov / columns\r\n        var angle = this.facing.angle + this.fov / 2\r\n        var rays = new Array<Angle>()\r\n        for (let i = 0; i < columns; i++) {\r\n            rays.push(new Angle(angle))\r\n            angle -= step\r\n        }\r\n        return rays\r\n    }\r\n\r\n    public rotateleft(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle + Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    public rotateright(delta: number, movement: number) {\r\n        this.facing = new Angle(this.facing.angle - Math.PI * movement * delta / 1200)\r\n    }\r\n\r\n    private correctposition(map: Map, position: IPoint): IPoint {\r\n        if (map.getvalue(Math.floor(position.x), Math.floor(this.position.y)) > 0) {\r\n            position.x = this.position.x\r\n        } \r\n        if (map.getvalue(Math.floor(this.position.x), Math.floor(position.y)) > 0) {\r\n            position.y = this.position.y\r\n        }\r\n        return position\r\n    }\r\n\r\n    public moveforward(delta: number, map: Map, run: boolean) {\r\n        let position = {\r\n            x: this.position.x + this.facing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + this.facing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public movebackward(delta: number, map: Map) {\r\n        let position = {\r\n            x: this.position.x - this.facing.cos * delta / 500,\r\n            y: this.position.y - this.facing.sin * delta / 500\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public strafeleft(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle - PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public straferight(delta: number, map: Map, run: boolean) {\r\n        let newfacing = new Angle(this.facing.angle + PI0_5)\r\n        let position = {\r\n            x: this.position.x + newfacing.cos * delta / (run ? 250 : 500),\r\n            y: this.position.y + newfacing.sin * delta / (run ? 250 : 500)\r\n        }\r\n        this.position = this.correctposition(map, position)\r\n    }\r\n\r\n    public initonmap(map: Map) {\r\n        while (map.getvalue(Math.floor(this.position.x), Math.floor(this.position.y)) > 0) {\r\n            this.position.x += 1\r\n        }\r\n    }\r\n\r\n    public getcontrols(controls: Controls, map: Map, delta: number) {\r\n        if (controls.forward) this.moveforward(delta, map, controls.run)\r\n        if (controls.backward) this.movebackward(delta, map)\r\n        if (controls.rotateleft) this.rotateleft(delta, 1)\r\n        if (controls.rotateright) this.rotateright(delta, 1)\r\n        if (controls.mouserotateleft) this.rotateleft(delta, controls.mouserotateleft)\r\n        if (controls.mouserotateright) this.rotateright(delta, controls.mouserotateright)\r\n        if (controls.strafeleft) this.strafeleft(delta, map, controls.run)\r\n        if (controls.straferight) this.straferight(delta, map, controls.run)\r\n        controls.resetmouserotate()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/player.ts"],"sourceRoot":""}